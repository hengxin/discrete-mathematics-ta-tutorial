%!PS-Adobe-3.0
%%Creator: groff version 1.10
%%CreationDate: Sun Jul 27 19:19:43 1997
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%+ font Symbol
%%DocumentSuppliedResources: procset grops 1.10 0
%%Pages: 121
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.10 0
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Roman@0 ENC0/Times-Roman RE/Times-Italic@0 ENC0/Times-Italic RE
/Times-Bold@0 ENC0/Times-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(THE SETL PROGRAMMING LANGUAGE)174.465 314.2 S
/F1 10/Times-Italic@0 SF(Robert B. K. De)266.215 350.2 Q(war)-.15 E/F2
10/Times-Roman@0 SF 2.5<a931>252.56 374.2 S(979 All rights reserv)-2.5 E
(ed)-.15 E EP
%%Page: 1 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(INTR)266.15 130 Q(ODUCTION)-.3 E/F1 10
/Times-Roman@0 SF 1.208(SETL \(for SET Language\) is a high le)133 290.2
R -.15(ve)-.25 G 3.708(lg).15 G 1.208
(eneral purpose language which allo)-3.708 F 1.207(ws a lar)-.25 F(ge)
-.18 E -.25(va)133 302.2 S 2.074
(riety of programming problems to be solv).25 F 2.074(ed in an ef)-.15 F
2.074(\214cient manner with a minimum)-.25 F(amount of ef)133 314.2 Q
(fort.)-.25 E 1.095(This book describes the entire SETL language. The r\
eader is assumed to be f)133 330.4 R 1.095(amiliar with)-.1 F .234
(some programming language and to ha)133 342.4 R .535 -.15(ve a b)-.2 H
.235(asic kno).15 F .235(wledge of the principles of algorithmic)-.25 F
.135(programming, b)133 354.4 R .135(ut no adv)-.2 F .135(anced kno)-.25
F .134(wledge of programming languages is assumed. A mathe-)-.25 F .792
(matical background at the colle)133 366.4 R .792(ge algebra le)-.15 F
-.15(ve)-.25 G 3.292(li).15 G 3.292(ss)-3.292 G(uf)-3.292 E 3.292
(\214cient. In)-.25 F(particular)3.293 E 3.293(,n)-.4 G 3.293(op)-3.293
G .793(rior kno)-3.293 F(wl-)-.25 E .936(edge of set theory is required\
, although the constructions of SETL do frequently resemble)133 378.4 R
(those notations commonly used by mathematicians using set theory)133
390.4 Q(.)-.65 E 1.295
(Chapter I introduces the main features of the language in suf)133 406.6
R 1.295(\214cient detail that man)-.25 F 3.795(yp)-.15 G(ro-)-3.795 E
.315(grams can be written.)133 418.6 R .315
(Remaining chapters discuss v)5.315 F .314
(arious aspects of the language in detail.)-.25 F .214(Although the des\
cription in this book is complete, it is not a precise formal de\214nit\
ion. Ho)133 434.8 R(w-)-.25 E -2.15 -.25(ev e)133 446.8 T .8 -.4(r, t)
.25 H(here is an appendix which contains a formal description of the pe\
rmitted syntax.).4 E EP
%%Page: 2 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(CHAPTER 1)270.666 132.4 R
(ELEMENTS OF THE SETL LANGU)196.332 175.6 Q -.66(AG)-.72 G(E).66 E/F1 10
/Times-Roman@0 SF 1.118(This chapter gi)133 307 R -.15(ve)-.25 G 3.618
(sa).15 G 3.618(ni)-3.618 G 1.118(nformal surv)-3.618 F 1.418 -.15(ey o)
-.15 H 3.618(fm).15 G 1.118
(ost of the features of the SETL language. The)-3.618 F .187(features d\
escribed in this chapter are all included to the "SETL-S" subset of SET\
L.)108 319 R .187(Thus it can be)5.187 F
(assumed that the features described in this chapter are a)108 331 Q
-.25(va)-.2 G(ilable in all SETL implementations.).25 E/F2 10
/Times-Bold@0 SF 2.5(1.1. An)108 355 R(Intr)2.5 E(oductory Example)-.18
E F1 .237(The follo)133 371.2 R .237(wing is a small e)-.25 F .237
(xample of a complete SETL program. It is presented to gi)-.15 F .536
-.15(ve s)-.25 H(ome).15 E(perspecti)108 383.2 Q 1.302 -.15(ve t)-.25 H
3.502(ot).15 G 1.002(he presentation which follo)-3.502 F 1.003
(ws. It is not necessary to understand all the details of)-.25 F
(this program at this stage.)108 395.2 Q F2(pr)120.5 411.4 Q(ogram)-.18
E F1(primes;)2.5 E 2.5($T)120.5 435.4 S(his program prints out a list o\
f prime numbers which includes all primes)-2.5 E 2.5($l)120.5 447.4 S
(ess than a parameter v)-2.5 E(alue which is speci\214ed as input data.)
-.25 E F2 -.18(re)130.5 459.4 S(ad).18 E F1 117.765(\(n\); $)B
(read input parameter)2.5 E(primes :)130.5 471.4 Q/F3 10/Symbol SF(=)A
F1 1.666({})2.5 G 99.429(;$)-1.666 G(set of primes output so f)-96.929 E
(ar)-.1 E 2.5(p:)130.5 483.4 S F3(=)-2.5 E F1 125.415(2; $)2.5 F
(initial v)2.5 E(alue to test)-.25 E 2.5($L)120.5 507.4 S
(oop to test successi)-2.5 E .3 -.15(ve v)-.25 H(alues)-.1 E F2
(loop while)125.5 531.4 Q F1 2.5(p<n)2.5 G F2(do)A F1 2.5($l)79.145 G
(oop as long as p less than n)-2.5 E F2(if notexists)133 543.4 Q F1(t)
2.5 E F2(in)2.5 E F1(primes | p)2.5 E F2(mod)2.5 E F1(t)2.5 E F3(=)2.5 E
F1(0)2.5 E F2(then)2.5 E(print)140.5 555.4 Q F1 105.355(\(p\); $)B
(no di)2.5 E(visors, it')-.25 E 2.5(sap)-.55 G(rime)-2.5 E(primes)140.5
567.4 Q F2(with)2.5 E F1(:)A F3(=)A F1 74.305(p; $)2.5 F
(add it to set of primes)2.5 E F2(end if)133 579.4 Q F1(;)A 2.5(p:)130.5
591.4 S F3(=)-2.5 E F1 2.5(p+1)2.5 G 112.275(;$)-2.5 G(mo)-109.775 E .3
-.15(ve t)-.15 H 2.5(on).15 G -.15(ex)-2.5 G 2.5(tt).15 G(est v)-2.5 E
(alue)-.25 E F2(end loop;)130.5 603.4 Q(end pr)125.5 615.4 Q(ogram)-.18
E F1(primes;)2.5 E .793(This is not a particularly ef)108 635.8 R .793
(\214cient program, and it is not e)-.25 F -.15(ve)-.25 G 3.293(nt).15 G
.793(he easiest w)-3.293 F .793(ay of approaching the)-.1 F .255
(problem in SETL, b)108 647.8 R .256(ut it deliberately only uses a sma\
ll set of simple features. The $ acts as a com-)-.2 F(ment delimiter)108
659.8 Q 2.5(,t)-.4 G(he compiler ignores all te)-2.5 E
(xt on a line which follo)-.15 E(ws a dollar sign.)-.25 E F2(Chapter 1)
108 756 Q(The SETL Pr)79.06 E(ogramming Language)-.18 E -.1(Pa)94.16 G
(ge 2).1 E EP
%%Page: 3 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)94.16 G(ge 3).1 E/F1 10/Times-Roman@0
SF(No)133 130 Q 3.804(wt)-.25 G 1.304(hat we ha)-3.804 F 1.603 -.15
(ve s)-.2 H 1.303
(een one small program, we can study the features of the language in).15
F(more detail.)108 142 Q F0 2.5(1.2. Assignment)108 166 R
(Statements & Expr)2.5 E(essions)-.18 E F1 1.082(As in most programming\
 languages, a fundamental notion in SETL is that of assignment.)133
182.2 R(The form of an assignment statement in SETL is:)108 194.2 Q
(identi\214er :)144 218.2 Q/F2 10/Symbol SF(=)A F1 -.15(ex)2.5 G
(pression;).15 E 1.364(Statements are free form and may be entered an)
108 242.2 R 1.364(ywhere on a line, or split o)-.15 F -.15(ve)-.15 G
3.863(rl).15 G 1.363(ine boundaries)-3.863 F(\(e)108 254.2 Q .02
(xcept that a single tok)-.15 F .02(en, such as an identi\214er)-.1 F
2.521(,c)-.4 G .021(annot be split o)-2.521 F -.15(ve)-.15 G 2.521(ral)
.15 G .021(ine boundary\). As indicated)-2.521 F .294(in the abo)108
266.2 R .593 -.15(ve ex)-.15 H .293(ample, e).15 F -.15(ve)-.25 G .293(\
ry statement is terminated by a semicolon. Blanks may be used freely to)
.15 F .396(separate tok)108 278.2 R .396
(ens, and at least one blank or a line return must separate tok)-.1 F
.396(ens in the case where one)-.1 F(tok)108 290.2 Q
(en ends with an alphanumeric \(letter or digit\), and the ne)-.1 E
(xt one be)-.15 E(gins with an alphanumeric.)-.15 E .559(In the assignm\
ent statement, the identi\214er name is of arbitrary length, starting w\
ith a letter)133 306.4 R(,)-.4 E 1.204(and contains letters, digits or \
a special break character \(usually an underline character\).)108 318.4
R(Unlik)6.204 E(e)-.1 E .958(some other languages, a gi)108 330.4 R -.15
(ve)-.25 G 3.458(ni).15 G .958
(denti\214er is not associated with a particular datatype. Instead, the)
-3.458 F 2.265(type of the v)108 342.4 R 2.265(alue in a v)-.25 F 2.266
(ariable associated with the identi\214er is determined by the last v)
-.25 F(alue)-.25 E(assigned:)108 354.4 Q(abc :)128 382.6 Q F2(=)A F1 20
(4; $)2.5 F(abc no)2.5 E 2.5(wc)-.25 G(ontains an inte)-2.5 E(ger)-.15 E
(abc :)128 394.6 Q F2(=)A F1 12.5(4.5; $)2.5 F(abc no)2.5 E 2.5(wc)-.25
G(ontains a real)-2.5 E .406(The abo)108 422.8 R .706 -.15(ve l)-.15 H
.406(ines contain comments which are introduced by the $ character).15 F
2.905(.A)-.55 G .405(ll te)-2.905 F .405(xt follo)-.15 F .405(wing a $)
-.25 F .19(sign on a line is ignored. Another w)108 434.8 R .19
(ay of putting this is that the $ sign acts as an end of line signal)-.1
F(to the compiler)108 446.8 Q 2.5(.L)-.55 G
(ines with a $ in column 1 are entirely ignored \(e)-2.5 E
(xcept for being listed\).)-.15 E 1.177
(The datatypes we shall consider initially are inte)133 463 R(ger)-.15 E
3.677(,r)-.4 G 1.177(eal and string. Inte)-3.677 F 1.177(ger v)-.15 F
1.177(alues are of)-.25 F .17
(unlimited range \(actually limited only by the a)108 475 R -.25(va)-.2
G .171(ilable memory\). Real v).25 F .171(alues ha)-.25 F .471 -.15
(ve s)-.2 H .171(ome range and).15 F .854(precision de\214ned by the im\
plementation, and strings are arbitrary length sequences of characters)
108 487 R(\(lik)108 499 Q 3.737(em)-.1 G 1.238
(ost other languages, SETL does not e)-3.737 F 1.238
(xactly de\214ne the set of a)-.15 F -.25(va)-.2 G 1.238
(ilable characters, which).25 F(depends on the implementation\).)108 511
Q 1.212(Corresponding to these three datatypes are constant denotations\
 or literal v)108 527.2 R 1.212(alues, which may be)-.25 F(used where)
108 539.2 Q -.15(ve)-.25 G 2.5(rt).15 G(he corresponding v)-2.5 E
(alue is required. The follo)-.25 E(wing are e)-.25 E(xamples of v)-.15
E(alid constants:)-.25 E 72.5(123 $)128 567.4 R(inte)2.5 E(ger)-.15 E
12.5(134134145767671 $)128 579.4 R(inte)2.5 E(ger)-.15 E 30
(3.1415926535 $)128 591.4 R(real)2.5 E 48.25(0.45E+13 $)128 603.4 R
(real)2.5 E 66.96(\264abc\264 $)128 615.4 R(string)2.5 E 65.84
(\264123\264 $)128 627.4 R(string)2.5 E(\264don')128 639.4 Q -.18('t)
-.74 G 59.82<b424>.18 G(string)-57.32 E .13(The last e)108 667.6 R .13
(xample sho)-.15 F .13(ws ho)-.25 F 2.63(was)-.25 G .131
(ingle quote can be included in a string by writing tw)-2.63 F 2.631(oq)
-.1 G .131(uote marks)-2.631 F EP
%%Page: 4 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)94.16 G(ge 4).1 E/F1 10/Times-Roman@0
SF(together)108 130 Q 2.5(.T)-.55 G
(he null string which contains no characters is written as ')-2.5 E('.)
-.74 E 1.958(Expressions are b)133 146.2 R 1.957(uilt up from constants\
, identi\214ers and operators, using parentheses for)-.2 F .009
(grouping in the usual manner)108 158.2 R 5.009(.T)-.55 G .009(he follo)
-5.009 F .009(wing list sho)-.25 F .01
(ws the most commonly used binary operators,)-.25 F
(which compute a result from tw)108 170.2 Q 2.5(oo)-.1 G(perand v)-2.5 E
(alues:)-.25 E/F2 10/Times-Italic@0 SF(Binary Inte)187.775 198.4 Q -.1
(ge)-.4 G 2.5(rO).1 G(per)-2.5 E(ator)-.15 E(s)-.1 E F1 88.32(+I)210.275
222.4 S(nte)-88.32 E(ger addition)-.15 E/F3 10/Symbol SF(-)210.275 234.4
Q F1(Inte)88.47 E(ger subtraction)-.15 E 88.96(*I)210.275 246.4 S(nte)
-88.96 E(ger multiplication)-.15 E 91.18(/I)210.275 258.4 S(nte)-91.18 E
(ger di)-.15 E(vision, real result)-.25 E F0(di)210.275 270.4 Q(v)-.1 E
F1(Inte)80.72 E(ger di)-.15 E(vision, inte)-.25 E(ger result)-.15 E
81.46(** Inte)210.275 282.4 R(ger e)-.15 E(xponentiation)-.15 E F0(mod)
210.275 294.4 Q F1(Inte)75.07 E(ger remainder)-.15 E F2
(Binary Real Oper)187.775 318.4 Q(ator)-.15 E(s)-.1 E F1 88.32(+R)
210.275 342.4 S(eal addition)-88.32 E F3(-)210.275 354.4 Q F1
(Real subtraction)88.47 E 88.96(*R)210.275 366.4 S(eal multiplication)
-88.96 E 91.18(/R)210.275 378.4 S(eal di)-91.18 E(vision)-.25 E 81.46
(** Real)210.275 390.4 R -.15(ex)2.5 G(ponentiation).15 E F2
(Binary String Oper)187.775 414.4 Q(ator)-.15 E(s)-.1 E F1 88.32(+S)
210.275 438.4 S(tring concatenation)-88.32 E 1.623
(The meaning of an operator depends on the datatypes of the operands. F)
108 470.8 R 1.623(or e)-.15 F 1.623(xample, + means)-.15 F .957
(either inte)108 482.8 R .957(ger addition, real addition, or string co\
ncatenation, depending on the operands.)-.15 F(Arith-)5.958 E 1.294
(metic operators must be applied to either real or inte)108 494.8 R
1.293(ger operands. If an operation is to be per)-.15 F(-)-.2 E .97
(formed on one inte)108 506.8 R .97(ger and one real v)-.15 F .97
(alue \(for e)-.25 F .97(xample, addition\), then the)-.15 F F0(\215oat)
3.47 E F1(or)3.47 E F0<8c78>3.47 E F1(operators)3.47 E .554
(must be used as described later)108 518.8 R 3.053(.T)-.55 G .553
(he one e)-3.053 F .553(xception to this rule occurs with e)-.15 F .553
(xponentiation, which)-.15 F(allo)108 530.8 Q(ws a real v)-.25 E
(alue to be raised to a non-ne)-.25 E -.05(ga)-.15 G(ti).05 E .3 -.15
(ve i)-.25 H(nte).15 E(ger v)-.15 E(alue.)-.25 E .633
(Some operators \(such as)133 547 R F0(di)3.133 E(v)-.1 E F1 3.133(\)a)C
.633(nd other tok)-3.133 F .633
(ens in SETL are written in capital letters in this)-.1 F 1.455
(book. This means that the)108 559 R 3.955(ya)-.15 G 1.455(re k)-3.955 F
-.15(ey)-.1 G -.1(wo).15 G 1.454
(rds, and are written in capital letters to distinguish them).1 F .912
(from identi\214ers.)108 571 R(An)5.912 E 3.412(ys)-.15 G .912
(uch names are reserv)-3.412 F .912(ed w)-.15 F .912
(ords, in the sense that the)-.1 F 3.413(ym)-.15 G .913
(ay not be used as)-3.413 F .28
(identi\214er names. A complete list of reserv)108 583 R .28(ed w)-.15 F
.28(ords is gi)-.1 F -.15(ve)-.25 G 2.78(ni).15 G 2.78(nA)-2.78 G .28
(ppendix nn. When the program is)-2.78 F .253
(actually entered, the compiler ignores cases, so that both reserv)108
595 R .254(ed w)-.15 F .254(ords and identi\214er names may)-.1 F
(be entered in upper case or lo)108 607 Q(wer case or e)-.25 E -.15(ve)
-.25 G 2.5(ni).15 G 2.5(nam)-2.5 G(ixture of cases.)-2.5 E
(The string concatenation operator \(+\) joins tw)133 623.2 Q 2.5(os)-.1
G(trings together:)-2.5 E EP
%%Page: 5 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)94.16 G(ge 5).1 E/F1 10/Times-Roman@0
SF 2.5(a:)128 130 S/F2 10/Symbol SF(=)-2.5 E F1('abc';)2.5 E 2.5(b:)128
142 S F2(=)-2.5 E F1('cd';)2.5 E 2.5(c:)128 154 S F2(=)-2.5 E F1 2.5
(a+b)2.5 G 15.46(;$)-2.5 G 2.5(cn)-12.96 G .5 -.25(ow c)-2.5 H
(ontains 'abccd').25 E 3.827(As)108 186.4 S 1.327(pecial set of operato\
rs, called assigning operators, not only yield a v)-3.827 F 1.327
(alue, b)-.25 F 1.326(ut also store the)-.2 F -.25(va)108 198.4 S .477(\
lue into the left operand, which must be appropriate for this purpose \
\(e.g.).25 F .478(an identi\214er\).)5.478 F(There)5.478 E .591
(is one such operator corresponding to each binary operator)108 210.4 R
3.091(.T)-.55 G .59(he name of an assigning operator is)-3.091 F .627
(formed by appending the characters :)108 222.4 R F2(=)A F1 .627
(to the usual operator name.)3.127 F -.15(Fo)5.627 G 3.127(re).15 G .627
(xample, +:)-3.277 F F2(=)A F1 .627(is the addi-)3.127 F
(tion \(or concatenation\) assigning operator which may be used as sho)
108 234.4 Q(wn in the follo)-.25 E(wing e)-.25 E(xample:)-.15 E 2.5(a:)
128 262.6 S F2(=)-2.5 E F1 36.41(3; $)2.5 F(a)2.5 E F2(=)2.5 E F1(3)2.5
E 2.5(a+)128 274.6 S(:)-2.5 E F2(=)A F1 30.77(4; $)2.5 F(a)2.5 E F2(=)
2.5 E F1(7)2.5 E 2.5(b:)128 286.6 S F2(=)-2.5 E F1 2.5(a+)2.5 G(:)-2.5 E
F2(=)A F1 12.5(1; $)2.5 F(a)2.5 E F2(=)2.5 E F1(8, b)2.5 E F2(=)2.5 E F1
(8)2.5 E .546(As indicated by the last line abo)108 319 R -.15(ve)-.15 G
3.046(,a).15 G .545(ssigning operators can be used within an e)-3.046 F
.545(xpression, as well)-.15 F .992(as standing alone in a statement.)
108 331 R(Actually)5.992 E 3.492(,t)-.65 G .993
(he assignment operator itself is a special case of an)-3.492 F
(assigning operator)108 343 Q 2.5(,a)-.4 G
(nd may also be used within an e)-2.5 E(xpression:)-.15 E 2.5(a:)144 367
S F2(=)-2.5 E F1 2.5(3+b:)2.5 G F2(=)-2.5 E F1 2.5(5+2)2.5 G 32.96(;$)
-2.5 G(a)-30.46 E F2(=)2.5 E F1(10, b)2.5 E F2(=)2.5 E F1(7)2.5 E
(Unary operators compute a v)108 391 Q
(alue from a single operand and are written in front of the operator:)
-.25 E/F3 10/Times-Italic@0 SF(Unary Inte)179.01 419.2 Q -.1(ge)-.4 G
2.5(rO).1 G(per)-2.5 E(ator)-.15 E(s)-.1 E F1 84.15(+P)204.01 443.2 S
(ositi)-84.15 E .3 -.15(ve \()-.25 H(no ef).15 E(fect\))-.25 E F2(-)
204.01 455.2 Q F1(Ne)84.3 E -.05(ga)-.15 G(tion).05 E F0(str)204.01
467.2 Q F1(String equi)78.13 E -.25(va)-.25 G(lent).25 E F0(\215oat)
204.01 479.2 Q F1(Con)70.9 E -.15(ve)-.4 G(rts string to real).15 E F0
(type)204.01 491.2 Q F1(Gi)71.46 E -.15(ve)-.25 G 2.5(ss).15 G
(tring 'INTEGER')-2.5 E F3(Unary Real Oper)179.01 515.2 Q(ator)-.15 E(s)
-.1 E F1 84.15(+P)204.01 539.2 S(ositi)-84.15 E .3 -.15(ve \()-.25 H
(no ef).15 E(fect\))-.25 E F2(-)204.01 551.2 Q F1(Ne)84.3 E -.05(ga)-.15
G(tion).05 E F0(ceil)204.01 563.2 Q F1(Ceiling)75.35 E F0(\215oor)204.01
575.2 Q F1(Floor)69.79 E F0(str)204.01 587.2 Q F1(String equi)78.13 E
-.25(va)-.25 G(lent).25 E F0<8c78>204.01 599.2 Q F1 -.35(Tr)79.23 G
(uncates to corresponding inte).35 E(ger)-.15 E F0(type)204.01 611.2 Q
F1(Gi)71.46 E -.15(ve)-.25 G 2.5(ss).15 G(tring 'REAL)-2.5 E(')-.92 E F3
(Unary String Oper)179.01 635.2 Q(ator)-.15 E(s)-.1 E EP
%%Page: 6 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)94.16 G(ge 6).1 E/F1 10/Times-Roman@0
SF 84.79(#N)204.01 142 S(umber of characters \(inte)-84.79 E(ger\))-.15
E F0 -.1(va)204.01 154 S(l).1 E F1(Real or inte)77.11 E(ger equi)-.15 E
-.25(va)-.25 G(lent).25 E F0(type)204.01 166 Q F1(Gi)71.46 E -.15(ve)
-.25 G 2.5(ss).15 G(tring 'STRING')-2.5 E(The)108 186.4 Q F0(str)4.552 E
F1 2.052(operator yields a string representation of an inte)4.552 F
2.052(ger or real operand.)-.15 F F0 -.92(Va)7.052 G(r).92 E F1(con)
4.552 E -.15(ve)-.4 G 2.052(rts a).15 F
(numeric string into its corresponding real or inte)108 198.4 Q(ger v)
-.15 E(alue:)-.25 E 2.5(a:)128 226.6 S/F2 10/Symbol SF(=)-2.5 E F0(str)
2.5 E F1(\(2 + 3\);)2.5 E 2.5($a)20.2 G F2(=)A F1('5')2.5 E 2.5(b:)128
238.6 S F2(=)-2.5 E F0 -.1(va)2.5 G(l).1 E F1 16.76('1234'; $)2.5 F(b)
2.5 E F2(=)2.5 E F1(1234)2.5 E 2.5(c:)128 250.6 S F2(=)-2.5 E F0(str)2.5
E F1 12.5(003.000; $)2.5 F(c)2.5 E F2(=)2.5 E F1('3.0')2.5 E F0(Ceil)108
278.8 Q F1 .311(applied to a real gi)2.811 F -.15(ve)-.25 G 2.811(st).15
G .312(he smallest inte)-2.811 F .312
(ger which is not less than the operand, and)-.15 F F0(\215oor)2.812 E
F1(gi)2.812 E -.15(ve)-.25 G(s).15 E 1.165(the lar)108 290.8 R 1.165
(gest inte)-.18 F 1.165(ger which is not greater than the operand.)-.15
F F0<8c78>6.164 E F1(con)3.664 E -.15(ve)-.4 G 1.164
(rts a real to a corresponding).15 F(inte)108 302.8 Q(ger v)-.15 E
(alue by dropping the fractional part, if an)-.25 E -.65(y.)-.15 G 2.5
(a:)128 331 S F2(=)-2.5 E F0(ceil)2.5 E F1 23.55(3.7; $)2.5 F(a)2.5 E F2
(=)2.5 E F1(4.0)2.5 E 2.5(a:)128 343 S F2(=)-2.5 E F0(ceil)2.5 E F2(-)
2.5 E F1 18.06(3.7; $)B(a)2.5 E F2 2.5(=-)2.5 G F1(3.0)-2.5 E 2.5(a:)128
355 S F2(=)-2.5 E F0(\215oor)2.5 E F1 17.99(3.7; $)2.5 F(a)2.5 E F2(=)
2.5 E F1(3.0)2.5 E 2.5(a:)128 367 S F2(=)-2.5 E F0(\215oor)2.5 E F2(-)
2.5 E F1 12.5(3.7; $)B(a)2.5 E F2 2.5(=-)2.5 G F1(4.0)-2.5 E 2.5(a:)128
379 S F2(=)-2.5 E F0<8c78>2.5 E F1 27.43(3.7; $)2.5 F(a)2.5 E F2(=)2.5 E
F1(3.0)2.5 E 2.5(a:)128 391 S F2(=)-2.5 E F0<8c78>2.5 E F2(-)2.5 E F1
21.94(3.7; $)B(a)2.5 E F2 2.5(=-)2.5 G F1(3.0)-2.5 E
(Strings may be sliced to e)108 419.2 Q
(xtract substrings. The format is:)-.15 E(string\(a..b\))144 443.2 Q
1.336(The e)108 467.2 R 1.337(xpressions a and b are inte)-.15 F 1.337
(gers which select the starting and ending character in the sub-)-.15 F
(string. F)108 479.2 Q(or e)-.15 E(xample:)-.15 E(abc :)144 503.2 Q F2
(=)A F1 -.18('t)2.5 G(he quick bro).18 E(wn fox';)-.25 E(cde :)144 515.2
Q F2(=)A F1 4.03(abc\(5..8\); $)2.5 F(cde)2.5 E F2(=)2.5 E F1('quic')2.5
E(The follo)108 539.2 Q(wing def)-.25 E(ault slices are allo)-.1 E(wed:)
-.25 E 47.43(abc\(5\) $)128 567.4 R(same as abc\(5..5\))2.5 E(cde :)128
579.4 Q F2(=)A F1 17.5(abc\(5\); $)2.5 F(cde)2.5 E F2(=)2.5 E F1('q')2.5
E 42.43(abc\(5..\) $)128 591.4 R(means 5 to end of string)2.5 E(cde :)
128 603.4 Q F2(=)A F1 12.5(abc\(5..\); $)2.5 F(cde)2.5 E F2(=)2.5 E F1
('quick bro)2.5 E(wn fox')-.25 E .43(These substring notations can also\
 be used on the left side of an assignment statement. Note from)108
631.6 R(the follo)108 643.6 Q(wing e)-.25 E
(xamples that such assignments can shorten or lengthen strings:)-.15 E
EP
%%Page: 7 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)94.16 G(ge 7).1 E/F1 10/Times-Roman@0
SF(abc :)128 130 Q/F2 10/Symbol SF(=)A F1('hello';)2.5 E(abc\(3..4\) :)
128 142 Q F2(=)A F1 12.5('xyz'; $)2.5 F(abc)2.5 E F2(=)2.5 E F1('he)2.5
E(xyzo')-.15 E(abc\(4..\) :)128 154 Q F2(=)A F1 24.16('m'; $)2.5 F(abc)
2.5 E F2(=)2.5 E F1('he)2.5 E(xm')-.15 E F0 2.5(1.3. Err)108 194.2 R
(ors & Omega)-.18 E F1 .461(Improper operations, such as applying the /\
 operator to string operands, normally cause ter)133 210.4 R(-)-.2 E
.509(mination of the program with an appropriate error message.)108
222.4 R .509(In some implementations, there may)5.509 F .254(be a pro)
108 234.4 R .254(vision for optionally continuing e)-.15 F -.15(xe)-.15
G .255(cution follo).15 F .255(wing such an error)-.25 F 2.755(,t)-.4 G
.255(he details of such pro-)-2.755 F .83(visions are considered to be \
part of the implementation rather than the SETL language itself.)108
246.4 R(In)5.83 E .145
(this book, the phrases "causes an error" and "error results" al)108
258.4 R -.1(wa)-.1 G .146(ys refer to such a situation, and the).1 F
(details of the implementation must be consulted to determine e)108
270.4 Q(xactly what happens.)-.15 E .809(In addition to this class of e\
rrors, there is a special unde\214ned state called)133 286.6 R F0(om)
3.308 E F1 .808(\(for ome)3.308 F -.05(ga)-.15 G(\).).05 E .564
(Identi\214ers which ha)108 298.6 R .864 -.15(ve n)-.2 H .564
(ot been set to an).15 F 3.065(yp)-.15 G .565(articular v)-3.065 F .565
(alue are in this unde\214ned state, and may be)-.25 F .217
(thought of as containing the v)108 310.6 R(alue)-.25 E F0(om,)2.717 E
F1 .217(although strictly speaking,)2.717 F F0(om)2.717 E F1 .217
(is not a v)2.717 F .217(alue \(b)-.25 F .217(ut rather the)-.2 F
(absence of an)108 322.6 Q 2.5(yv)-.15 G(alue\).)-2.75 E .49
(If an identi\214er contains a v)133 338.8 R .49(alue \(other than)-.25
F F0(om)2.99 E F1 .49(\), it may be reset to an unde\214ned state by an)
B(assignment of the form:)108 350.8 Q 2.5(a:)144 374.8 S F2(=)-2.5 E F0
(om)2.5 E F1 -4.36 2.18(;$ a i)D 2.5(sn)-2.18 G .5 -.25(ow u)-2.5 H
(nde\214ned).25 E(An)108 398.8 Q 2.828(ya)-.15 G .328
(ttempt to perform an operation on the unde\214ned v)-2.828 F .327
(alue causes an error)-.25 F 2.827(.T)-.55 G .327(he one e)-2.827 F .327
(xception to)-.15 F .462(this rule is that there is a pro)108 410.8 R
.463(vision for using the equality operator to test whether a gi)-.15 F
-.15(ve)-.25 G 2.963(nv).15 G .463(alue is)-3.213 F(unde\214ned or not.)
108 422.8 Q F0 2.5(1.4. T)108 446.8 R(uples)-.92 E F1 3.242(At)133 463 S
.742(uple is an ordered sequence of zero or more v)-3.242 F 3.242
(alues. T)-.25 F .741(uples in SETL are similar to one)-.45 F
(dimensional v)108 475 Q(ectors in other programming languages, b)-.15 E
(ut are more \215e)-.2 E(xible.)-.15 E 3.518(At)133 491.2 S 1.018
(uple may be created using the tuple brack)-3.518 F 1.018
(ets [ and ]. The follo)-.1 F 1.018(wing e)-.25 F 1.019
(xample assigns a)-.15 F(four element tuple to the v)108 503.2 Q
(ariable associated with identi\214er t:)-.25 E 2.5(t:)144 527.2 S F2(=)
-2.5 E F1([1, 9, 'abc', [1, 5]];)2.5 E 1.764(As sho)108 551.2 R 1.763
(wn, the tuple can contain an)-.25 F 4.263(yv)-.15 G 1.763(alues, e)
-4.513 F -.15(ve)-.25 G 4.263(no).15 G 1.763(ther tuple v)-4.263 F 1.763
(alues, and may be of arbitrary)-.25 F(length.)108 563.2 Q .213
(In some implementations, the characters for the tuple brack)133 579.4 R
.213(ets may not be a)-.1 F -.25(va)-.2 G .213(ilable. T).25 F 2.713(od)
-.8 G(eal)-2.713 E 1.029(with this possibility)108 591.4 R 3.529(,t)-.65
G 1.029(he alternate sequences \(/ and /\) can be used as replacements,\
 so the abo)-3.529 F -.15(ve)-.15 G(assignment could ha)108 603.4 Q .3
-.15(ve b)-.2 H(een written:).15 E 2.5(t:)144 627.4 S F2(=)-2.5 E F1
(\(/ 1, 9, 'abc', \(/ 1, 5 /\) /\);)2.5 E(Indi)108 651.4 Q .143
(vidual elements of a tuple can be e)-.25 F .143
(xtracted by subscripting, and subscripting on the left side of)-.15 F
(an assignment allo)108 663.4 Q
(ws a speci\214ed element to be modi\214ed:)-.25 E EP
%%Page: 8 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)94.16 G(ge 8).1 E/F1 10/Times-Roman@0
SF 2.5(t:)128 130 S/F2 10/Symbol SF(=)-2.5 E F1([1,9,)2.5 E('abc',)-.7 E
-.5('d)-.7 G -1.95(ef '];).5 F 2.5(x:)128 142 S F2(=)-2.5 E F1 58.62
(t\(3\); $)2.5 F(x)2.5 E F2(=)2.5 E F1('abc')2.5 E(t\(4\) :)128 154 Q F2
(=)A F1 58.62(0; $)2.5 F(t)2.5 E F2(=)2.5 E F1([1,9,)2.5 E('abc',0])-.7
E .433(Note that ordinary parentheses are used for subscripting, not tu\
ple brack)108 182.2 R 2.933(ets. If)-.1 F 2.932(an)2.933 G(on-e)-2.932 E
.432(xistent ele-)-.15 F .164(ment \(e.g. t\(7\) in the abo)108 194.2 R
.464 -.15(ve c)-.15 H .164(ase\) is selected, then).15 F F0(om)2.664 E
F1 .165(is obtained as a result. It is perfectly v)2.665 F .165(alid to)
-.25 F(assign a v)108 206.2 Q(alue to a non-e)-.25 E
(xistent element, and may result in increasing the length of the tuple:)
-.15 E 2.5(t:)128 234.4 S F2(=)-2.5 E F1([1,9,)2.5 E('abc',0];)-.7 E
(t\(5\) :)128 246.4 Q F2(=)A F1 44.84(5; $)2.5 F(t)2.5 E F2(=)2.5 E F1
([1,9,)2.5 E('abc',0,5])-.7 E .874(If such an assignment creates "holes\
" in a tuple, the missing element v)108 274.6 R .873
(alues are set to unde\214ned)-.25 F 1.152(\(i.e. to contain)108 286.6 R
F0(om\).)3.652 E F1 1.153
(There is no maximum size of a tuple, although the a)6.152 F -.25(va)-.2
G 1.153(ilable memory will).25 F .532(limit the size in practice.)108
298.6 R .531(It is possible to unde\214ne a pre)5.531 F .531
(viously de\214ned element by assigning)-.25 F F0(om)3.031 E F1 .215
(to it. This will either create a "hole" in the tuple v)108 310.6 R .216
(alue, or it will decrease the length of the tuple in)-.25 F
(the case where the last element is unde\214ned in this manner)108 322.6
Q(.)-.55 E(The follo)133 338.8 Q
(wing operators can be applied to tuple operands:)-.25 E/F3 10
/Times-Italic@0 SF(Binary T)185.375 367 Q(uple Oper)-.55 E(ator)-.15 E
(s)-.1 E F1 82.17(+T)207.875 391 S(uple concatenation)-82.62 E F3
(Unary T)185.375 415 Q(uple Oper)-.55 E(ator)-.15 E(s)-.1 E F1 82.81(#I)
207.875 439 S(nde)-82.81 E 2.5(xo)-.15 G 2.5(fh)-2.5 G
(ighest de\214ned element)-2.5 E F0(type)207.875 451 Q F1
(Returns the string ')69.48 E F0(tuple)A F1(')A .215
(The concatenation operator + joins tw)108 479.2 R 2.714(ot)-.1 G .214
(uples end to end to yield a ne)-2.714 F 2.714(wt)-.25 G .214
(uple as sho)-2.714 F .214(wn by the fol-)-.25 F(lo)108 491.2 Q(wing e)
-.25 E(xample:)-.15 E 2.5(a:)128 519.4 S F2(=)-2.5 E F1([1,2,3];)2.5 E
2.5(b:)128 531.4 S F2(=)-2.5 E F1([6,7];)2.5 E 2.5(c:)128 543.4 S F2(=)
-2.5 E F1 2.5(a+b)2.5 G 21.58(;$)-2.5 G(c)-19.08 E F2(=)2.5 E F1
([1,2,3,6,7])2.5 E .257(The cardinality operator # gi)108 571.6 R -.15
(ve)-.25 G 2.757(st).15 G .257(he inde)-2.757 F 2.758(xo)-.15 G 2.758
(ft)-2.758 G .258
(he highest de\214ned element. This will be equal to the)-2.758 F(numbe\
r of de\214ned elements in the case where the tuple contains no "holes"\
.)108 583.6 Q(Subtuples can be e)133 599.8 Q
(xtracted using a notation similar to that used in e)-.15 E
(xtracting a substring:)-.15 E 2.5(a:)128 628 S F2(=)-2.5 E F1
([1,2,3,4,5,6,7,8,9];)2.5 E 2.5(b:)128 640 S F2(=)-2.5 E F1 57.5
(a\(6..8\); $)2.5 F(b)2.5 E F2(=)2.5 E F1([6,7,8])2.5 E EP
%%Page: 9 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)94.16 G(ge 9).1 E/F1 10/Times-Roman@0
SF 2.5(c:)128 130 S/F2 10/Symbol SF(=)-2.5 E F1 63.06(a\(7..\); $)2.5 F
(c)2.5 E F2(=)2.5 E F1([7,8,9])2.5 E 2.5(d:)128 142 S F2(=)-2.5 E F1
52.5(a\(8..11\); $)2.5 F(d)2.5 E F2(=)2.5 E F1([8,9])2.5 E .415
(These subtuple operations e)108 170.2 R .414
(xtend to use on the left side of assignments in the same manner as for)
-.15 F(substring assignments:)108 182.2 Q 2.5(t:)128 210.4 S F2(=)-2.5 E
F1([1,2,3,4,5,6];)2.5 E(t\(2..5\) :)128 222.4 Q F2(=)A F1 15.84
([7,10]; $)2.5 F(t)2.5 E F2(=)2.5 E F1([1,7,10,6])2.5 E(t\(3..\) :)128
234.4 Q F2(=)A F1 1.666([])2.5 G 39.174(;$)-1.666 G(t)-36.674 E F2(=)2.5
E F1([1,7])2.5 E .23
(The null tuple \(which contains no elements\) is written as [)108 262.6
R .231(], i.e. a tuple with no elements.)1.666 F .231(If the #)5.231 F
.829(operator is applied to a null tuple v)108 274.6 R .829
(alue, the result is zero.)-.25 F 3.329(At)5.829 G .829
(ypical technique is to create tuple)-3.329 F -.25(va)108 286.6 S .689
(lues by \214rst assigning [).25 F 3.189(]t)1.666 G 3.189(oav)-3.189 G
.689(ariable, then e)-3.439 F -.15(xe)-.15 G .689
(cuting a series of assignments which de\214ne the).15 F
(required element v)108 298.6 Q(alues.)-.25 E 5.066(As)133 314.8 S 2.566
(pecial notation is a)-5.066 F -.25(va)-.2 G 2.566
(ilable for constructing tuples whose v).25 F 2.565(alues consist of re)
-.25 F(gular)-.15 E(sequences of inte)108 326.8 Q(gers as sho)-.15 E
(wn by the follo)-.25 E(wing e)-.25 E(xamples:)-.15 E 20([1..10] same)
128 355 R 12.5(as [1,2,3,4,5,6,7,8,9,10])2.5 F 12.5([1,3..12] same)128
367 R 12.5(as [1,3,5,7,9,11])2.5 F 25([2..1] same)128 379 R 12.5(as [)
2.5 F(])1.666 E 17.5([9,8..1] same)128 391 R 12.5
(as [9,8,7,6,5,4,3,2,1])2.5 F 17.5([9,7..1] same)128 403 R 12.5
(as [9,7,5,3,1])2.5 F(The general form of this abbre)108 431.2 Q
(viation is:)-.25 E([\214rst,ne)144 455.2 Q(xt .. last])-.15 E 1.047
(The e)108 479.2 R 1.047(xpression \214rst gi)-.15 F -.15(ve)-.25 G
3.547(st).15 G 1.047(he \214rst v)-3.547 F 1.047
(alue generated in the sequence. The e)-.25 F 1.048(xpression ne)-.15 F
1.048(xt implies)-.15 F .385(both the direction of the sequence \(ascen\
ding or descending\) and the step between successi)108 491.2 R .685 -.15
(ve e)-.25 H(le-).15 E .727(ments. The e)108 503.2 R .728
(xpression last gi)-.15 F -.15(ve)-.25 G 3.228(st).15 G .728(he limit v)
-3.228 F .728(alue \(either the maximum for an ascending sequence,)-.25
F 1.793(or the minimum for a descending sequence\). The ne)108 515.2 R
1.793(xt e)-.15 F 1.793(xpression, together with its preceding)-.15 F
.656(comma, may be omitted for ascending sequences with a step of 1. As\
 we shall see in a later sec-)108 527.2 R(tion, tuples of this type pla\
y an important role in constructing loops.)108 539.2 Q -.45(Tu)133 555.4
S .221(ples may appear on the left side of an assignment statement, pro)
.45 F .22(viding that the right hand)-.15 F(side is a tuple v)108 567.4
Q(alue. The ef)-.25 E(fect is to perform a sequence of assignments:)-.25
E([a,b,c] :)128 595.6 Q F2(=)A F1 20.27(s; $)2.5 F(a)2.5 E F2(=)2.5 E F1
(s\(1\), b)2.5 E F2(=)2.5 E F1(s\(2\), c)2.5 E F2(=)2.5 E F1(s\(3\))2.5
E([d,)128 607.6 Q F2(-)A F1(,f] :)A F2(=)A F1 20.33(s; $)2.5 F(d)2.5 E
F2(=)2.5 E F1(s\(1\), f)2.5 E F2(=)2.5 E F1(s\(3\))2.5 E([e,f] :)128
619.6 Q F2(=)A F1 13.61([2,4]; $)2.5 F(e)2.5 E F2(=)2.5 E F1(2, f)2.5 E
F2(=)2.5 E F1(4)2.5 E([a,b] :)128 631.6 Q F2(=)A F1 12.5([b,a]; $)2.5 F
(interchange a and b)2.5 E .086
(All the components in the tuple on the left side must be v)108 659.8 R
.087(alid assignment left sides, or)-.25 F 2.587(,a)-.4 G 2.587(ss)
-2.587 G(ho)-2.587 E .087(wn in)-.25 F EP
%%Page: 10 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 10).1 E/F1 10/Times-Roman@0
SF 1.064(the second e)108 130 R 1.064(xample abo)-.15 F -.15(ve)-.15 G
3.564(,am).15 G 1.063
(inus sign may be used to indicate that the corresponding assign-)-3.564
F(ment is to be skipped.)108 142 Q .047
(One important point is that SETL treats tuples as v)133 158.2 R .048
(alues when it comes to assignments. Con-)-.25 F(sider the follo)108
170.2 Q(wing sections of code:)-.25 E(abc :)128 198.4 Q/F2 10/Symbol SF
(=)A F1(12;)2.5 E(cde :)128 210.4 Q F2(=)A F1(abc;)2.5 E(abc :)128 222.4
Q F2(=)A F1(abc + 2;)2.5 E 2.5($c)15 G(de still)-2.5 E F2(=)2.5 E F1(12)
2.5 E(abc :)128 246.4 Q F2(=)A F1([1,2,3];)2.5 E(cde :)128 258.4 Q F2(=)
A F1(abc;)2.5 E(abc\(2\) :)128 270.4 Q F2(=)A F1 25.36(0; $)2.5 F
(cde still)2.5 E F2(=)2.5 E F1([1,2,3])2.5 E 1.632(In SETL the tw)108
298.6 R 4.132(os)-.1 G 1.632(equences ha)-4.132 F 1.932 -.15(ve s)-.2 H
1.632(imilar ef).15 F 1.632(fects. If you e)-.25 F 1.632
(xpected cde to change in the second)-.15 F
(sequence, then study it carefully)108 310.6 Q 2.5(.I)-.65 G 2.5(fn)-2.5
G(ot, then you ha)-2.5 E .3 -.15(ve t)-.2 H(he correct idea already).15
E(.)-.65 E .742(The operator)133 326.8 R F0(with)3.242 E F1 .742(adds a\
 single element at the end of a tuple and is most often used in its)
3.242 F(assigning form as sho)108 338.8 Q(wn in the follo)-.25 E(wing e)
-.25 E(xamples:)-.15 E 2.5(a:)128 367 S F2(=)-2.5 E F1([1,5,10];)2.5 E
2.5(b:)128 379 S F2(=)-2.5 E F1(a)2.5 E F0(with)2.5 E F1 12.5(6; $)2.5 F
(a)2.5 E F2(=)2.5 E F1([1,5,10], b)2.5 E F2(=)2.5 E F1([1,5,10,6])2.5 E
(a)128 391 Q F0(with)2.5 E F1(:)A F2(=)A F1 22.5(7; $)2.5 F(a)2.5 E F2
(=)2.5 E F1([1,5,10,7])2.5 E .662(The binary operator)108 419.2 R F0(fr)
3.162 E(omb)-.18 E F1(remo)3.162 E -.15(ve)-.15 G 3.162(st).15 G .662
(he \214rst element of a tuple \(i.e. the element at the be)-3.162 F
(ginning)-.15 E 1.212(of the tuple\) and assigns it to the left operand\
. The right operand, which contained the original)108 431.2 R 1.734(tup\
le operand is reassigned to contain the remainder of the tuple after re\
mo)108 443.2 R 1.733(ving this element.)-.15 F F0(fr)108 455.2 Q(omb)
-.18 E F1 .244(is most often used on its o)2.744 F .244
(wn as a statement form, b)-.25 F .244
(ut it can also be used within an e)-.2 F(xpres-)-.15 E .926
(sion, in which case it yields the \214rst element as its v)108 467.2 R
.926(alue \(as well as performing the tw)-.25 F 3.426(oa)-.1 G(ssign-)
-3.426 E .853(ments\). The binary operator)108 479.2 R F0(fr)3.353 E
(ome)-.18 E F1 .853(is similar e)3.353 F .853(xcept that it remo)-.15 F
-.15(ve)-.15 G 3.353(st).15 G .853(he element from the end of)-3.353 F
.965(the tuple.)108 491.2 R(If)5.965 E F0(fr)3.465 E(omb)-.18 E F1(or)
3.465 E F0(fr)3.465 E(ome)-.18 E F1 .965(is applied to a null tuple v)
3.465 F .965(alue, then)-.25 F F0(om)3.465 E F1 .964
(is obtained and the tuple)3.464 F -.25(va)108 503.2 S
(lue is unchanged:).25 E 2.5(a:)128 531.4 S F2(=)-2.5 E F1
([11,26,37,17];)2.5 E(b)128 543.4 Q F0(fr)2.5 E(omb)-.18 E F1 43.45
(a; $)2.5 F(b)2.5 E F2(=)2.5 E F1(11, a)2.5 E F2(=)2.5 E F1([26,37,17])
2.5 E(c)128 555.4 Q F0(fr)2.5 E(omb)-.18 E F1 44.01(a; $)2.5 F(c)2.5 E
F2(=)2.5 E F1(26, a)2.5 E F2(=)2.5 E F1([37,17])2.5 E(d)128 567.4 Q F0
(fr)2.5 E(omb)-.18 E F1 43.45(a; $)2.5 F(d)2.5 E F2(=)2.5 E F1(17, a)2.5
E F2(=)2.5 E F1([37])2.5 E(e)128 579.4 Q F0(fr)2.5 E(omb)-.18 E F1 44.01
(a; $)2.5 F(e)2.5 E F2(=)2.5 E F1(37, a)2.5 E F2(=)2.5 E F1 1.666([])2.5
G(f)128 591.4 Q F0(fr)2.5 E(omb)-.18 E F1 45.12(a; $)2.5 F(f)2.5 E F2(=)
2.5 E F0(om)2.5 E F1 2.5(,a)C F2(=)A F1 1.666([])2.5 G .65
(The operators)108 619.6 R F0(with)3.15 E F1(:)A F2(=)A F1(and)3.15 E F0
(fr)3.15 E(omb)-.18 E F1 .65(used in conjunction allo)3.15 F 3.151(wat)
-.25 G .651(uple to be used as a queue,)-3.151 F F0(with)3.151 E F1(:)A
F2(=)A F1(being the queue operation and)108 631.6 Q F0(fr)2.5 E(omb)-.18
E F1(the dequeue operation:)2.5 E EP
%%Page: 11 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 11).1 E/F1 10/Times-Roman@0
SF 2.5(q:)128 130 S/F2 10/Symbol SF(=)-2.5 E F1 1.666([])2.5 G(;)-1.666
E(q)128 142 Q F0(with)2.5 E F1(:)A F2(=)A F1 15(5; $)2.5 F(q)2.5 E F2(=)
2.5 E F1([5])2.5 E(q)128 154 Q F0(with)2.5 E F1(:)A F2(=)A F1 15(7; $)
2.5 F(q)2.5 E F2(=)2.5 E F1([5,7])2.5 E(e)128 166 Q F0(fr)2.5 E(omb)-.18
E F1 16.24(q; $)2.5 F(e)2.5 E F2(=)2.5 E F1(5, q)2.5 E F2(=)2.5 E F1
([7])2.5 E(e)128 178 Q F0(fr)2.5 E(omb)-.18 E F1 16.24(q; $)2.5 F(e)2.5
E F2(=)2.5 E F1(7, q)2.5 E F2(=)2.5 E F1 1.666([])2.5 G(e)128 190 Q F0
(fr)2.5 E(omb)-.18 E F1 16.24(q; $)2.5 F(e)2.5 E F2(=)2.5 E F0(om)2.5 E
F1 2.5(,q)C F2(=)A F1 -3.332 1.666([] \()2.5 H(queue empty\))-1.666 E
.54(In a similar manner)108 218.2 R 3.04(,t)-.4 G .54(he operators)-3.04
F F0(with)3.04 E F1(:)A F2(=)A F1(and)3.04 E F0(fr)3.04 E(ome)-.18 E F1
.54(used in conjunction allo)3.04 F 3.04(wat)-.25 G .54(uple to be used)
-3.04 F(as a stack,)108 230.2 Q F0(with)2.5 E F1(:)A F2(=)A F1
(being the push and)2.5 E F0(fr)2.5 E(ome)-.18 E F1(being the pop:)2.5 E
2.5(s:)128 258.4 S F2(=)-2.5 E F1 1.666([])2.5 G(;)-1.666 E(s)128 270.4
Q F0(with)2.5 E F1(:)A F2(=)A F1 15(5; $)2.5 F(s)2.5 E F2(=)2.5 E F1
([5])2.5 E(s)128 282.4 Q F0(with)2.5 E F1(:)A F2(=)A F1 20.28(7$)2.5 G
(s)-17.78 E F2(=)2.5 E F1([5,7])2.5 E(e)128 294.4 Q F0(fr)2.5 E(ome)-.18
E F1 17.36(s; $)2.5 F(e)2.5 E F2(=)2.5 E F1(7, s)2.5 E F2(=)2.5 E F1
([5])2.5 E(e)128 306.4 Q F0(fr)2.5 E(ome)-.18 E F1 17.36(s; $)2.5 F(e)
2.5 E F2(=)2.5 E F1(5, s)2.5 E F2(=)2.5 E F1([])2.5 E(e)128 318.4 Q F0
(fr)2.5 E(ome)-.18 E F1 17.36(s; $)2.5 F(e)2.5 E F2(=)2.5 E F0(om)2.5 E
F1 2.5(,s)C F2(=)A F1 -3.332 1.666([] \()2.5 H(stack empty\))-1.666 E F0
2.5(1.5. Sets)108 358.6 R F1 1.041
(Finally we get to the datatype in SETL which gi)133 374.8 R -.15(ve)
-.25 G 3.541(sS).15 G 1.041(ETL its name. A set is lik)-3.541 F 3.542
(eat)-.1 G(uple,)-3.542 E -.15(ex)108 386.8 S .172
(cept that it is unordered, and a gi).15 F -.15(ve)-.25 G 2.672(nv).15 G
.171(alue can appear only once \(i.e. an attempt to place a v)-2.922 F
(alue)-.25 E 1.219(into a set more than once is ignored\).)108 398.8 R
1.219(Set v)6.219 F 1.22
(alues are written using a similar notation to tuples,)-.25 F -.15(ex)
108 410.8 S(cept that the set brack).15 E(ets are { and }.)-.1 E 2.5(s:)
128 439 S F2(=)-2.5 E F1({1,2,)2.5 E('abc'};)-.7 E 2.5(t:)128 451 S F2
(=)-2.5 E F1({2,1,)2.5 E('abc'};)-.7 E 2.5(u:)128 463 S F2(=)-2.5 E F1
({2,1,)2.5 E 12.5('abc',2}; $)-.7 F(s)2.5 E F2(=)2.5 E F1(t)2.5 E F2(=)
2.5 E F1(u)2.5 E .402(In some implementations, the set brack)108 491.2 R
.401(et characters may not be a)-.1 F -.25(va)-.2 G .401(ilable. T).25 F
2.901(od)-.8 G .401(eal with this possi-)-2.901 F(bility)108 503.2 Q
2.659(,a)-.65 G 2.659(na)-2.659 G .159(lternate notation is a)-2.659 F
-.25(va)-.2 G .159(ilable which uses << as the left set brack).25 F .16
(et and >> as the right set)-.1 F(brack)108 515.2 Q(et, so the abo)-.1 E
.3 -.15(ve ex)-.15 H(amples could ha).15 E .3 -.15(ve b)-.2 H
(een written:).15 E 2.5(s:)144 539.2 S F2(=)-2.5 E F1(<<1,2,)2.5 E
('abc'>>;)-.7 E 2.5(t:)144 551.2 S F2(=)-2.5 E F1(<<2,1,)2.5 E('abc'>>;)
-.7 E 2.5(u:)144 563.2 S F2(=)-2.5 E F1(<<2,1,)2.5 E('abc',2>>;)-.7 E
(The follo)108 587.2 Q
(wing set of operators can be applied to set operands:)-.25 E/F3 10
/Times-Italic@0 SF(Binary Set Oper)172.545 615.4 Q(ator)-.15 E(s)-.1 E
F1 69.66(+S)197.545 639.4 S(et union)-69.66 E EP
%%Page: 12 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 12).1 E/F1 10/Symbol SF(-)
197.545 130 Q/F2 10/Times-Roman@0 SF(Set dif)69.81 E(ference)-.25 E 70.3
(*S)197.545 142 S(et intersection)-70.3 E F0(with)197.545 154 Q F2
(Add one element to a set)56.41 E F0(less)197.545 166 Q F2(Remo)60.3 E
.3 -.15(ve a)-.15 H 2.5(ne).15 G(lement from a set)-2.5 E F0(fr)197.545
178 Q(om)-.18 E F2(Remo)54.38 E .3 -.15(ve a)-.15 H 2.5(ne).15 G
(lement and assign remainder)-2.5 E/F3 10/Times-Italic@0 SF
(Unary Set Oper)172.545 202 Q(ator)-.15 E(s)-.1 E F2 70.3(#N)197.545 226
S(umber of elements as inte)-70.3 E(ger)-.15 E F0(type)197.545 238 Q F2
-.55(Yi)56.97 G(elds the string 'SET').55 E F0(arb)197.545 250 Q F2
(Select arbitrary element)60.3 E .43(The operators + * and)108 278.2 R
F1(-)2.93 E F2 .43(applied to sets perform standard set operations of u\
nion, intersection and)2.93 F(dif)108 290.2 Q(ference as sho)-.25 E
(wn by the follo)-.25 E(wing e)-.25 E(xamples:)-.15 E 2.5(a:)128 318.4 S
F1(=)-2.5 E F2({1,2,3,4};)2.5 E 2.5(b:)128 330.4 S F1(=)-2.5 E F2
({3,4,5,6};)2.5 E 2.5(c:)128 342.4 S F1(=)-2.5 E F2 2.5(a+b)2.5 G 32.58
(;$)-2.5 G(c)-30.08 E F1(=)2.5 E F2({1,2,3,4,5,6})2.5 E 2.5(c:)128 354.4
S F1(=)-2.5 E F2 2.5(a*b)2.5 G 33.22(;$)-2.5 G(c)-30.72 E F1(=)2.5 E F2
({3,4})2.5 E 2.5(c:)128 366.4 S F1(=)-2.5 E F2(a)2.5 E F1(-)2.5 E F2
30.23(b; $)2.5 F(c)2.5 E F1(=)2.5 E F2({1,2})2.5 E .408(The operators)
108 394.6 R F0(with)2.909 E F2(and)2.909 E F0(less)2.909 E F2 .409
(add or remo)2.909 F .709 -.15(ve a)-.15 H 2.909(ne).15 G .409
(lement from a set and are most often used in their)-2.909 F .36
(assigning forms.)108 406.6 R F0 -.18(Wi)5.36 G(th).18 E F2 .36
(has no ef)2.86 F .36(fect if the element is already present, and)-.25 F
F0(less)2.86 E F2 .36(has no ef)2.86 F .36(fect if the)-.25 F
(element is not present:)108 418.6 Q 2.5(s:)128 446.8 S F1(=)-2.5 E F2
({5,2,8};)2.5 E 2.5(a:)128 458.8 S F1(=)-2.5 E F2(s)2.5 E F0(with)2.5 E
F2 12.5(7; $)2.5 F(s)2.5 E F1(=)2.5 E F2({5,2,8}, a)2.5 E F1(=)2.5 E F2
({5,2,7,8})2.5 E(s)128 470.8 Q F0(with)2.5 E F2(:)A F1(=)A F2 21.94
(6; $)2.5 F(s)2.5 E F1(=)2.5 E F2({5,6,2,8})2.5 E(s)128 482.8 Q F0(with)
2.5 E F2(:)A F1(=)A F2 21.94(5; $)2.5 F(s)2.5 E F1(=)2.5 E F2({5,6,2,8})
2.5 E(s)128 494.8 Q F0(less)2.5 E F2(:)A F1(=)A F2 25.83(5; $)2.5 F(s)
2.5 E F1(=)2.5 E F2({6,2,8})2.5 E(s)128 506.8 Q F0(less)2.5 E F2(:)A F1
(=)A F2 25.83(0; $)2.5 F(s)2.5 E F1(=)2.5 E F2({6,2,8})2.5 E F0(Arb)108
535 Q F2 .123
(selects an element from the set in a non-deterministic manner)2.623 F
2.624(.I)-.55 G 2.624(no)-2.624 G .124(ther w)-2.624 F .124
(ords, there is no w)-.1 F(ay)-.1 E 1.052
(to predict which element will be selected. It may e)108 547 R -.15(ve)
-.25 G 3.552(nb).15 G 3.552(et)-3.552 G 1.051(he case that a dif)-3.552
F 1.051(ferent v)-.25 F 1.051(alue will be)-.25 F .051(selected in dif)
108 559 R .051(ferent runs of the program, e)-.25 F -.15(ve)-.25 G 2.551
(ni).15 G 2.551(fn)-2.551 G 2.551(oc)-2.551 G .051
(hanges are made to the program or data.)-2.551 F F0(Arb)5.052 E F2 .216
(is thus used precisely in those cases where it does not matter which e\
lement is pick)108 571 R 2.715(ed. The)-.1 F(opera-)2.715 E(tor)108 583
Q F0(fr)2.673 E(om)-.18 E F2 .173
(picks an arbitrary element from its right operand in a similar manner)
2.673 F 2.674(,b)-.4 G .174(ut also assigns the)-2.874 F 1.962
(set with this element remo)108 595 R -.15(ve)-.15 G 4.461(da).15 G
4.461(st)-4.461 G 1.961(he ne)-4.461 F 4.461(wv)-.25 G 1.961
(alue of the right operand, the pick)-4.711 F 1.961(ed v)-.1 F 1.961
(alue being)-.25 F .464(assigned to the left operand.)108 607 R(Both)
5.464 E F0(arb)2.964 E F2(and)2.964 E F0(fr)2.964 E(om)-.18 E F2(yield)
2.964 E F0(om)2.964 E F2 .465(if applied to a null set, and in the case)
2.965 F(of)108 619 Q F0(fr)2.5 E(om,)-.18 E F2(the set v)2.5 E
(alue is unchanged.)-.25 E EP
%%Page: 13 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 13).1 E/F1 10/Times-Roman@0
SF 2.5(a:)128 130 S/F2 10/Symbol SF(=)-2.5 E F1({1,5};)2.5 E 2.5(b:)128
142 S F2(=)-2.5 E F0(arb)2.5 E F1 12.5(a; $)2.5 F(b)2.5 E F2(=)2.5 E F1
2.5(1o)2.5 G 2.5(r5)-2.5 G(c)128 154 Q F0(fr)2.5 E(om)-.18 E F1 17.91
(a; $)2.5 F(c)2.5 E F2(=)2.5 E F1 2.5(1\()2.5 G(or 5!\))-2.5 E 2.5($a)
185.99 166 S F2(=)A F1({5} \(or {1}\))2.5 E(d)128 178 Q F0(fr)2.5 E(om)
-.18 E F1 17.35(a; $)2.5 F(d)2.5 E F2(=)2.5 E F1 2.5(1\()2.5 G(if c w)
-2.5 E(as 5\))-.1 E 2.5($d)185.99 190 S F2(=)A F1 2.5(5\()2.5 G(if c w)
-2.5 E(as 1\))-.1 E 2.5($a)185.99 202 S F2(=)A F1 1.666({})2.5 G(e)128
214 Q F0(fr)2.5 E(om)-.18 E F1 17.91(a; $)2.5 F(e)2.5 E F2(=)2.5 E F0
(om)2.5 E F1 2.5(,a)C F2(=)A F1 1.666({})2.5 G .406(The null set is the\
 set which contains no elements. It is written as {}, i.e. a set with z\
ero elements)108 242.2 R 2.534(listed. The)108 254.2 R 2.534(#o)2.534 G
.035(perator applied to the null set yields zero.)-2.534 F 2.535(At)
5.035 G .035(ypical technique is to b)-2.535 F .035(uild a set v)-.2 F
(alue)-.25 E(by \214rst assigning {)108 266.2 Q 2.5(}t)1.666 G 2.5(oav)
-2.5 G(ariable, and then using)-2.75 E F0(with)2.5 E F1(:)A F2(=)A F1
(to add the desired elements to the set.)2.5 E(As for tuples, an abbre)
133 282.4 Q(viated form is permitted for constructing sets of inte)-.25
E(gers:)-.15 E 20({1..10} means)128 310.6 R({1,2,3,4,5,6,7,8,9,10})15 E
12.5({3,5..11} means {3,5,7,9,11})128 322.6 R
(The general form of this construction is e)108 350.8 Q
(xactly the same as that used in the tuple case:)-.15 E({\214rst,ne)144
374.8 Q(xt .. last})-.15 E 1.233(As with tuples, the second e)108 398.8
R 1.233(xpression indicates the direction and step size, although backw)
-.15 F(ards)-.1 E .26(sequences are not usually used in the set case, s\
ince the order of the elements is not meaningful in)108 410.8 R 2.5(as)
108 422.8 S(et:)-2.5 E 5({1,2..10} same)144 446.8 R(set as)2.5 E
({10,9..1})7.5 E F0 2.5(1.6. Maps)108 482.8 R F1 2.514(Am)133 499 S .013
(ap in SETL is a set all of whose elements are tuples of length 2 \(cal\
led pairs\). F)-2.514 F .013(or e)-.15 F(xam-)-.15 E(ple, the follo)108
511 Q(wing assigns a map v)-.25 E(alue to the identi\214er sqroot:)-.25
E(sqroot :)144 535 Q F2(=)A F1({[1,1], [4,2], [9,3], [16,4]};)2.5 E
(If a set has this special form, its v)108 559 Q
(alues may be accessed using map notation:)-.25 E 2.5(x:)144 583 S F2(=)
-2.5 E F1 47.79(sqroot\(9\); $)2.5 F(x)2.5 E F2(=)2.5 E F1(3)2.5 E .894
(The actual meaning of such a map reference is to search the set for th\
e pair whose \214rst element)108 607 R .08(matches the gi)108 619 R -.15
(ve)-.25 G 2.58(nd).15 G .08(omain v)-2.58 F .079(alue \(9 in this case\
\), and then the second element of this pair is yielded)-.25 F .367
(as the range v)108 631 R 2.867(alue. Map)-.25 F .368(reference notatio\
n can also be used on the left side of an assignment, the)2.868 F(ef)108
643 Q(fect is to modify the v)-.25 E(alue of the map appropriately:)-.25
E(sqroot\(25\) :)144 667 Q F2(=)A F1 42.79(5; $)2.5 F
(adds the pair [25,5] to sqroot)2.5 E EP
%%Page: 14 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 14).1 E/F1 10/Times-Roman@0
SF .779(The e)108 130 R .778
(xact meaning of this assignment is to compute a ne)-.15 F 3.278(wm)-.25
G .778(ap v)-3.278 F .778(alue by \214rst remo)-.25 F .778
(ving all pairs)-.15 F .519(starting with the gi)108 142 R -.15(ve)-.25
G 3.019(nd).15 G .519(omain v)-3.019 F .519
(alue \(there were none to remo)-.25 F .82 -.15(ve i)-.15 H 3.02(nt).15
G .52(he abo)-3.02 F .82 -.15(ve ex)-.15 H .52(ample\), and then).15 F
.23(to add the speci\214ed pair)108 154 R 5.23(.O)-.55 G .229
(ften maps are constructed by a sequence of assignment statements. F)
-5.23 F(or)-.15 E -.15(ex)108 166 S(ample, the map sqroot could ha).15 E
.3 -.15(ve b)-.2 H(een constructed by the sequence:).15 E(sqroot :)128
194.2 Q/F2 10/Symbol SF(=)A F1 1.666({})2.5 G(;)-1.666 E(sqroot\(1\) :)
128 206.2 Q F2(=)A F1(1;)2.5 E(sqroot\(4\) :)128 218.2 Q F2(=)A F1(2;)
2.5 E(sqroot\(9\) :)128 230.2 Q F2(=)A F1(3;)2.5 E(sqroot\(16\) :)128
242.2 Q F2(=)A F1(4;)2.5 E(sqroot\(25\) :)128 254.2 Q F2(=)A F1(5;)2.5 E
(Reference to a non-e)108 282.4 Q(xistent element of a map \(e.g.)-.15 E
(sqroot\(19\) in the e)5 E(xample gi)-.15 E -.15(ve)-.25 G(n\) yields)
.15 E F0(om.)2.5 E F1 .177(Maps are a general associati)133 298.6 R .478
-.15(ve d)-.25 H -.25(ev).15 G .178
(ice, and represent one of the fundamental data structuring).25 F(de)108
310.6 Q .308(vices in SETL.)-.25 F -.15(Fo)5.308 G 2.808(re).15 G .308
(xample, a structure represented as a one dimensional v)-2.958 F .307
(ector in FOR)-.15 F(TRAN)-.6 E .364
(is probably better treated as a map from inte)108 322.6 R .365
(gers in SETL. Actually it is usually possible to repre-)-.15 F .749
(sent data in a more direct w)108 334.6 R .748(ay than inte)-.1 F .748
(ger inde)-.15 F .748(xing. F)-.15 F .748(or e)-.15 F .748(xample, gi)
-.15 F -.15(ve)-.25 G 3.248(nac).15 G .748(lass of students, and)-3.248
F 1.494(associated test scores, rather than use tw)108 346.6 R 3.994(ov)
-.1 G 1.494(ectors based on inte)-4.144 F 1.495
(ger indices, one containing the)-.15 F .618
(names and the other containing the scores, it is more con)108 358.6 R
-.15(ve)-.4 G .617(nient to represent this data as a single).15 F
(map from student names onto inte)108 370.6 Q(ger scores.)-.15 E -.15
(Fo)133 386.8 S 2.706(rt).15 G .207(he map notation sho)-2.706 F .207
(wn abo)-.25 F -.15(ve)-.15 G 2.707(,a).15 G 2.707(ne)-2.707 G .207
(rror results if there are an)-2.707 F 2.707(yd)-.15 G .207
(uplicate elements in the)-2.707 F 1.037
(domain, i.e. more than one pair with the same \214rst element v)108
398.8 R 3.537(alue. Ho)-.25 F(we)-.25 E -.15(ve)-.25 G 1.837 -.4(r, i)
.15 H 3.537(ti).4 G 3.537(sp)-3.537 G 1.037(ossible for a)-3.537 F .636
(map to contain such a duplication, using set brack)108 410.8 R .637
(ets {)-.1 F 3.137(}i)1.666 G .637
(nstead of parentheses to access the ele-)-3.137 F .985(ments. The resu\
lt of such a reference is to yield the set of all range v)108 422.8 R
.984(alues corresponding to the)-.25 F(gi)108 434.8 Q -.15(ve)-.25 G 2.5
(nd).15 G(omain v)-2.5 E(alue:)-.25 E 2.5(a:)128 463 S F2(=)-2.5 E F1
({[1,2], [1,3], [2,4], [5,5], [2,7], [2,8]};)2.5 E 2.5(c:)128 475 S F2
(=)-2.5 E F1 145.96(a\(1\); $)2.5 F(causes an error)2.5 E 2.5(d:)128 487
S F2(=)-2.5 E F1 142.46(a{1}; $)2.5 F(d)2.5 E F2(=)2.5 E F1({2,3})2.5 E
2.5(e:)128 499 S F2(=)-2.5 E F1 143.02(a{5}; $)2.5 F(e)2.5 E F2(=)2.5 E
F1({7})2.5 E 2.5(g:)128 511 S F2(=)-2.5 E F1 142.46(a{7}; $)2.5 F(g)2.5
E F2(=)2.5 E F1 1.666({})2.5 G .582(Maps which ha)108 531.4 R .882 -.15
(ve d)-.2 H .582(uplicated v).15 F .582(alues lik)-.25 F 3.082(et)-.1 G
.582(his are called multi-v)-3.082 F .583
(alued maps, and the corresponding)-.25 F .145(reference is a multi-v)
108 543.4 R .145(alued reference. This form can also be used on the lef\
t side of an assignment:)-.25 F 2.5(a:)144 567.4 S F2(=)-2.5 E F1
({[1,0], [1,2], [1,5], [2,5], [2,7]};)2.5 E(a{1} :)144 579.4 Q F2(=)A F1
({5,7}; $ a)2.5 E F2(=)2.5 E F1({[1,5], [1,7], [2,5], [2,7]})2.5 E .674
(Since maps are just a special case of sets, all the operators which ap\
ply to sets \(such as + for set)108 603.4 R
(union\) can also be applied to maps. In addition the follo)108 615.4 Q
(wing special operators)-.25 E(are pro)108 639.4 Q
(vided for operating on maps:)-.15 E EP
%%Page: 15 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 15).1 E/F1 10
/Times-Italic@0 SF(Binary Map Oper)179.61 130 Q(ator)-.15 E(s)-.1 E F0
(lessf)204.61 154 Q/F2 10/Times-Roman@0 SF(Remo)63.08 E -.15(ve)-.15 G
2.5(sp).15 G(airs for one domain v)-2.5 E(alue)-.25 E F1(Unary Map Oper)
179.61 178 Q(ator)-.15 E(s)-.1 E F0(domain)204.61 202 Q F2 -.55(Yi)49.18
G(elds domain of a map).55 E F0(range)204.61 214 Q F2 -.55(Yi)56.97 G
(elds range of a map).55 E F0(Domain)108 242.2 Q F2(and)2.618 E F0
(range)2.617 E F2 .117(yield the set of v)2.617 F .117
(alues of the \214rst element or second element respecti)-.25 F -.15(ve)
-.25 G .117(ly of all).15 F(pairs.)108 254.2 Q F0(Lessf)5.209 E F2 .209
(creates a ne)2.709 F 2.709(wm)-.25 G .209
(ap in which all pairs starting with a particular v)-2.709 F .21
(alue are remo)-.25 F -.15(ve)-.15 G .21(d, and).15 F .313
(is most often used in its assigning form.)108 266.2 R .313
(All three operators cause an error if the)5.313 F 2.812(ya)-.15 G .312
(re applied to a)-2.812 F .036(set which is not a map, i.e.)108 278.2 R
2.536(as)5.036 G .036
(et which contains at least one element which is not a pair)-2.536 F
2.537(.T)-.55 G .037(he ef)-2.537 F(fect)-.25 E(of)108 290.2 Q F0(lessf)
2.5 E F2(can also be obtained by an e)2.5 E(xplicit assignment as sho)
-.15 E(wn in the follo)-.25 E(wing e)-.25 E(xamples:)-.15 E 2.5(a:)128
330.4 S/F3 10/Symbol SF(=)-2.5 E F2
({[1,2], [1,3], [2,2], [2,4], [3,6], [3,7]};)2.5 E 2.5(b:)128 342.4 S F3
(=)-2.5 E F0(domain)2.5 E F2 122.33(a; $)2.5 F(b)2.5 E F3(=)2.5 E F2
({1,2,3})2.5 E 2.5(c:)128 354.4 S F3(=)-2.5 E F0(range)2.5 E F2 130.68
(a; $)2.5 F(c)2.5 E F3(=)2.5 E F2({2,3,4,6,7})2.5 E(a)128 366.4 Q F0
(lessf)2.5 E F2(:)A F3(=)A F2 138.73(1; $)2.5 F(remo)2.5 E -.15(ve)-.15
G 2.5(s[).15 G(1,2] and [1,3])-2.5 E(a\(2\) :)128 378.4 Q F3(=)A F0(om)
2.5 E F2 139.57(;$)C(remo)-137.07 E -.15(ve)-.15 G 2.5(s[).15 G
(2,2] and [2,4])-2.5 E(a{3} :)128 390.4 Q F3(=)A F2 1.666({})2.5 G
138.694(;$)-1.666 G(remo)-136.194 E -.15(ve)-.15 G 2.5(s[).15 G
(3,6] and [3,7])-2.5 E F0 2.5(1.7. Conditional)108 430.6 R(Statements)
2.5 E F2(Conditional statements allo)133 446.8 Q 2.5(wt)-.25 G(he \215o)
-2.5 E 2.5(wo)-.25 G 2.5(fc)-2.5 G
(ontrol to be modi\214ed by the use of tests.)-2.5 E F0 2.5(1.7.1. If)
108 470.8 R(Statements)2.5 E F2(The)133 487 Q F0(if)2.5 E F2
(statement allo)2.5 E(ws one of tw)-.25 E 2.5(op)-.1 G
(aths of control to be selected on the basis of a test:)-2.5 E F0(if)158
511 Q F2(test)2.5 E F0(then)158 523 Q F2(statement;)178 535 Q
(statement;)178 547 Q(statement;)178 559 Q F0(else)158 571 Q F2
(statement;)178 583 Q(statement;)178 595 Q(statement;)178 607 Q F0
(end if)158 619 Q F2(;)A 1.498(The test either succeeds or f)108 643 R
1.498(ails. If it succeeds, then the sequence of statements after the)
-.1 F F0(then)3.998 E F2 .004(\(called a block\) is e)108 655 R -.15(xe)
-.15 G .004(cuted. If the test f).15 F .004(ails, then the block follo)
-.1 F .005(wing the)-.25 F F0(else)2.505 E F2 .005(is e)2.505 F -.15(xe)
-.15 G .005(cuted. Note that).15 F .372(since e)108 667 R -.15(ve)-.25 G
.372(ry statement is terminated by a semicolon in SETL, there must be a\
 semicolon follo).15 F(wing)-.25 E EP
%%Page: 16 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 16).1 E/F1 10/Times-Roman@0
SF .912(the last statement of each block. Since the entire)108 130 R F0
(if)3.412 E F1 .913(construction is also considered to be a state-)3.412
F .681(ment, it is also terminated by a semicolon. The f)108 142 R .681
(act that)-.1 F F0(if)3.181 E F1 .681
(is considered to be a statement means)3.181 F(that)108 154 Q F0(if)
2.581 E F1 1.181 -.55('s c)D .081(an be nested, an).55 F F0(if)2.581 E
F1 .081(appearing as one of the statements in the)2.581 F F0(then)2.581
E F1(or)2.581 E F0(else)2.581 E F1 .081(block. This nest-)2.581 F
(ing can be carried to an)108 166 Q 2.5(yd)-.15 G(epth.)-2.5 E(The)133
182.2 Q F0 .924(end if)3.424 F F1 3.424(;w)C .924(hich terminates the)
-3.424 F F0(if)3.424 E F1 .924(statement can be written in an)3.424 F
3.423(yo)-.15 G 3.423(ft)-3.423 G .923(he follo)-3.423 F .923(wing man-)
-.25 F(ners:)108 194.2 Q F0(end;)158 218.2 Q(end if;)158 230.2 Q(end if)
158 242.2 Q F1(tok)2.5 E(ens;)-.1 E .449(In the last case, tok)108 266.2
R .449(ens is one or more tok)-.1 F .45(ens copied from the te)-.1 F .45
(xt follo)-.15 F .45(wing the corresponding)-.25 F F0(if)2.95 E(.)-.15 E
F1(The)108 278.2 Q 3.865(ym)-.15 G 1.365(ust e)-3.865 F 1.365
(xactly match or an error results. The use of these identifying tok)-.15
F 1.365(ens helps to k)-.1 F(eep)-.1 E F0(end)108 290.2 Q F1 1.1 -.55
('s s)D(traight and is particularly v).55 E(aluable when an)-.25 E F0
(if)2.5 E F1(or similar construction is length)2.5 E(y:)-.05 E F0(if)158
314.2 Q F1 2.5(a>b)2.5 G F0(then)158 326.2 Q F1
(\(long sequence of statements\))178 338.2 Q F0(end if)158 350.2 Q F1
2.5(a>b)2.5 G(;)-2.5 E(The)108 374.2 Q F0(else)2.997 E F1 .497
(and its follo)2.997 F .497
(wing block are optional and may be omitted. If the)-.25 F 2.997(ya)-.15
G .498(re omitted and the test)-2.997 F -.1(fa)108 386.2 S
(ils, then control passes out of the).1 E F0(if)2.5 E F1
(which then has no ef)2.5 E(fect.)-.25 E F0 2.5(1.7.2. Boolean)108 410.2
R -.92(Va)2.5 G(lues & Operators).92 E F1 .443(The tests used in)133
426.4 R F0(if)2.943 E F1 .443(statements and other similar construction\
s are usually constructed using)2.943 F .031(one of the test operators.)
108 438.4 R .031(The follo)5.031 F .032
(wing list indicates the condition under which the test performed)-.25 F
(by the operator succeeds:)108 450.4 Q/F2 10/Times-Italic@0 SF(Binary T)
170.08 478.6 Q(est Oper)-.92 E(ator)-.15 E(s)-.1 E/F3 10/Symbol SF(=)
195.08 502.6 Q F1 -.8(Ty)73.34 G(pes and v).8 E(alues match)-.25 E(/)
195.08 514.6 Q F3(=)A F1 -.8(Ty)70.56 G(pes or v).8 E
(alues do not match)-.25 E 73.19(>L)195.08 526.6 S
(eft operand greater than right)-73.19 E(>)195.08 538.6 Q F3(=)A F1
(Left operand greater than or equal to right)67.7 E 73.19(<L)195.08
550.6 S(eft operand less than right)-73.19 E(<)195.08 562.6 Q F3(=)A F1
(Left operand less than or equal to right)67.7 E F0(in)195.08 574.6 Q F1
(Left operand is an element of right)70.49 E F0(notin)195.08 586.6 Q F1
(Left operand is not an element of right)56.6 E F0(subset)195.08 598.6 Q
F1(Left operand is a subset of right)52.16 E F0(incs)195.08 610.6 Q F1
(Left operand includes right)62.16 E F2(Unary T)170.08 634.6 Q(est Oper)
-.92 E(ator)-.15 E(s)-.1 E EP
%%Page: 17 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 17).1 E -2.3 -.15(ev e)
195.08 142 T(n).15 E/F1 10/Times-Roman@0 SF(Operand is e)59.64 E -.15
(ve)-.25 G(n).15 E F0(odd)195.08 154 Q F1(Operand is odd)62.71 E .4 LW
206.75 166 201.75 166 DL 211.75 166 206.75 166 DL F0 7.5(is integer)
195.08 166 R F1(Operand is inte)32.17 E(ger type)-.15 E 206.75 178
201.75 178 DL 211.75 178 206.75 178 DL F0 7.5(is r)195.08 178 R(eal)-.18
E F1(Operand is real type)45.68 E 206.75 190 201.75 190 DL 211.75 190
206.75 190 DL F0 7.5(is tuple)195.08 190 R F1(Operand is tuple type)
40.49 E 206.75 202 201.75 202 DL 211.75 202 206.75 202 DL F0 7.5(is set)
195.08 202 R F1(Operand is set type)50.5 E 206.75 214 201.75 214 DL
211.75 214 206.75 214 DL F0 7.5(is map)195.08 214 R F1
(Operand is map \(set of pairs\))43.27 E 1.386
(The equality and inequality comparisons may be used to compare v)108
242.2 R 1.386(alues of an)-.25 F 3.886(yt)-.15 G 1.386(ype for e)-3.886
F(xact)-.15 E(identity)108 254.2 Q 3.27(,i)-.65 G .77
(ncluding testing for equality with)-3.27 F F0(om.)3.27 E F1 -1 -.8
(Tw o)5.77 H .77(tuples are equal if each pair of elements in)4.07 F .74
(corresponding positions are equal. T)108 266.2 R .94 -.1(wo s)-.8 H
.739(ets are equal if the).1 F 3.239(yh)-.15 G -2.25 -.2(av e)-3.239 H
.739(the same number of elements,)3.439 F(and e)108 278.2 Q -.15(ve)-.25
G(ry element of the left operand is contained in the right operand.).15
E .648(The remaining comparisons apply only to numeric v)133 294.4 R
.648(alues and to strings. In the string case,)-.25 F .149
(the ordering is lik)108 306.4 R 2.649(eat)-.1 G .149(elephone director\
y \(e.g. "ab" is less than "aba"\). The order among characters)-2.649 F
(in the set depends on the implementation.)108 318.4 Q .577
(The membership tests)133 334.6 R F0(in)3.077 E F1(and)3.077 E F0(notin)
3.077 E F1 .578(require that the right ar)3.077 F .578
(gument is a tuple or set and test)-.18 F(for e)108 346.6 Q(xact equali\
ty between the left operand and one of the elements of the right operan\
d.)-.15 E .398(The operators)133 362.8 R F0(incs)2.898 E F1(and)2.898 E
F0(subset)2.898 E F1 .397
(can only be used if both operands are sets. The operators are)2.898 F
(in)108 374.8 Q -.15(ve)-.4 G(rses of one another).15 E 2.5(,i)-.4 G
(.e. a)-2.5 E F0(subset)2.5 E F1 2.5(bi)2.5 G 2.5(se)-2.5 G(qui)-2.5 E
-.25(va)-.25 G(lent to b).25 E F0(incs)2.5 E F1(a.)2.5 E .315
(The operators)133 391 R F0(odd)2.815 E F1(and)2.815 E F0 -2.3 -.15
(ev e)2.815 H(n).15 E F1 .315(can only be applied to an inte)2.815 F
.315(ger operand and test for di)-.15 F(visibil-)-.25 E(ity by tw)108
403 Q(o.)-.1 E(The)133 419.2 Q 163.992 419.2 158.992 419.2 DL 168.992
419.2 163.992 419.2 DL F0 7.5(is type)152.322 419.2 R F1 1.272
(operators test to see if the operand is of the speci\214ed type.)3.772
F 1.271(Note that e)6.272 F -.15(ve)-.25 G(n).15 E .889
(though there is no type map in SETL \(all maps are sets\), the)108
431.2 R 373.974 431.2 368.974 431.2 DL 378.974 431.2 373.974 431.2 DL F0
7.5(is map)362.304 431.2 R F1 .889(operator is a)3.389 F -.25(va)-.2 G
.889(ilable, and).25 F(tests whether the operand has the form of a map \
\(i.e. is a set all of whose elements are pairs\).)108 443.2 Q -.7(Te)
133 459.4 S .035
(st operators are not restricted to appearing in a conte).7 F .035
(xt where a test is e)-.15 F .034(xpected. If the)-.15 F 2.534(ya)-.15 G
(re)-2.534 E .371(used in other situations \(e.g. as the right hand sid\
e of an assignment\), then one of tw)108 471.4 R 2.872(os)-.1 G .372
(pecial v)-2.872 F(al-)-.25 E(ues is yielded:)108 483.4 Q(TR)128 511.6 Q
16.61(UE if)-.4 F(the test succeeds)2.5 E -.74(FA)128 523.6 S 12.5
(LSE if).74 F(the test f)2.5 E(ails)-.1 E .688(These v)108 551.8 R .688
(alues are of type boolean and are distinct from an)-.25 F 3.188(yo)-.15
G .688(ther v)-3.188 F .688(alues. The follo)-.25 F .688(wing operators)
-.25 F(may be applied to boolean v)108 563.8 Q(alues:)-.25 E/F2 10
/Times-Italic@0 SF(Binary Boolean Oper)156.63 592 Q(ator)-.15 E(s)-.1 E
F0(and)181.63 616 Q F1(Logical and of tw)80.29 E 2.5(ob)-.1 G(oolean v)
-2.5 E(alues)-.25 E F0(or)181.63 628 Q F1(Logical inclusi)86.97 E .3
-.15(ve o)-.25 H(r).15 E EP
%%Page: 18 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 18).1 E/F1 10
/Times-Italic@0 SF(Unary Boolean Oper)156.63 130 Q(ator)-.15 E(s)-.1 E
F0(not)181.63 154 Q/F2 10/Times-Roman@0 SF(Logical ne)82.52 E -.05(ga)
-.15 G(tion).05 E F0(type)181.63 166 Q F2 -.55(Yi)78.08 G
(elds the string 'BOOLEAN').55 E .4 LW 193.3 178 188.3 178 DL 198.3 178
193.3 178 DL F0 7.5(is boolean)181.63 178 R F2 -.7(Te)46.4 G
(sts whether an operand is of).7 E F0(boolean)2.5 E F2(type)2.5 E .875
(The operator)108 198.4 R F0(and)3.375 E F2 .875(yields TR)3.375 F .875
(UE if both its operands are TR)-.4 F .876(UE and F)-.4 F .876
(ALSE otherwise. OR yields)-.74 F(TR)108 210.4 Q .067
(UE if either or both of its operands are TR)-.4 F .067(UE and F)-.4 F
.067(ALSE otherwise.)-.74 F F0(And)5.067 E F2 .067(does not e)2.567 F
-.25(va)-.25 G .067(luate its).25 F .706
(right operand if the left operand is F)108 222.4 R .706
(ALSE and similarly)-.74 F F0(or)3.207 E F2 .707(does not e)3.207 F -.25
(va)-.25 G .707(luate its right operand if).25 F(the left operand is TR)
108 234.4 Q(UE. This means that a compound test of the follo)-.4 E
(wing type is le)-.25 E -.05(ga)-.15 G 2.5(li).05 G 2.5(nS)-2.5 G(ETL:)
-2.5 E F0(if)144 258.4 Q F2(a)2.5 E/F3 10/Symbol SF(=)2.5 E F2(0)2.5 E
F0(and)2.5 E F2 2.5(b/a>3)2.5 G F0(then)A F2(...)2.5 E(since the di)108
282.4 Q(vision de\214nitely will not be performed if the di)-.25 E
(visor a is zero.)-.25 E(The operator)133 298.6 Q F0(not)2.5 E F2
(yields TR)2.5 E(UE if its operand is F)-.4 E(ALSE and F)-.74 E
(ALSE if its operand is TR)-.74 E(UE.)-.4 E .764(If an e)133 314.8 R
.763(xpression other than a test constructed with a test operator appea\
rs in a test conte)-.15 F(xt,)-.15 E .106(then the v)108 326.8 R .106
(alue must be either TR)-.25 F .106
(UE \(in which case the test succeeds\) or F)-.4 F .106
(ALSE \(in which case the)-.74 F(test f)108 338.8 Q(ails\). An)-.1 E 2.5
(yo)-.15 G(ther v)-2.5 E(alue used in a test conte)-.25 E
(xt causes an error)-.15 E(.)-.55 E F0 2.5(1.7.3. Case)108 362.8 R
(Statement)2.5 E F2 .125(Another form of conditional branch is pro)133
379 R .124(vided by the case statement, which has the follo)-.15 F(w-)
-.25 E(ing form:)108 391 Q F0(case of)158 415 Q F2(\(test1\): block1)158
427 Q(\(test2\): block2)158 439 Q F0(else)158 451 Q F2(block)2.5 E(e)-.1
E F0(end)158 463 Q F2 59.1(CASE; $)2.5 F(or simply)2.5 E F0(end)2.5 E F2
(;)A .813(This statement causes one of the speci\214ed blocks \(sequenc\
es of statements\) to be e)108 487 R -.15(xe)-.15 G 3.313(cuted. The).15
F .279(block which is e)108 499 R -.15(xe)-.15 G .279
(cuted is the one whose corresponding test succeeds.).15 F(The)5.278 E
F0(else)2.778 E F2 .278(block is e)2.778 F -.15(xe)-.15 G(cuted).15 E
1.217(if all the tests f)108 511 R 1.217
(ail. If more than one test succeeds, then only one of the blocks is e)
-.1 F -.15(xe)-.15 G 1.218(cuted, the).15 F .948
(choice of which block to e)108 523 R -.15(xe)-.15 G .948
(cute being made in an arbitrary manner \(in the same sense that the).15
F F0(arb)108 535 Q F2
(operator selects an arbitrary element from a set\).)2.5 E 2.55(Av)133
551.2 S .05(ery common use of the)-2.7 F F0(case)2.55 E F2 .05
(statement in)2.55 F -.2(vo)-.4 G(lv).2 E .05(es tests of the form t)
-.15 F F3(=)A F2 2.55(xw)C .05(here t is a quantity)-2.55 F .081
(to be tested, and the v)108 563.2 R .081(arious v)-.25 F .08
(alues of x are attached to statements which are to be e)-.25 F -.15(xe)
-.15 G .08(cuted if t has).15 F .45(the speci\214ed v)108 575.2 R .45
(alue. A special abbre)-.25 F .45(viated form of the)-.25 F F0(case)2.95
E F2 .45(statement is a)2.95 F -.25(va)-.2 G .45
(ilable for this purpose,).25 F(which has the form:)108 587.2 Q F0(case)
158 611.2 Q F2 -.15(ex)2.5 G(pression).15 E F0(of)2.5 E F2
(\(const1\): block1)158 623.2 Q(\(const2\): block2)158 635.2 Q F0(else)
158 647.2 Q F2(block)2.5 E(e)-.1 E F0(end case)158 659.2 Q F2 69.39(;$)C
F0(or end)-66.89 E F2 2.5(;o)C(r)-2.5 E F0(end case)2.5 E F2(tok)2.5 E
(ens;)-.1 E EP
%%Page: 19 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 19).1 E/F1 10/Times-Roman@0
SF .404(In this case, the e)108 130 R .403(xpression is e)-.15 F -.25
(va)-.25 G .403
(luated, and then compared with each of the constants. The block).25 F
.31(whose associated constant v)108 142 R .31(alue matches is then e)
-.25 F -.15(xe)-.15 G .311(cuted. If no v).15 F .311
(alue matches then the)-.25 F F0(else)2.811 E F1(block)2.811 E(is e)108
154 Q -.15(xe)-.15 G(cuted.).15 E .523(In either of the)133 170.2 R F0
(case)3.023 E F1 .522(forms, the)3.022 F F0(else)3.022 E F1 .522
(and its associated block may be omitted. If none of the)3.022 F 1.508
(branches of a)108 182.2 R F0(else)4.008 E F1 1.508(with no)4.008 F F0
(else)4.008 E F1 1.508(block match, then e)4.008 F -.15(xe)-.15 G 1.508
(cution continues with the ne).15 F 1.508(xt statement)-.15 F(without e)
108 194.2 Q -.15(xe)-.15 G(cuting an).15 E 2.5(yo)-.15 G 2.5(ft)-2.5 G
(he blocks.)-2.5 E
(More than one test or constant can be attached to a gi)133 210.4 Q -.15
(ve)-.25 G 2.5(nc).15 G(ase branch by:)-2.5 E(\(e1,e2,..en\): block)144
234.4 Q(\(test1,test2,..testn\): block)144 246.4 Q .932
(in which case the block will be e)108 270.4 R -.15(xe)-.15 G .932
(cuted if the e).15 F .932(xpression matches an)-.15 F 3.431(yo)-.15 G
3.431(ft)-3.431 G .931(he gi)-3.431 F -.15(ve)-.25 G 3.431(nv).15 G .931
(alues or if)-3.681 F(an)108 282.4 Q 2.5(yo)-.15 G 2.5(ft)-2.5 G
(he tests succeed.)-2.5 E F0 2.5(1.8. Loops)108 306.4 R F1 2.723(Al)133
322.6 S .224(oop is used where a block of statements is to be e)-2.723 F
-.15(xe)-.15 G .224(cuted repeatedly until some speci\214ed).15 F(condi\
tion is met, or for some speci\214ed number of times. One form of a loo\
p in SETL is:)108 334.6 Q F0(loop)158 358.6 Q F1(iterator)2.5 E F0(do)
2.5 E F1(block)178 370.6 Q F0(end loop)158 382.6 Q F1 32.82(;$)C(or)
-30.32 E F0(end)2.5 E F1 2.5(;o)C(r)-2.5 E F0(end loop)2.5 E F1(tok)2.5
E(ens;)-.1 E(An alternate form \(with the same meaning\) is:)108 406.6 Q
2.5(\(i)158 430.6 S(terator \))-2.5 E(block)178 442.6 Q F0(end)158 454.6
Q F1 30(;$)C(or)-27.5 E F0(end)2.5 E F1(tok)2.5 E(ens;)-.1 E 1.047
(In the latter case tok)108 470.8 R 1.047(ens, if gi)-.1 F -.15(ve)-.25
G 3.547(ni).15 G 3.547(nt)-3.547 G 1.046(he terminator)-3.547 F 3.546
(,d)-.4 G 1.046(oes not include the left parenthesis used to)-3.546 F
(open the loop.)108 482.8 Q .462
(Either form causes the block of statements to be e)108 499 R -.15(xe)
-.15 G .463(cuted repeatedly under control of the iterator).15 F(.)-.55
E -.4(Wi)108 511 S(thin the body of the loop, an).4 E 2.5(ys)-.15 G
(tatements can be used, as well as tw)-2.5 E 2.5(os)-.1 G
(pecial statements:)-2.5 E F0(continue;)144 535 Q(continue)144 547 Q F1
(tok)2.5 E(ens;)-.1 E(Ex)108 559 Q .221(ecution of the)-.15 F F0
(continue)2.721 E F1 .22(statement causes the rest of the statements in\
 the body of the loop to be)2.721 F .065(skipped, and e)108 571 R -.15
(xe)-.15 G .065(cution continues with the ne).15 F .066
(xt iteration \(if there is one\). The form in which tok)-.15 F(ens)-.1
E 1.605(are copied from the corresponding)108 583 R F0(loop)4.104 E F1
1.604(statement is useful where loops are nested, to specify)4.104 F
(which loop is being continued.)108 595 Q F0(quit;)144 619 Q(quit)144
631 Q F1(tok)2.5 E(ens;)-.1 E 1.257(This statement causes e)108 655 R
-.15(xe)-.15 G 1.258
(cution of the loop to be immediately terminated, and control resumes)
.15 F 1.164(with the statement past the)108 667 R F0 1.163(end loop.)
3.663 F F1 1.163(As with)6.163 F F0(continue)3.663 E F1 3.663(,t)C 1.163
(he form with tok)-3.663 F 1.163(ens copied from the)-.1 F F0(loop)108
679 Q F1(statement may be used to indicate which loop is to be terminat\
ed when loops are nested.)2.5 E EP
%%Page: 20 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 20).1 E/F1 10/Times-Roman@0
SF .987(The iterator itself has one of se)133 130 R -.15(ve)-.25 G .988
(ral forms. A full description of iterator forms appears in).15 F
(chapter 5. In this chapter we discuss the tw)108 142 Q 2.5(of)-.1 G
(orms which are most commonly used:)-2.5 E F0 -.25(fo)144 166 S(r).25 E
F1 2.5(xi)2.5 G 2.5(ns)-2.5 G(et)-2.5 E F0 -.25(fo)144 178 S(r).25 E F1
2.5(xi)2.5 G 2.5(nt)-2.5 G(uple)-2.5 E .575
(In these forms, set and tuple are e)108 202 R .574
(xpressions which yield v)-.15 F .574
(alues of type set and tuple respeci)-.25 F -.15(ve)-.25 G(ly).15 E(,)
-.65 E .154(and x is the iteration v)108 214 R .154
(ariable, which is set to successi)-.25 F .454 -.15(ve v)-.25 H .154
(alues from the set or tuple. In the case of)-.1 F 2.999(at)108 226 S
.499(uple, the number of iterations is equal to the inde)-2.999 F 2.999
(xo)-.15 G 2.999(ft)-2.999 G .499
(he last de\214ned element, and the element)-2.999 F -.25(va)108 238 S
.414(lues are selected in sequence. In the set case, the number of iter\
ations is equal to the number of).25 F .899
(elements in the set and the order in which the elements are tak)108 250
R .899(en is arbitrary \(in the same sense)-.1 F(that)108 262 Q F0(arb)
2.5 E F1(yields an arbitrary element\).)2.5 E(\()158 286 Q F0 -.25(fo)C
(r).25 E F1(x)2.5 E F0(in)2.5 E F1(s\))2.5 E F0(print)178 298 Q F1 69.39
(\(x\); $)B(prints elements of s)2.5 E F0(end loop;)158 310 Q(loop f)158
334 Q(or)-.25 E F1(x)2.5 E F0(in)2.5 E F1([1,10,50])2.5 E F0(do)2.5 E F1
(...)180.5 346 Q F0(end loop)158 358 Q F1(x;)2.5 E .435(The iteration v)
108 382 R .435(ariable x can actually be an)-.25 F 2.935(yv)-.15 G .436
(alid assignment left hand side.)-3.185 F .436(In the case of the set)
5.436 F(iterator)108 394 Q 2.5(,t)-.4 G(his pro)-2.5 E(vides a con)-.15
E -.15(ve)-.4 G(nient notation for iterating through a map:).15 E(\()144
418 Q F0 -.25(fo)C(r).25 E F1([number)2.5 E(,root])-.4 E F0(in)2.5 E F1
(sqrt\) ...)2.5 E .552(If the set is null, then the loop body is not e)
108 442 R -.15(xe)-.15 G .552
(cuted at all, and control skips immediately past the).15 F F0(end.)108
454 Q F1 .486(Iterations through a sequence of inte)133 470.2 R .487
(gers \(similar to the)-.15 F F0(do)2.987 E F1(or)2.987 E F0 -.25(fo)
2.987 G(r).25 E F1 .487(loops of other languages\))2.987 F .829
(may be con)108 482.2 R -.15(ve)-.4 G .828(niently speci\214ed using th\
e special form of tuple constructor for constructing tuples).15 F
(of inte)108 494.2 Q(gers:)-.15 E F0(loop f)158 518.2 Q(or)-.25 E F1(i)
2.5 E F0(in)2.5 E F1([1..100])2.5 E F0(do)2.5 E F1(\(statements e)178
530.2 Q -.15(xe)-.15 G(cuted 100 times with i).15 E/F2 10/Symbol SF(=)A
F1(1,2...\))A F0(end loop)158 542.2 Q F1(;)A(\()158 566.2 Q F0 -.25(fo)C
(r).25 E F1(i)2.5 E F0(in)2.5 E F1([1,3..99]\))2.5 E(\(statements e)178
578.2 Q -.15(xe)-.15 G(cuted 50 times with i).15 E F2(=)A F1(1,3,5..\))A
F0(end f)158 590.2 Q(or)-.25 E F1(i;)2.5 E(An interesting possibility i\
n SETL is to use a set former for such loops:)108 614.2 Q F0(loop f)158
638.2 Q(or)-.25 E F1(i)2.5 E F0(in)2.5 E F1({1..100})2.5 E F0(do)2.5 E
F1(\(statements e)178 650.2 Q -.15(xe)-.15 G(cuted 100 times\)).15 E F0
(end loop)158 662.2 Q F1(;)A EP
%%Page: 21 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 21).1 E/F1 10/Times-Roman@0
SF .295(This loop has a similar ef)108 130 R .296
(fect to the one using a tuple former e)-.25 F .296
(xcept that there is no implication as)-.15 F .811
(to the order in which the 100 possible v)108 142 R .811
(alues of i are selected.)-.25 F .811(Good SETL style suggests using)
5.811 F .396(the set former e)108 154 R .396
(xcept in cases where the order is signi\214cant, thus a)-.15 F -.2(vo)
-.2 G .397(iding unnecessary o).2 F -.15(ve)-.15 G(rspeci-).15 E
(\214cation.)108 166 Q .291(Either of these iterator forms may be combi\
ned with a test which selects only certain v)133 182.2 R(alues)-.25 E
(meeting some condition to be included in the iteration:)108 194.2 Q(\()
144 218.2 Q F0 -.25(fo)C(r).25 E F1(x)2.5 E F0(in)2.5 E F1 2.5(s|x>5)2.5
G 2.5(\).)-2.5 G(..)-2.5 E(\()144 230.2 Q F0 -.25(fo)C(r).25 E F1(i)2.5
E F0(in)2.5 E F1([1,2..10] | f\(i\) > 0\) ...)2.5 E .35
(The | is read "such that" and may be replaced by the k)108 254.2 R -.15
(ey)-.1 G -.1(wo).15 G(rd).1 E F0(st)2.85 E F1 .35(if the v)2.85 F .35
(ertical bar character is not)-.15 F -.2(av)108 266.2 S 1.054
(ailable. The ef)-.05 F 1.054(fect is to skip an)-.25 F 3.554(yv)-.15 G
1.054(alues not meeting the test. F)-3.804 F 1.053(or e)-.15 F 1.053
(xample, the follo)-.15 F 1.053(wing loop)-.25 F -.15(exe)108 278.2 S
(cutes 5 times with e).15 E -.15(ve)-.25 G 2.5(nv).15 G(alues of i:)
-2.75 E(\()144 302.2 Q F0 -.25(fo)C(r).25 E F1(i)2.5 E F0(in)2.5 E F1
({1,2..10} |)2.5 E F0 -2.3 -.15(ev e)2.5 H(n).15 E F1(i\) ....)2.5 E F0
(end)2.5 E F1(;)A(Three other loop forms which can be written are:)133
318.4 Q F0(loop while)128 346.6 Q F1(test)2.5 E F0(do)2.5 E F1 2.5($l)15
G(oop while test succeeds)-2.5 E(...)135.5 358.6 Q F0(end loop)128 370.6
Q F1 48.89(;$)C(or)-46.39 E F0(end)2.5 E F1 2.5(;o)C(r)-2.5 E F0
(end loop)2.5 E F1(tok)2.5 E(ens;)-.1 E F0(loop until)128 394.6 Q F1
(test)2.5 E F0(do)2.5 E F1 2.5($l)17.77 G(oop until test f)-2.5 E(ails)
-.1 E(...)135.5 406.6 Q F0(end loop)128 418.6 Q F1 48.89(;$)C(or)-46.39
E F0(end)2.5 E F1 2.5(;o)C(r)-2.5 E F0(end loop)2.5 E F1(tok)2.5 E(ens;)
-.1 E F0(loop do)128 442.6 Q F1 2.5($i)56.67 G(nde\214nite loop)-2.5 E
(...)135.5 454.6 Q F0(end loop)128 466.6 Q F1 48.89(;$)C(or)-46.39 E F0
(end)2.5 E F1 2.5(;o)C(r)-2.5 E F0(end loop)2.5 E F1(tok)2.5 E(ens;)-.1
E .534(The \214rst of these forms, the)108 487 R F0(while)3.034 E F1
.534
(loop, iterates the body of the loop until the speci\214ed condition)
3.034 F 1.296(is F)108 499 R 3.796(ALSE. The)-.74 F 1.295(test is perfo\
rmed at the start of the loop, so that it is possible to skip the loop)
3.796 F -.15(exe)108 511 S(cution entirely if the test condition is F)
.15 E(ALSE on initial entry to the loop.)-.74 E 1.765
(The second form, the)108 527.2 R F0(until)4.265 E F1 1.765
(loop, iterates the body of the loop until the speci\214ed condition is)
4.265 F(TR)108 539.2 Q .921(UE. The test is performed at the end of the\
 loop, so the body of the loop is e)-.4 F -.15(xe)-.15 G .921
(cuted at least).15 F(once, e)108 551.2 Q -.15(ve)-.25 G 2.5(ni).15 G
2.5(ft)-2.5 G(he condition is TR)-2.5 E(UE the \214rst time.)-.4 E 1.221
(The third form is an inde\214nite loop. The loop will continue to e)108
567.4 R -.15(xe)-.15 G 1.222(cute until it is terminated by).15 F -.15
(exe)108 579.4 S(cuting a).15 E F0(stop)2.5 E F1(or)2.5 E F0(quit)2.5 E
F1(statement or a)2.5 E F0(goto)2.5 E F1(which leads out of the loop.)
2.5 E
(As with the iterator form of the loop, parentheses can replace the)133
595.6 Q F0(loop)2.5 E F1(and)2.5 E F0(do)2.5 E F1 -.1(ke)2.5 G(yw)-.05 E
(ords:)-.1 E(\()128 623.8 Q F0(while)A F1 12.5(test\) $)2.5 F
(loop while test succeeds)2.5 E(...)135.5 635.8 Q EP
%%Page: 22 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 22).1 E(end)128 130 Q/F1 10
/Times-Roman@0 SF 42.49(;$)C(or)-39.99 E F0(end)2.5 E F1(tok)2.5 E(ens;)
-.1 E(\()128 154 Q F0(until)A F1 15.27(test\) $)2.5 F(loop till test f)
2.5 E(ails)-.1 E(...)135.5 166 Q F0(end)128 178 Q F1 42.49(;$)C(or)
-39.99 E F0(end)2.5 E F1(tok)2.5 E(ens;)-.1 E 44.17 2.5(\(\) $i)128 202
T(nde\214nite loop)-2.5 E(...)135.5 214 Q F0(end;)128 226 Q 2.5
(1.8.1. Set)108 266.2 R 2.5(&T)2.5 G(uple F)-3.42 E(ormers)-.25 E F1 .52
(So f)133 282.4 R(ar)-.1 E 3.02(,w)-.4 G 3.02(eh)-3.02 G -2.25 -.2(av e)
-3.02 H .52(formed sets by enumerating the elements.)3.22 F .52
(The set former is a special form)5.52 F
(of a loop which computes a set v)108 294.4 Q
(alue with an iteration. The form is:)-.25 E({e)144 318.4 Q
(xpression : iterator})-.15 E .777(The iterator has e)108 342.4 R .777
(xactly the same form as a loop iterator)-.15 F 3.277(,e)-.4 G .777
(xcept that the k)-3.427 F -.15(ey)-.1 G -.1(wo).15 G(rd).1 E F0 -.25
(fo)3.277 G(r).25 E F1 .778(is omitted.)3.277 F .385(The ef)108 354.4 R
.385(fect is to iterate the calculation of the e)-.25 F .384
(xpression, and b)-.15 F .384(uild a set from the v)-.2 F .384
(alues. The most)-.25 F(frequently used form in)108 366.4 Q -.2(vo)-.4 G
(lv).2 E(es a set or numeric iterator as sho)-.15 E(wn by the follo)-.25
E(wing e)-.25 E(xamples:)-.15 E({n : n)128 394.6 Q F0(in)2.5 E F1 26.86
({1..100}} $)2.5 F(inte)2.5 E(gers from 1 to 100)-.15 E({[x**2,x] : x)
128 406.6 Q F0(in)2.5 E F1 12.5({1..5} $)2.5 F(square root map)2.5 E
({a : a)128 418.6 Q F0(in)2.5 E F1 2.5(y|a)2.5 G 35.5(>5} $)-2.5 F
(elements > 5)2.5 E 1.435(The follo)108 446.8 R 1.435(wing abbre)-.25 F
1.436(viation is permitted, allo)-.25 F 1.436(wing e)-.25 F 1.436
(xpression to be elided where it corresponds)-.15 F -.15(ex)108 458.8 S
(actly to the loop v).15 E(ariable of an iterator pro)-.25 E
(vided that the iterator contains a | \(or)-.15 E F0(st)2.5 E F1 2.5
(\)c)C(lause:)-2.5 E({a)128 487 Q F0(in)2.5 E F1 -.15(ex)2.5 G(pr | c})
.15 E 2.5(${)25.33 G 2.5(a:a)-2.5 G F0(in)A F1 -.15(ex)2.5 G(pr | c}).15
E({a)128 499 Q F0(in)2.5 E F1([x,y)2.5 E(..z] | c})-.65 E 2.5(${)15 G
2.5(a:a)-2.5 G F0(in)A F1([x,y)2.5 E(..z] | c})-.65 E(Notes:)108 527.2 Q
.555(If tw)133 543.4 R 3.055(oo)-.1 G 3.055(rm)-3.055 G .555
(ore iterations produce the same v)-3.055 F .554(alue in a set former)
-.25 F 3.054(,t)-.4 G .554(hen only one cop)-3.054 F 3.054(yo)-.1 G
3.054(ft)-3.054 G(he)-3.054 E -.25(va)133 555.4 S
(lue is placed in the set.).25 E 1.194
(If the iterator terminates after zero iterations, i.e.)133 571.6 R -.15
(ex)6.195 G 1.195(pression is ne).15 F -.15(ve)-.25 G 3.695(rc).15 G
1.195(alculated, then the)-3.695 F(result is a null set.)133 583.6 Q
(Error termination results from an attempt to place)133 599.8 Q F0(om)
2.5 E F1(into a set.)2.5 E -.45(Tu)133 616 S .277
(ple formers are identical in form, b).45 F .276
(ut written with tuple brack)-.2 F .276(ets, rather than set brack)-.1 F
(ets.)-.1 E -.15(Fo)108 628 S 2.668(rat).15 G .168(uple former)-2.668 F
2.668(,t)-.4 G .168(he successi)-2.668 F .469 -.15(ve v)-.25 H .169
(alues, which may include duplicated v)-.1 F .169
(alues, are placed into the)-.25 F(tuple in sequence:)108 640 Q EP
%%Page: 23 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 23).1 E/F1 10/Times-Roman@0
SF([0 : i)128 130 Q F0(in)2.5 E F1 12.5([1..100]] $)2.5 F
(tuple of length 100, all 0)2.5 E([x)128 142 Q F0(in)2.5 E F1 2.5(s|x<0)
2.5 G 25.69(]$)-2.5 G(tuple of ne)-23.19 E -.05(ga)-.15 G(ti).05 E .3
-.15(ve e)-.25 H(lements of s).15 E F0 2.5(1.8.2. Quanti\214ed)108 182.2
R -.92(Te)2.5 G(sts).92 E F1 -1 -.8(Tw o)133 198.4 T .115
(special forms, called quanti\214ed tests, can be used in conte)3.415 F
.114(xts requiring a test, or to gen-)-.15 F(erate one of the tw)108
210.4 Q 2.5(ov)-.1 G(alues TR)-2.75 E(UE or F)-.4 E(ALSE in other conte)
-.74 E(xts:)-.15 E F0(exists)144 234.4 Q F1(iterator | test)2.5 E F0
-.25(fo)144 246.4 S(rall).25 E F1(iterator | test)2.5 E(The)108 270.4 Q
F0(exists)3.518 E F1 1.018(test e)3.518 F -.15(xe)-.15 G 1.019
(cutes an implied loop speci\214ed by the iterator).15 F 3.519(,w)-.4 G
1.019(hich has the same form as a)-3.519 F .179(loop iterator)108 282.4
R 2.679(,e)-.4 G .179(xcept that the k)-2.829 F -.15(ey)-.1 G -.1(wo).15
G(rd).1 E F0 -.25(fo)2.679 G(r).25 E F1 .179(is omitted.)2.679 F .179
(On each loop, the test after the | is e)5.179 F -.25(va)-.25 G(luated.)
.25 E .857
(If the test succeeds, then the loop is immediately terminated, lea)108
294.4 R .858(ving the loop v)-.2 F .858(ariable set to the)-.25 F -.25
(va)108 306.4 S .15(lue which caused the test to succeed, and the).25 F
F0(exists)2.649 E F1 .149(test itself succeeds.)2.649 F .149
(If the speci\214ed test f)5.149 F(ails)-.1 E .202(for all iterations o\
f the loop, then the loop is terminated, setting the iteration v)108
318.4 R .202(ariable to unde\214ned,)-.25 F(and the)108 330.4 Q F0
(exists)2.5 E F1(test f)2.5 E(ails.)-.1 E .129(In the case of the)133
346.6 R F0 -.25(fo)2.629 G(rall).25 E F1 .128
(test, the loop is terminated as soon as the test f)2.629 F .128
(ails, lea)-.1 F .128(ving the itera-)-.2 F .262(tion v)108 358.6 R .262
(ariables set to the v)-.25 F .263(alues which caused the f)-.25 F 2.763
(ailure. If)-.1 F .263(the test succeeds for all loops, then the)2.763 F
(iteration v)108 370.6 Q(ariables are set to unde\214ned and the)-.25 E
F0 -.25(fo)2.5 G(rall).25 E F1(succeeds.)2.5 E(The follo)133 386.8 Q
(wing are some e)-.25 E(xamples of the use of these quanti\214ed tests:)
-.15 E 2.5(s:)178 415 S/F2 10/Symbol SF(=)-2.5 E F1({1,2,10,20};)2.5 E
2.5(t:)178 427 S F2(=)-2.5 E F1([1,2,10,20];)2.5 E F0(if exists)178 451
Q F1(x)2.5 E F0(in)2.5 E F1 2.5(s|x>3)2.5 G F0(then)185.5 463 Q F1 2.5
($w)78.22 G(ill be e)-2.5 E -.15(xe)-.15 G(cuted with x).15 E F2(=)2.5 E
F1(20 or 10)2.5 E F0(else)185.5 475 Q F1 2.5($w)81.56 G(ill not be e)
-2.5 E -.15(xe)-.15 G(cuted).15 E F0(end)178 487 Q F1(;)A F0(if exists)
178 511 Q F1(x)2.5 E F0(in)2.5 E F1 2.5(t|x>3)2.5 G F0(then)185.5 523 Q
F1 2.5($w)78.22 G(ill be e)-2.5 E -.15(xe)-.15 G(cuted with x).15 E F2
(=)2.5 E F1(10)2.5 E F0(else)185.5 535 Q F1 2.5($w)81.56 G(ill not be e)
-2.5 E -.15(xe)-.15 G(cuted).15 E F0(end)178 547 Q F1(;)A F0(if f)178
571 Q(orall)-.25 E F1(x)2.5 E F0(in)2.5 E F1 2.5(a|x<3)2.5 G(0)-2.5 E F0
(then)185.5 583 Q F1 2.5($w)78.22 G(ill be e)-2.5 E -.15(xe)-.15 G
(cuted with x).15 E F2(=)2.5 E F0(om)2.5 E(else)185.5 595 Q F1 2.5($w)
81.56 G(ill not be e)-2.5 E -.15(xe)-.15 G(cuted).15 E F0(end;)178 607 Q
(if exists)178 631 Q F1(x)2.5 E F0(in)2.5 E F1 2.5(t|x>3)2.5 G(0)-2.5 E
F0(then)185.5 643 Q F1 2.5($w)78.22 G(ill not be e)-2.5 E -.15(xe)-.15 G
(cuted).15 E EP
%%Page: 24 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 24).1 E(else)185.5 130 Q/F1
10/Times-Roman@0 SF 2.5($w)81.56 G(ill be e)-2.5 E -.15(xe)-.15 G
(cuted with x).15 E/F2 10/Symbol SF(=)2.5 E F0(om)2.5 E(end;)178 142 Q
(if f)178 178 Q(orall)-.25 E F1(x)2.5 E F0(in)2.5 E F1 2.5(t|x<1)2.5 G
(0)-2.5 E F0(then)185.5 190 Q F1 2.5($w)78.22 G(ill not be e)-2.5 E -.15
(xe)-.15 G(cuted).15 E F0(else)185.5 202 Q F1 2.5($w)81.56 G(ill be e)
-2.5 E -.15(xe)-.15 G(cuted with x).15 E F2(=)2.5 E F1(10)2.5 E F0(end)
178 214 Q F1(;)A F0 2.5(1.8.3. Compound)108 254.2 R(Operators)2.5 E F1
.188(Another specialized form of loop in SETL is the compound operator)
133 270.4 R 5.187(.A)-.55 G .187(compound operator)-2.5 F .021
(can be formed from an)108 282.4 R 2.521(yb)-.15 G .021
(inary operator by appending a slash / to the name of the operator)
-2.521 F 5.021(.S)-.55 G .022(uch a)-5.021 F
(compound operator can be used in one of tw)108 294.4 Q 2.5(oe)-.1 G
(xpression forms:)-2.65 E(bop/ e)144 318.4 Q(xprs)-.15 E -.15(ex)144
330.4 S(pre bop/ e).15 E(xprs)-.15 E .74(The ef)108 354.4 R .739
(fect is to apply the binary operator bop to the sequence of element v)
-.25 F .739(alues e1,e2.. in e)-.25 F(xprs,)-.15 E
(which must be a set or tuple, as follo)108 366.4 Q(ws:)-.25 E(bop/ e)
128 394.6 Q 37.06(xprs means)-.15 F(e1 bop e2 bop e3 ...)15 E -.15(ex)
128 406.6 S(pre bop/ e).15 E 12.5(xprs means e)-.15 F
(xpre bop e1 bop e2 ...)-.15 E .573(If the compound operator form is us\
ed with a null set or null tuple, then the result is e)108 434.8 R .574
(xpre in the)-.15 F .309(second form and)108 446.8 R F0(om)2.809 E F1
.309(in the \214rst form where e)2.809 F .309(xpre is omitted. Thus e)
-.15 F .308(xpre typically functions as an)-.15 F 1.09
(identity element in the second form. The follo)108 458.8 R 1.09(wing e)
-.25 F 1.09(xamples sho)-.15 F 3.59(wh)-.25 G 1.59 -.25(ow t)-3.59 H
1.09(he compound operator).25 F(forms can be used:)108 470.8 Q 90.185
(+/t $)133 499 R(sum of v)2.5 E(alues in tuple)-.25 E 85.185(0+/t $)133
511 R(same, b)2.5 E(ut 0 rather than)-.2 E F0(om)2.5 E F1(for [)2.5 E(])
1.666 E(*/ [a)133 535 Q F0(in)2.5 E F1 2.5(s|3)2.5 G F0(in)A F1(a])2.5 E
2.5($c)120.5 547 S(omputes intersection o)-2.5 E -.15(ve)-.15 G 2.5(ra)
.15 G(ll sets in s \(s is a set of sets\) which contain the v)-2.5 E
(alue 3)-.25 E 83.525(\264\264+/t $)133 559 R -.2(bu)2.5 G
(ilds string from tuple of characters).2 E F0 2.5(1.9. Input/Output)108
599.2 R F1(There are three distinct types of input/output in SETL:)133
615.4 Q/F3 10/Times-Italic@0 SF(Str)108 631.6 Q(eam Input/Output)-.37 E
F1 1.781(Stream input/output is used primarily with "card reader" input\
 \214les and "printer" output)133 643.6 R .052(\214les, and is intended\
 for direct input of human prepared input, and output of human readable)
133 655.6 R .756(printout. This type of input/output is oriented to tra\
nsmission of indi)133 667.6 R .755(vidual v)-.25 F .755(alues in string)
-.25 F EP
%%Page: 25 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 25).1 E/F1 10/Times-Roman@0
SF(form.)133 130 Q/F2 10/Times-Italic@0 SF(Recor)108 146.2 Q 2.5(dI)-.37
G(nput/Output)-2.5 E F1 .391(Record input/output deals only with string\
s. An input operation obtains a record as a string,)133 158.2 R .609(an\
d an output operation outputs a string as a single record. Record input\
/output is intended)133 170.2 R .213(for communication with programs wr\
itten in languages other than SETL, and is also used to)133 182.2 R .59
(read directly prepared input if such input is more naturally treated a\
s strings, rather than as)133 194.2 R(indi)133 206.2 Q
(vidual items as in the stream case.)-.25 E F2(Binary Input/Output)108
222.4 Q F1 .352(Binary input/output deals with SETL v)133 234.4 R .353
(alues of an)-.25 F 2.853(yt)-.15 G .353
(ype and transmits then in a special ef)-2.853 F<8c2d>-.25 E .984
(cient internal form.)133 246.4 R .983
(Binary output is only used to output v)5.983 F .983
(alues which are to be read into)-.25 F 1.768(either the same SETL prog\
ram, or some other SETL program, using binary input state-)133 258.4 R
(ments.)133 270.4 Q .031
(Full details of all three kinds of input/output are gi)133 286.6 R -.15
(ve)-.25 G 2.531(ni).15 G 2.53(nt)-2.531 G .03(he chapter de)-2.53 F -.2
(vo)-.25 G .03(ted to this purpose.).2 F .332(In this introduction, we \
describe only the most frequently used input/output calls for reading s\
tan-)108 298.6 R
(dard "card reader" input, and generation of standard "printer" output.)
108 310.6 Q(The)133 326.8 Q F0 -.18(re)2.872 G(ad).18 E F1 .372
(procedure is used to read v)2.872 F .372
(alues from data lines from the standard input source in)-.25 F
(stream mode:)108 338.8 Q F0 -.18(re)144 362.8 S(ad).18 E F1
(\(lhs,lhs,...\);)A 2.013(This procedure call reads successi)108 386.8 R
2.313 -.15(ve v)-.25 H 2.013(alues separated by blanks or commas.)-.1 F
2.013(Data v)7.013 F 2.014(alues are)-.25 F(entered in the follo)108
398.8 Q(wing form:)-.25 E(Inte)108 415 Q
(gers are entered as strings of digits preceded by an optional sign.)
-.15 E .598(Reals are entered in the same format as real denotations e)
108 431.2 R .597(xcept that an optional preceding sign is)-.15 F
(permitted.)108 443.2 Q .625(Strings can be entered in the same format \
as string constants in SETL, including the surrounding)108 459.4 R 1.566
(quotes. The)108 471.4 R 4.066(ym)-.15 G 1.566
(ay be split across line boundaries.)-4.066 F 1.566
(In addition, strings which ha)6.566 F 1.866 -.15(ve t)-.2 H 1.566
(he form of).15 F .256(SETL identi\214ers \(i.e. start with a letter an\
d contain only letters, digits and the underline character\))108 483.4 R
.717(may be entered without surrounding quote marks.)108 495.4 R .716
(Such string items may not be split across line)5.717 F(boundaries.)108
507.4 Q(An * in the input stream causes the corresponding v)108 523.6 Q
(alue to be set to unde\214ned)-.25 E F0(\(om\).)2.5 E F1 .699(The v)108
539.8 R .699(alues TR)-.25 F .699(UE and F)-.4 F .7
(ALSE are entered as #T and #F \(or #t and #f, either upper or lo)-.74 F
.7(wer case)-.25 F(may be used\).)108 551.8 Q .621(Set v)108 568 R .621
(alues are input using either { } or << >> set brack)-.25 F .621
(ets. The list of v)-.1 F .621(alues in the set are in the)-.25 F(forma\
t described in this section, and may be separated either by blanks or b\
y commas.)108 580 Q -.45(Tu)108 596.2 S .302(ple v).45 F .303
(alues are input in a similar manner using [ ] or \(/ /\) brack)-.25 F
.303(ets and in addition, simple paren-)-.1 F
(theses are accepted as tuple brack)108 608.2 Q(ets in input data.)-.1 E
1.312(The ar)133 624.4 R 1.312(guments used in the call to)-.18 F F0
-.18(re)3.811 G(ad).18 E F1 1.311(are an)3.811 F 3.811(yv)-.15 G 1.311
(alid assignment left hand sides, and the)-4.061 F(ef)108 636.4 Q .65
(fect of the)-.25 F F0 -.18(re)3.15 G(ad).18 E F1 .651
(call is to input the appropriate number of items from successi)3.15 F
.951 -.15(ve i)-.25 H .651(nput lines \(as).15 F(required\) and mak)108
648.4 Q 2.5(et)-.1 G(he assignments in sequence.)-2.5 E .765
(The special symbol)133 664.6 R F0(eof)3.265 E F1 .765(\(actually it is\
 a special system function call\) may be used as a test)3.265 F(follo)
108 676.6 Q .385(wing a)-.25 F F0 -.18(re)2.885 G(ad).18 E F1 .386(call\
. This test succeeds if the last read attempted to read past the end of\
 \214le, and)2.885 F EP
%%Page: 26 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 26).1 E/F1 10/Times-Roman@0
SF -.1(fa)108 130 S .453(ils if the end of \214le w).1 F .452
(as not encountered. An)-.1 F 2.952(yi)-.15 G .452(nput v)-2.952 F .452
(alues which were not a)-.25 F -.25(va)-.2 G .452(ilable because of).25
F .996(encountering the end of \214le cause the corresponding v)108 142
R .996(ariables to be set to unde\214ned)-.25 F F0(\(om\).)3.496 E F1
(The)5.996 E(follo)108 154 Q 1.287(wing e)-.25 F 1.287(xample sho)-.15 F
1.287(ws ho)-.25 F 3.787(was)-.25 G 1.287
(eries of input items \(up to the end of \214le\) can be stored in a)
-3.787 F(tuple:)108 166 Q .4 LW 183.56 190 178.56 190 DL 2.5(input data)
158 190 R(:)2.5 E/F2 10/Symbol SF(=)A F1 1.666([])2.5 G(;)-1.666 E F0
(loop do)158 202 Q -.18(re)178 214 S(ad).18 E F1(\(ne)A(xt\);)-.15 E F0
(if eof then quit; end;)178 226 Q 203.56 238 198.56 238 DL F1 2.5
(input data)178 238 R F0(with)2.5 E F1(:)A F2(=)A F1(ne)2.5 E(xt;)-.15 E
F0(end loop)158 250 Q F1(;)A(The)108 274 Q F0(get)2.634 E F1 .134(funct\
ion may be used to read input lines one at a time as strings. This allo)
2.634 F .134(ws string data to)-.25 F .895(be entered without surroundi\
ng quote marks, and the program determines the required format of)108
286 R .101(the input. The)108 298 R F0(get)2.601 E F1 .101
(function must be pro)2.601 F .101
(vided with the \214le name of the \214le to be read.)-.15 F 2.601(An)
5.101 G .101(ull string)-2.601 F(may be used to specify the standard in\
put \214le in an implementation independant manner:)108 310 Q F0(get)144
334 Q F1(\(')A(',lhs\);)-.74 E .005(This call to)108 358 R F0(get)2.505
E F1 .005(will cause the ne)2.505 F .004(xt input line to be read from \
the standard input \214le and assigned as)-.15 F 2.803(as)108 370 S .303
(tring v)-2.803 F .303(alue to lhs.)-.25 F F0(Eof)5.303 E F1 .304
(is set as described abo)2.803 F .604 -.15(ve t)-.15 H 2.804(oi).15 G
.304(ndicate whether or not the call attempted to)-2.804 F
(read past the end of \214le.)108 382 Q .384
(Printed output is generated with the)133 398.2 R F0(print)2.884 E F1
.384(function, which gi)2.884 F -.15(ve)-.25 G 2.884(sal).15 G .383
(ist of items to be printed)-2.884 F(in stream mode:)108 410.2 Q F0
(print)144 434.2 Q F1(\(e)A(xpression,e)-.15 E(xpression, ... e)-.15 E
(xpression\);)-.15 E(Each e)108 458.2 Q(xpression is e)-.15 E -.25(va)
-.25 G
(luated and printed in a manner appropriate to its datatype as follo).25
E(ws:)-.25 E F0(Integer)144 482.2 Q F1 .785(The inte)108 506.2 R .785
(ger v)-.15 F .785(alue is con)-.25 F -.15(ve)-.4 G .785(rted to a stri\
ng of decimal digits of appropriate length with no leading).15 F .842
(zeroes \(e)108 518.2 R .841(xcept in the case of zero itself\). A prec\
eding minus sign is used if the v)-.15 F .841(alue is ne)-.25 F -.05(ga)
-.15 G(ti).05 E -.15(ve)-.25 G(\(b)108 530.2 Q(ut positi)-.2 E .3 -.15
(ve v)-.25 H(alues do not generate a plus sign\).)-.1 E F0(Real)144
554.2 Q F1 .126(Real v)108 578.2 R .126(alues are con)-.25 F -.15(ve)-.4
G .126(rted either in \214x).15 F .126(ed point format or e)-.15 F .126
(xponent notation, dpending on the range.)-.15 F .153
(The number of digits is chosen to be appropriate to the accurac)108
590.2 R 2.653(yw)-.15 G .153(ith which real v)-2.653 F .153
(alues are stored.)-.25 F F0(String)144 614.2 Q F1 .267
(The handling of strings depends on whether the)108 638.2 R 2.767(ya)
-.15 G .267(ppear directly in the print list, or as elements of)-2.767 F
.194(tuples or maps. If the)108 650.2 R 2.694(ya)-.15 G .194
(ppear in the print list, the)-2.694 F 2.694(ya)-.15 G .194
(re printed literally)-2.694 F 2.693(,w)-.65 G .193
(ithout surronding quotes,)-2.693 F .76(and without an)108 662.2 R 3.26
(ys)-.15 G .761(pecial treatment of internal quotes.)-3.26 F .761
(Strings which appear as elements of tuples)5.761 F .505
(or sets are treated in a dif)108 674.2 R .505(ferent manner)-.25 F
3.005(.I)-.55 G 3.005(ft)-3.005 G .505(he string v)-3.005 F .505
(alues are of the form of identi\214ers \(starting)-.25 F EP
%%Page: 27 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 27).1 E/F1 10/Times-Roman@0
SF .034(with a letter and containing only letters, digits and the under\
line\), then the v)108 130 R .035(alue is printed literally)-.25 F(.)
-.65 E .198(All other string v)108 142 R .198(alues appearing as elemen\
ts of sets or tuples are printed with surrounding quotes,)-.25 F(and an)
108 154 Q 2.5(yi)-.15 G(nternal quotes are printed as tw)-2.5 E 2.5(os)
-.1 G(uccessi)-2.5 E .3 -.15(ve q)-.25 H(uotes.).15 E F0(Boolean)144 178
Q F1(The boolean v)108 202 Q(alues TR)-.25 E(UE and F)-.4 E
(ALSE are printed as #T and #F respecti)-.74 E -.15(ve)-.25 G(ly).15 E
(.)-.65 E F0(Om)144 226 Q F1(\(unde\214ned\))2.5 E(An unde\214ned v)108
250 Q(alue is printed as a single * \(asterisk\) character)-.25 E(.)-.55
E F0 -.92(Tu)144 274 S(ples).92 E F1 -.45(Tu)108 298 S .855(ple v).45 F
.855(alues are output as a series of v)-.25 F .856
(alues separated by single blanks and surrounded by tuple)-.25 F(brack)
108 310 Q .875(ets [)-.1 F .875(], or)1.666 F 3.375(,i)-.4 G 3.375(ni)
-3.375 G .875(mplementations which do not ha)-3.375 F 1.175 -.15(ve t)
-.2 H .875(hese characters, simple parentheses.).15 F(The)5.874 E -.25
(va)108 322 S 1.268(lues within the tuple are con).25 F -.15(ve)-.4 G
1.268(rted indi).15 F(vidually)-.25 E 3.768(,s)-.65 G 1.269
(trings being output with surrounding quotes)-3.768 F(unless the)108 334
Q 2.5(yh)-.15 G -2.25 -.2(av e)-2.5 H(the form of identi\214ers.)2.7 E
F0(Sets)144 358 Q F1 1.222
(Sets are output in the same manner as tuples e)108 382 R 1.222
(xcept that the list of v)-.15 F 1.222(alues is surrounded by set)-.25 F
(brack)108 394 Q(ets { }, or by << and >> if these characters are una)
-.1 E -.25(va)-.2 G(ilable.).25 E .456(>From this description, it can b\
e seen that the format used is essentially e)133 410.2 R .456
(xactly compatible)-.15 F 1.111(with the input format accepted by)108
422.2 R F0 -.18(re)3.611 G(ad).18 E F1 1.111(with the e)3.611 F 1.11
(xception that strings appearing directly in the)-.15 F F0(print)108
434.2 Q F1 .016(list are printed without quotes. This discrepanc)2.516 F
2.516(ya)-.15 G(llo)-2.516 E .017(ws the con)-.25 F -.15(ve)-.4 G .017
(nient output of titling infor).15 F(-)-.2 E(mation as in:)108 446.2 Q
F0(print)144 470.2 Q F1(\('V)A(alue of)-1.11 E(', a, ' +', b, ').55 E/F2
10/Symbol SF(=)2.5 E F1(', a+b\);)A .199(Each ne)108 494.2 R 2.699(wc)
-.25 G .199(all to)-2.699 F F0(print)2.699 E F1 .199(causes a ne)2.699 F
2.699(wl)-.25 G .199(ine to be started.)-2.699 F .198
(Blanks are inserted to separate consecuti)5.199 F -.15(ve)-.25 G -.25
(va)108 506.2 S .744(lues, and if the v).25 F .745(alue to be printed d\
oes not \214t one a single line, line returns are inserted in an)-.25 F
.407(attempt to mak)108 518.2 R 2.907(et)-.1 G .407
(he output as readable as possible.)-2.907 F(Calling)5.407 E F0(print)
2.907 E F1 .407(with a null ar)2.907 F .406(gument list gener)-.18 F(-)
-.2 E(ates a blank line:)108 530.2 Q F0(print)128 558.4 Q F1 1.666(\(\))
C 15(;$)-1.666 G(Print blank line)-12.5 E(or)128 570.4 Q F0(print)128
582.4 Q F1 23.326(;$)C(Print blank line)-20.826 E(The)108 610.6 Q F0
(eject)3.05 E F1 .55(procedure, which uses no ar)3.05 F .551
(guments, causes a page eject, and the)-.18 F F0(title)3.051 E F1 .551
(procedure sets a)3.051 F .329
(title string which is printed at the head of each page of output.)108
622.6 R .329(In the absence of a call to the)5.329 F F0(title)2.829 E F1
.971(procedure, the printout resulting from the)108 634.6 R F0(print)
3.471 E F1 .971(procedure prints continuously \(o)3.471 F -.15(ve)-.15 G
3.471(rt).15 G .971(he creases\))-3.471 F .02(unless the)108 646.6 R F0
(eject)2.52 E F1 .02(procedure is used. After calling)2.52 F F0(title,)
2.519 E F1 .019(automatic page ejects are generated when the)2.519 F
1.868(page is full \(the appropriate de\214nition of full being dependa\
nt on the en)108 658.6 R 1.869(vironment\). In titling)-.4 F EP
%%Page: 28 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 28).1 E/F1 10/Times-Roman@0
SF .854(mode, all page ejects result in printing the title together wit\
h a page number)108 130 R 3.354(,a)-.4 G .854(nd actual printout)-3.354
F 1.864(starts on the third line of each page.)108 142 R 1.864
(More than one call to)6.864 F F0(title)4.364 E F1 1.864
(is permitted, the title being)4.364 F .496(changed, b)108 154 R .496
(ut the page numbering is undisturbed.)-.2 F 2.996(Ac)5.496 G .496
(all to)-2.996 F F0(title)2.996 E F1 .495
(causes an automatic eject, so that)2.995 F .93(the ne)108 166 R 3.43
(wt)-.25 G .93(itle is established immediately)-3.43 F 3.43(.C)-.65 G
(alling)-3.43 E F0(title)3.43 E F1 .93(with no ar)3.43 F .93
(gument disconnects titling mode)-.18 F
(and returns to the normal \(continuous printing\) mode.)108 178 Q F0
(eject)128 206.2 Q F1 41.12(;$)C(eject to ne)-38.62 E 2.5(wp)-.25 G(age)
-2.5 E F0(title)128 218.2 Q F1 12.5(\(string\); $)B(set title to string)
2.5 E F0(title)128 230.2 Q F1 44.44(;$)C(disconnect titling mode)-41.94
E F0 2.5(1.10. Labels)108 270.4 R(and the Goto Statements)2.5 E F1(An)
133 286.6 Q 2.5(ys)-.15 G(tatement in SETL may be labeled:)-2.5 E
(label: statement;)144 310.6 Q
(where label is an identi\214er not used for an)108 334.6 Q 2.5(yo)-.15
G(ther purpose.)-2.5 E(The)5 E F0(goto)2.5 E F1(statement:)2.5 E F0
(goto)144 358.6 Q F1(label;)2.5 E .243
(causes control to pass to the labeled statement. As in an)108 382.6 R
2.742(yl)-.15 G(ang)-2.742 E .242(auge which pro)-.05 F .242
(vides structured con-)-.15 F 1.115
(ditionals and looping statements, the use of the)108 394.6 R F0(goto)
3.616 E F1 1.116(should be minimized. The ob)3.616 F 1.116
(vious restric-)-.15 F .586(tions on the use of)108 406.6 R F0(goto)
3.086 E F1 1.686 -.55('s \()D .586(e.g. ag).55 F .586
(ainst jumping into loops, or into a)-.05 F F0(case)3.086 E F1 .585
(statement from outside\))3.086 F(apply)108 418.6 Q 2.5(,a)-.65 G
(lthough it is permissible to jump out of loops and other structures.)
-2.5 E F0 2.5(1.11. Stop)108 442.6 R(Statement)2.5 E F1(The)133 458.8 Q
F0(stop)2.5 E F1(statement:)2.5 E F0(stop)158 482.8 Q F1(;)A .242
(may be e)108 506.8 R -.15(xe)-.15 G .242(cuted at an).15 F 2.742(yp)
-.15 G .243(oint in the program and causes immediate termination of e)
-2.742 F -.15(xe)-.15 G .243(cution. Ex).15 F(e-)-.15 E .969
(cution termination can also result simply from e)108 518.8 R -.15(xe)
-.15 G .968(cuting the last statement of the main program).15 F(block.)
108 530.8 Q F0 2.5(1.12. P)108 554.8 R(ass Statement)-.1 E F1(The)133
571 Q F0(pass)2.5 E F1(statement:)2.5 E F0(pass)158 595 Q F1(;)A .991
(has no ef)108 619 R .991(fect and thus acts as a null statement. It is\
 sometimes useful in connection with condi-)-.25 F 1.516(tional stateme\
nts in the case where no actions are to be performed under some conditi\
ons, for)108 631 R -.15(ex)108 643 S(ample in:).15 E F0(case)158 667 Q
F1(i)2.5 E F0(of)2.5 E EP
%%Page: 29 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 29).1 E/F1 10/Times-Roman@0
SF(\(1,3,5\):)158 130 Q F0(print)2.5 E F1(\(i\);)A(\(2,4,7\):)158 142 Q
F0(print)2.5 E F1(\(i+1\);)A(\(0,6,9\):)158 154 Q F0(pass)2.5 E F1 18.94
(;$)C(do nothing in these cases)-16.44 E F0(else print)158 166 Q F1
(\('no good'\);)A F0(end case)158 178 Q F1(;)A F0 2.5(1.13. Pr)108 214 R
(ogram F)-.18 E(orm)-.25 E F1 2.5(Ac)133 230.2 S
(omplete program in SETL has the form:)-2.5 E F0(pr)158 254.2 Q(ogram)
-.18 E F1(name;)2.5 E(\(global v)158 266.2 Q(ariable declarations\))-.25
E(\(main program block\))158 278.2 Q
(\(procedure and operator de\214nitions\))158 290.2 Q F0(end pr)158
302.2 Q(ogram)-.18 E F1 12.5(name; $)2.5 F(or)2.5 E F0(end)2.5 E F1 2.5
(;o)C(r)-2.5 E F0(end pr)2.5 E(ogram)-.18 E F1(;)A F0 2.5
(1.13.1. Declarations)108 338.2 R F1 1.903
(The global declarations, which are used if there are v)133 354.4 R
1.903(ariables which are to be accessed)-.25 F .438(directly by more th\
an one procedure, or by the main program and some other procedure, ha)
108 366.4 R .737 -.15(ve t)-.2 H(he).15 E(form:)108 378.4 Q F0 -.1(va)
144 402.4 S(r).1 E F1(name,name,...;)2.5 E F0(const)144 414.4 Q F1(name)
2.5 E/F2 10/Symbol SF(=)A F1 -.25(va)C(lue, name).25 E F2(=)A F1 -.25
(va)C(lue, ...;).25 E F0(init)144 426.4 Q F1(name:)2.5 E F2(=)A F1 -.25
(va)C(lue, name:).25 E F2(=)A F1 -.25(va)C(lue, ...;).25 E(The)108 450.4
Q F0 -.1(va)3.125 G(r).1 E F1 .625
(statement merely names a list of global v)3.125 F .625
(ariables which are assigned an initial)-.25 F F0(om)3.125 E F1 -.25(va)
3.125 G(lue).25 E 1.104(as usual. The)108 462.4 R F0(const)3.604 E F1
1.104(statement de\214nes identi\214ers to be associated with speci\214\
ed constant v)3.604 F(alues.)-.25 E 1.255(Such constant identi\214ers c\
annot appear on the left side of assignments. The right hand sides in)
108 474.4 R F0(const)108 486.4 Q F1 1.276
(declarations may be denotations, pre)3.777 F 1.276
(viously declared constant names, or sets or tuples of)-.25 F .282
(constant v)108 498.4 R .282(alues. The)-.25 F F0(init)2.782 E F1 .282
(statement has is similar in form to the)2.782 F F0(const)2.783 E F1
.283(statement, b)2.783 F .283(ut declares v)-.2 F(ari-)-.25 E
(ables which are initialized to the gi)108 510.4 Q -.15(ve)-.25 G 2.5
(nc).15 G(onstant v)-2.5 E(alue, b)-.25 E
(ut may be subsequently modi\214ed.)-.2 E .85(All v)133 526.6 R .85(ari\
ables and constants declared in the global declarations section may be \
accessed by)-.25 F(an)108 538.6 Q 2.5(yp)-.15 G
(art of the program, including an)-2.5 E 2.5(yp)-.15 G
(rocedures or operator de\214nitions.)-2.5 E(An)133 554.8 Q 2.86(yi)-.15
G .36(denti\214ers which are referenced in the main program block, b)
-2.86 F .36(ut which are not included)-.2 F .012
(in the global declarations are pri)108 566.8 R -.25(va)-.25 G .012
(te to the main program block and may not be accessed by proce-).25 F
(dure and operator de\214nitions.)108 578.8 Q F0 2.5(1.13.2. Main)108
602.8 R(Pr)2.5 E(ogram Block)-.18 E F1 .422
(The main program block consists of a series of statements follo)133 619
R .422(wed by an)-.25 F 2.923(yr)-.15 G .423(e\214nements ref-)-2.923 F
.193(erenced in this series of statements. A re\214nement is a block of\
 statements which is labeled with an)108 631 R(identi\214er)108 643 Q
6.235(.W)-.55 G 1.236(ithin the main sequence of statements, a re\214ne\
ment can be referenced by using its)-6.635 F .003
(label as a statement. Re\214nements can themselv)108 655 R .002
(es reference other re\214nements, b)-.15 F .002
(ut the de\214nitions of)-.2 F .665(re\214nements do not nest, the)108
667 R 3.165(ya)-.15 G .665
(re written in a linear sequence, one after another)-3.165 F 3.165(.T)
-.55 G .665(he follo)-3.165 F .665(wing is)-.25 F 1.747(an e)108 679 R
1.747(xample of a main program block which uses re\214nements. Note tha\
t the de\214nitions of the)-.15 F EP
%%Page: 30 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 30).1 E/F1 10/Times-Roman@0
SF .274(re\214nements themselv)108 130 R .275
(es are similar in form to normal label de\214nitions, e)-.15 F .275
(xcept that the name is fol-)-.15 F(lo)108 142 Q(wed by tw)-.25 E 2.5
(oc)-.1 G(olons.)-2.5 E EP
%%Page: 31 32
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 31).1 E(pr)158 130 Q(ogram)
-.18 E/F1 10/Times-Roman@0 SF(quadratic;)2.5 E .4 LW 183.56 154 178.56
154 DL 2.5(input data;)158 154 R(solv)158 166 Q 183.96 166 178.96 166 DL
5(ee)174.52 166 S(quation;)-5 E 188.56 178 183.56 178 DL 2.5
(output results;)158 178 R 183.56 202 178.56 202 DL 2.5(input data::)158
202 R F0 -.18(re)178 214 S(ad).18 E F1(\(a,b,c\);)A F0(print)178 226 Q
F1(\(a,b,c\);)A 206.32 238 201.32 238 DL 2.5(check eof;)178 238 R(solv)
158 262 Q 183.96 262 178.96 262 DL 5(ee)174.52 262 S(quation::)-5 E 2.5
(x:)178 274 S/F2 10/Symbol SF(=)-2.5 E F1
(\(-b + sqrt\(b:b-4:a:c\)\) / \(2*a\);)2.5 E 188.56 298 183.56 298 DL
2.5(output results::)158 298 R F0(print)178 310 Q F1
(\(' root is ', x\);)A 186.32 334 181.32 334 DL 2.5(check eof::)158 334
R F0(if eor then print)178 346 Q F1(\('improper data'\);)A F0
(stop; end if;)2.5 E(end pr)158 370 Q(ogram)-.18 E F1(quadratic;)2.5 E
.052(Re\214nements are e)108 394 R -.15(xe)-.15 G .052(cuted by inserti\
ng the series of statements of the re\214nement in place of the ref-).15
F .327(erence to the re\214nement.)108 406 R(Unlik)5.327 E 2.827(ep)-.1
G .327(rocedures, there is no w)-2.827 F .328
(ay of passing parameters, and the state-)-.1 F .192
(ments of the re\214nement ha)108 418 R .491 -.15(ve f)-.2 H .191(ull a\
ccess to all identi\214ers of the main program, including its labels.)
.15 F 2.535(Ag)108 430 S -2.15 -.25(iv e)-2.535 H 2.535(nr).25 G .035(e\
\214nement may be referenced only once. If a section of code is to be u\
sed more than once,)-2.535 F
(it should be made a procedure rather than a re\214nement.)108 442 Q F0
2.5(1.13.3. Pr)108 466 R(ocedur)-.18 E 2.5(eD)-.18 G(e\214nitions)-2.5 E
F1(The form of a procedure de\214nition is:)133 482.2 Q F0(pr)158 506.2
Q(oc)-.18 E F1(prname\(ar)2.5 E(g1, ar)-.18 E(g2, ar)-.18 E(g3\);)-.18 E
(\(local declarations\))178 518.2 Q(block)178 530.2 Q(\(re\214nements\))
178 542.2 Q F0(end pr)158 554.2 Q(oc)-.18 E F1(tok)2.5 E .89(ens; $)-.1
F(or)2.5 E F0(end pr)2.5 E(oc)-.18 E F1 2.5(;o)C(r)-2.5 E F0(end)2.5 E
F1(;)A .997(This de\214nes a procedure whose name is prname, which must\
 be an identi\214er not used for)133 582.4 R(an)108 594.4 Q 4.273(yo)
-.15 G 1.773(ther purpose in the program.)-4.273 F 1.773
(The list of parameters ar)6.773 F 1.774(g1, ar)-.18 F 1.774
(g2 are identi\214ers which are)-.18 F .712(assigned the ar)108 606.4 R
.712(gument v)-.18 F .712(alues when the procedure is called.)-.25 F
.712(These names are strictly local to the)5.712 F .887
(procedure, and must be dif)108 618.4 R .888
(ferent from the names of an)-.25 F 3.388(yg)-.15 G .888
(lobally declared identi\214ers. W)-3.388 F .888(ithin the)-.4 F .271(p\
rocedure, these names act as ordinary identi\214ers. It is permissible \
to reassign ne)108 630.4 R 2.771(wv)-.25 G .271(alues to these)-3.021 F
.737(identi\214ers in the body of the procedure, b)108 642.4 R .737
(ut such assignments do not af)-.2 F .737(fect the parameters in the)
-.25 F .743(call since the call is a call by v)108 654.4 R 3.243
(alue. If)-.25 F .743(there are no ar)3.243 F .743
(guments, then the parentheses surrounding)-.18 F(the ar)108 666.4 Q
(gument list may be omitted, or a null list may be retained.)-.18 E EP
%%Page: 32 33
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 32).1 E/F1 10/Times-Roman@0
SF .656(The declaration section, if it is present, contains)133 130 R F0
-.1(va)3.156 G 2.496 -.92(r, c).1 H(onst).92 E F1(and)3.156 E F0(init)
3.156 E F1 .656(statements in the same)3.156 F 1.934
(format as that used in the global declaration section. An)108 142 R
4.433(yn)-.15 G 1.933(ames declared in this manner are)-4.433 F .117
(strictly local to the procedure, and must be dif)108 154 R .117
(ferent from an)-.25 F 2.618(yn)-.15 G .118
(ames declared as global. Identi\214ers)-2.618 F .375(used in the body \
of the procedure which are not declared either locally or globally are \
tak)108 166 R .375(en to be)-.1 F .974(local, as though the)108 178 R
3.474(yh)-.15 G .975(ad been declared locally using a)-3.474 F F0 -.1
(va)3.475 G(r).1 E F1 .975(statement. The initialization of v)3.475 F
(ari-)-.25 E .578(ables to)108 190 R F0(om)3.078 E F1 .578
(\(if declared by)3.078 F F0 -.1(va)3.077 G -.92(r,).1 G F1 .577
(or implicitly declared\) or to the speci\214ed v)3.997 F .577
(alues in the)-.25 F F0(init)3.077 E F1(state-)3.077 E
(ments occurs on each entry to the procedure.)108 202 Q -.4(Wi)133 218.2
S .067(thin the body of the procedure, the).4 F F0 -.18(re)2.567 G(tur)
.18 E(n)-.15 E F1 .068
(statement is used to return control to the caller)2.567 F(,)-.4 E
(and pro)108 230.2 Q(vide a returned v)-.15 E(alue. The format is:)-.25
E F0 -.18(re)144 254.2 S(tur).18 E(n)-.15 E F1 -.15(ex)2.5 G(pression;)
.15 E F0 -.18(re)144 266.2 S(tur).18 E(n)-.15 E F1 5.78(;$)C(means)-3.28
E F0 -.18(re)2.5 G(tur).18 E 2.5(no)-.15 G(m)-2.5 E F1 .431(If no)108
290.2 R F0 -.18(re)2.931 G(tur).18 E(n)-.15 E F1 .431(statement is e)
2.931 F -.15(xe)-.15 G .431(cuted, the procedure returns after e).15 F
-.15(xe)-.15 G .43(cuting the \214nal statement in the).15 F
(block, the returned result being)108 302.2 Q F0(om.)2.5 E F1 .127(Proc\
edures may be called either as a statement \(in which case the returned\
 v)133 318.4 R .127(alue is ignored\),)-.25 F(or as a function in an e)
108 330.4 Q(xpression, in which case the returned v)-.15 E
(alue is the v)-.25 E(alue of the function call:)-.25 E 25.85
(prname\(10,120,30\); $)128 358.6 R(call as a statement)2.5 E 2.5(a:)128
370.6 S/F2 10/Symbol SF(=)-2.5 E F1 2.5(b+p)2.5 G 12.5
(rname\(1,2,3\); $)-2.5 F(call as a function)2.5 E .888(Multiple v)108
398.8 R .888(alues can con)-.25 F -.15(ve)-.4 G .888
(niently be returned from a procedure by using tuple formers and tuple)
.15 F(assignment:)108 410.8 Q([x,y)158 434.8 Q(,z] :)-.65 E F2(=)A F1
(prname\(2,3\);)2.5 E F0(pr)158 446.8 Q(oc)-.18 E F1(prname\(ar)2.5 E
(g1,ar)-.18 E(g2\);)-.18 E F0 -.18(re)158 458.8 S(tur).18 E(n)-.15 E F1
([10,20,a+b];)2.5 E F0(end pr)158 470.8 Q(oc)-.18 E F1(;)A 1.713
(Procedures in SETL may be called recursi)108 494.8 R -.15(ve)-.25 G
1.714(ly \(i.e. the).15 F 4.214(ym)-.15 G 1.714(ay call themselv)-4.214
F 1.714(es directly or indi-)-.15 F 1.132
(rectly\). All identi\214ers which are local to the procedure are sa)108
506.8 R -.15(ve)-.2 G 3.632(dr).15 G(ecursi)-3.632 E -.15(ve)-.25 G
1.132(ly to a).15 F -.2(vo)-.2 G 1.132(id confusion).2 F(between v)108
518.8 Q(alues at dif)-.25 E(ferent recursion le)-.25 E -.15(ve)-.25 G
(ls:).15 E F0(pr)158 542.8 Q(oc)-.18 E F1 -.1(fa)2.5 G(ctorial\(ar).1 E
(g\);)-.18 E F0(if)178 554.8 Q F1(ar)2.5 E(g)-.18 E F2(=)A F1(1)A F0
(then)2.5 E -.18(re)198 566.8 S(tur).18 E(n)-.15 E F1(1;)2.5 E F0(else)
178 578.8 Q -.18(re)198 590.8 S(tur).18 E(n)-.15 E F1(ar)2.5 E 2.5(g*f)
-.18 G(actorial\(ar)-2.6 E(g-1\);)-.18 E F0(end if;)178 602.8 Q(end pr)
158 614.8 Q(oc)-.18 E F1 -.1(fa)2.5 G(ctorial;).1 E 1.406(Procedures ma\
y use re\214nements in the same manner as described for the main progra\
m block.)108 638.8 R .747(These re\214nements are pri)108 650.8 R -.25
(va)-.25 G .747
(te to the procedure, and their de\214nitions occur prior to the).25 F
F0 .746(end pr)3.246 F(oc;)-.18 E F1 2.703
(which terminates the procedure de\214nition.)108 662.8 R 2.704
(There is no nesting of procedure de\214nitions, all)7.703 F EP
%%Page: 33 34
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 33).1 E/F1 10/Times-Roman@0
SF(procedures can be called from an)108 130 Q(ywhere in the program.)
-.15 E .648(Procedures declared in the manner gi)108 146.2 R -.15(ve)
-.25 G 3.148(na).15 G(bo)-3.148 E .948 -.15(ve a)-.15 H(llo).15 E 3.148
(wo)-.25 G .648(nly call by v)-3.148 F .648(alue. The follo)-.25 F .647
(wing e)-.25 F(xtended)-.15 E(form of procedure de\214nition allo)108
158.2 Q(ws one or more ar)-.25 E(guments to be speci\214ed as v)-.18 E
(alue recei)-.25 E(ving:)-.25 E F0(pr)144 182.2 Q(oc)-.18 E F1
(name \(type ar)2.5 E(g, type ar)-.18 E(g, type ar)-.18 E(g, ...\);)-.18
E(where type is one of the follo)108 206.2 Q(wing:)-.25 E F0(rd)144
230.2 Q F1 1.225(The ar)108 254.2 R 1.226(gument is read only)-.18 F
3.726(.T)-.65 G 1.226(his is the def)-3.726 F 1.226(ault v)-.1 F 1.226
(alue obtained if type is omitted, and causes the)-.25 F(ar)108 266.2 Q
.016(gument to be passed by v)-.18 F .016
(alue in the manner already described.)-.25 F -.4(Wi)5.015 G .015
(thin the body of the procedure).4 F .282
(the parameter name is treated as a v)108 278.2 R .282(ariable, b)-.25 F
.282(ut modi\214cations to the v)-.2 F .283(alue of such v)-.25 F .283
(ariables do not)-.25 F(af)108 290.2 Q(fect the ar)-.25 E
(guments in the call.)-.18 E F0(rw)144 314.2 Q F1 1.062(The ar)108 338.2
R 1.062(gument is read/write. The v)-.18 F 1.061(alue of the ar)-.25 F
1.061(gument will be passed as the initial v)-.18 F 1.061(alue of the)
-.25 F(parameter)108 350.2 Q 5.414(.T)-.55 G .414
(he parameter identi\214er is treated as a v)-5.414 F .415
(ariable in the body of the procedure, and may)-.25 F .196
(be reassigned a ne)108 362.2 R 2.696(wv)-.25 G .196
(alue. On return from the procedure, whate)-2.946 F -.15(ve)-.25 G 2.696
<728c>.15 G .196(nal v)-2.696 F .196(alue is in this v)-.25 F .195
(ariable at)-.25 F .145(the point when the)108 374.2 R F0 -.18(re)2.645
G(tur).18 E(n)-.15 E F1 .145(statement is e)2.645 F -.15(xe)-.15 G .145
(cuted is transmitted back as the ne).15 F 2.646(wv)-.25 G .146
(alue of the calling)-2.896 F(ar)108 386.2 Q(gument \(which must ha)-.18
E .3 -.15(ve t)-.2 H
(he proper syntax for an assignment left hand side\).).15 E F0(wr)144
410.2 Q F1 .273(The ar)108 434.2 R .273(gument is write only)-.18 F
2.773(.O)-.65 G 2.773(ne)-2.773 G .272
(ntry to the function, the initial v)-2.773 F .272
(alue of the corresponding param-)-.25 F .793(eter is set to)108 446.2 R
F0(om.)3.294 E F1 .794(The parameter is treated as a v)5.794 F .794
(ariable and assigned to the calling ar)-.25 F .794(gument on)-.18 F
(return in the same manner as described for a read/write parameter)108
458.2 Q(.)-.55 E .578(There is also a form which allo)133 474.4 R .578
(ws a v)-.25 F .578(ariable number of ar)-.25 F .577
(guments to be passed to a proce-)-.18 F(dure:)108 486.4 Q F0(pr)144
510.4 Q(oc)-.18 E F1(name \(type ar)2.5 E(g1, type ar)-.18 E
(g2, .. type ar)-.18 E(gn \(*\)\);)-.18 E .718
(Such a procedure may be called with an)108 534.4 R 3.218(yn)-.15 G .718
(umber of ar)-3.218 F .718(guments greater than n-1. The e)-.18 F .719
(xtra ar)-.15 F(gu-)-.18 E .211(ments are g)108 546.4 R .211
(athered into a tuple which is assigned as the v)-.05 F .21
(alue of the ar)-.25 F .21(gn parameter)-.18 F 5.21(.T)-.55 G .21
(hus the ref-)-5.21 F .614(erence ar)108 558.4 R .615
(gn\(2\) in the body of the procedure refers to the n+1')-.18 F .615
(th ar)-.18 F .615(gument in the call. The special)-.18 F(symbol)108
570.4 Q F0(nar)2.66 E(gs)-.1 E F1(gi)2.66 E -.15(ve)-.25 G 2.66(st).15 G
.16(he total number of ar)-2.66 F .16
(guments present in the call. Only the last parameter may)-.18 F 1.234
(be follo)108 582.4 R 1.234(wed by \(*\) to indicate that it is v)-.25 F
1.234(ariable in length.)-.25 F 3.734(Av)6.234 G 1.234
(ariable length parameter may as)-3.984 F .405
(usual be speci\214ed to be)108 594.4 R F0 .405(rd, rw)2.905 F F1(or)
2.905 E F0(wr)2.905 E F1(\(with)2.905 E F0(rd)2.905 E F1 .404
(being the def)2.904 F 2.904(ault\). In)-.1 F(the)2.904 E F0(wr)2.904 E
F1 .404(case, the initial v)2.904 F(alue)-.25 E(of ar)108 606.4 Q
(gn is the null tuple v)-.18 E(alue.)-.25 E F0 2.5(1.13.4. Operator)108
630.4 R(De\214nitions)2.5 E F1 2.904(As)133 646.6 S .404(pecial form of\
 procedure de\214nition is used to introduce a program de\214ned operat\
or)-2.904 F 2.904(.I)-.55 G 2.904(ti)-2.904 G(s)-2.904 E .001
(identical to an ordinary procedure e)108 658.6 R .001
(xcept for the initial de\214nition line which replaces the)-.15 F F0
(pr)2.5 E(oc)-.18 E F1(line:)2.5 E EP
%%Page: 34 35
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 1)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 34).1 E(op)128 130 Q/F1 10
/Times-Roman@0 SF 20(.name\(a\); $)2.5 F(to de\214ne a unary operator)
2.5 E F0(op)128 142 Q F1 12.5(.name\(a,b\); $)2.5 F
(to de\214ne a binary operator)2.5 E .21(The ef)108 170.2 R .21(fect of\
 such a de\214nition is similar to that of the corresponding procedure \
declaration, e)-.25 F(xcept)-.15 E .943
(the call uses ordinary operator \(e)108 182.2 R .943
(xpression\) format.)-.15 F .943
(The operator name is preceded by a period,)5.943 F
(both in the de\214nition \(as sho)108 194.2 Q(wn abo)-.25 E -.15(ve)
-.15 G 2.5(\)a).15 G(nd when the operator is used in an e)-2.5 E
(xpression.)-.15 E .395
(The precedence of all binary operators de\214ned in this manner is lo)
133 210.4 R .396(wer than that of the stan-)-.25 F .174
(dard system operators e)108 222.4 R .174
(xcept for the assigning operators.)-.15 F .174
(Operators de\214ned in this manner al)5.174 F -.1(wa)-.1 G(ys).1 E(ha)
108 234.4 Q .913 -.15(ve r)-.2 H .613(ead only ar).15 F .613
(guments \(as though)-.18 F F0(rd)3.113 E F1 .613
(were speci\214ed\). In the case of a de\214ned binary operator)3.113 F
(,)-.4 E 2.163(the corresponding assignment operator and compound opera\
tor forms are automatically made)108 246.4 R -.2(av)108 258.4 S
(ailable.)-.05 E EP
%%Page: 35 36
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(CHAPTER 2)270.666 132.4 R(PR)222.684 175.6 Q
(OGRAMMING EXAMPLES)-.36 E/F1 10/Times-Roman@0 SF .258
(At this stage we ha)133 307 R .558 -.15(ve s)-.2 H .259
(een enough of the SETL language to sho).15 F 2.759(ws)-.25 G .259
(ome complete programs.)-2.759 F .28(All programming languages ha)108
319 R .58 -.15(ve a)-.2 H 2.78(na).15 G .28
(ssociated style of programming. The purpose of this chapter)-2.78 F
(is to gi)108 331 Q .3 -.15(ve a)-.25 H 2.5(ni).15 G
(dea of typical SETL programming style.)-2.5 E .677
(In each case, the statement of the problem is gi)133 347.2 R -.15(ve)
-.25 G 3.177<6e8c>.15 G .678(rst \(in quotations\). F)-3.177 F(ollo)-.15
E .678(wing this, the)-.25 F .529(program is de)133 359.2 R -.15(ve)-.25
G .529(loped in a "stream of conciousness" f).15 F .528(ashion, e)-.1 F
.528(xplaining the steps in obtain-)-.15 F .362
(ing the solution, and gi)133 371.2 R .363
(ving fragments of the program as the)-.25 F 2.863(ya)-.15 G .363
(re created. Finally)-2.863 F 2.863(,t)-.65 G .363(he entire)-2.863 F
(program is gi)133 383.2 Q -.15(ve)-.25 G(n.).15 E/F2 10/Times-Bold@0 SF
2.5(2.1. A)108 407.2 R(Curriculum Planning Pr)2.5 E(oblem)-.18 E F1 .863
("In planning the sequence of presentation of topics in a course, one o\
bjecti)133 423.4 R 1.162 -.15(ve i)-.25 H 3.362(st).15 G 3.362(op)-3.362
G(resent)-3.362 E .579(topics in an order which ensures that all necess\
ary prerequisites for understanding one topic ha)108 435.4 R -.15(ve)-.2
G .439(been co)108 447.4 R -.15(ve)-.15 G .439(red before it is present\
ed." \(The same problem arises in writing a book -- hopefully this).15 F
(book is an e)108 459.4 Q(xample of a solution to this problem!\))-.15 E
.357("The purpose of the program is to compute a possible sequence of t\
opics gi)133 475.6 R -.15(ve)-.25 G 2.858(nd).15 G .358(ata on pre-)
-2.858 F .282(requisites. The input data will be pairs of topics, each \
of which is identi\214ed by a string name.)108 487.6 R -.15(Fo)5.282 G
(r).15 E -.15(ex)108 499.6 S(ample, one input line might be:).15 E
('prime numbers' , 'greatest common di)144 523.6 Q(visor')-.25 E .148(w\
hich means that "prime numbers" must be presented before "greatest comm\
on di)108 547.6 R .149(visor" is consid-)-.25 F .555(ered. In general i\
t will be necessary to trace back chains of requirements. If there is a\
lso an input)108 559.6 R(line:)108 571.6 Q -.5('d)144 595.6 S -.25(iv).5
G(ision' , 'prime numbers').25 E .307
(then of course it will be necessary to present di)108 619.6 R .308
(vision before discussing the greatest common di)-.25 F(vi-)-.25 E
(sor problem.)108 631.6 Q("F)133 647.8 Q 1.01(or a gi)-.15 F -.15(ve)
-.25 G 3.51(ns).15 G 1.01
(et of data, more than one order may be possible.)-3.51 F -.15(Fo)6.01 G
3.51(re).15 G 1.01(xample, suppose the)-3.66 F(input data is as follo)
108 659.8 Q(ws:)-.25 E F2(Chapter 2)108 756 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 35).1 E EP
%%Page: 36 37
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 2)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 36).1 E/F1 10/Times-Roman@0
SF('a' , 'b')144 130 Q('b' , 'c')144 142 Q -.5('d)144 154 S 2.5(',').5 G
(c')-2.5 E(then three possible orderings e)108 178 Q(xist:)-.15 E
('a' , 'b' , ')144 202 Q(d' , 'c')-.5 E('a' , ')144 214 Q
(d' , 'b' , 'c')-.5 E -.5('d)144 226 S 2.5(',').5 G(a' , 'b' , 'c')-2.5
E -.15(Fo)108 250 S 4.151(rt).15 G 1.651(his problem, the program is on\
ly required to print out one \(arbitrarily chosen\) possibility)-4.151 F
(where more than one e)108 262 Q(xists.)-.15 E .043
("Another possible situation is that no acceptable ordering e)133 278.2
R .043(xists as in the follo)-.15 F .043(wing e)-.25 F(xample:)-.15 E
('a' , 'b')144 302.2 Q('b' , 'c')144 314.2 Q('c' , 'a')144 326.2 Q .599
(where it is ob)108 350.2 R .599(viously impossible to satisfy the requ\
ired condition. If this situation is encountered,)-.15 F
(the program is e)108 362.2 Q(xpected to print an error message.")-.15 E
1.243(In approaching a problem of this comple)133 378.4 R(xity)-.15 E
3.743(,t)-.65 G 1.243(he \214rst decision to be made is the form in)
-3.743 F .489(which data is to be represented inside the program. If th\
is decision is made incorrectly)108 390.4 R 2.99(,t)-.65 G .49
(hen trou-)-2.99 F .479
(ble will be encountered in constructing the algorithm. F)108 402.4 R
.479(or e)-.15 F .478(xample, the decision to store the pairs)-.15 F .25
(of prerequisite information in a)108 414.4 R F0(tuple)2.75 E F1 -.1(wo)
2.75 G .251
(uld be an error in this case, as will become clear later on.).1 F .932
(The general rule in SETL is to use maps where)108 426.4 R -.15(ve)-.25
G 3.432(rp).15 G .932(ossible. This may tak)-3.432 F 3.432(es)-.1 G .931
(ome practice, espe-)-3.432 F .12
(cially if you are used to programming in some other language, b)108
438.4 R .12(ut remember this simple principle:)-.2 F
(\214nd the maps, the)108 450.4 Q 2.5(ya)-.15 G(re al)-2.5 E -.1(wa)-.1
G(ys there!).1 E .307(In the problem at hand, we can naturally represen\
t the pairs of data as a map. This map will)133 466.6 R .51(be multi-v)
108 478.6 R .51(alued, since a gi)-.25 F -.15(ve)-.25 G 3.01(nt).15 G
.51(opic may be a prerequisite for more than one other topic. The fol-)
-3.01 F(lo)108 490.6 Q(wing e)-.25 E(xample \(for a course on wine-maki\
ng\) will be used throughout the remaining discussion:)-.15 E('grape)144
514.6 Q(vines' , 'harv)-.25 E(est')-.15 E('hiring' , 'harv)144 526.6 Q
(est')-.15 E('harv)144 538.6 Q(est' , 'fermentation')-.15 E
('yeast' , 'fermentation')144 550.6 Q('alcohol' , 'yeast')144 562.6 Q
('bottles' , 'bottling')144 574.6 Q('hiring' , 'bottling')144 586.6 Q
('fermentation' , 'bottling')144 598.6 Q('bottling' , 'mark)144 610.6 Q
(eting')-.1 E('hiring' , 'mark)144 622.6 Q(eting')-.1 E .301(In additio\
n to the basic map which contains the prerequisite data, it will be use\
ful to b)108 646.6 R .3(uild an aux-)-.2 F .566
(iliary set which contains the list of topics. The follo)108 658.6 R
.566(wing initial code for the program will read in)-.25 F
(the data and b)108 670.6 Q(uild these structures:)-.2 E EP
%%Page: 37 38
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 2)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 37).1 E(pr)158 130 Q(ogram)
-.18 E/F1 10/Times-Roman@0 SF(course;)2.5 E(follo)158 142 Q(ws :)-.25 E
/F2 10/Symbol SF(=)A F1(topics :)2.5 E F2(=)A F1 1.666({})2.5 G(;)-1.666
E F0(loop do)158 154 Q -.18(re)178 166 S(ad).18 E F1(\(a,b\);)A F0
(if eof then quit; end;)178 178 Q F1(follo)178 190 Q(ws)-.25 E F0(with)
2.5 E F1(:)A F2(=)A F1([a,b];)2.5 E(topics)178 202 Q F0(with)2.5 E F1(:)
A F2(=)A F1(a;)2.5 E(topics)178 214 Q F0(with)2.5 E F1(:)A F2(=)A F1(b;)
2.5 E F0(end)158 226 Q F1(;)A .209(Note that since topics is a set, it \
cannot contain duplicate elements, so each topic occurs only once)108
250 R(in topics, e)108 262 Q -.15(ve)-.25 G 2.5(ni).15 G 2.5(fi)-2.5 G
2.5(to)-2.5 G(ccurs more than once in the input data.)-2.5 E .593
(As the initial step we can output an)133 278.2 R 3.093(yt)-.15 G .594
(opic which has no prerequisites. In terms of our data)-3.093 F .338(st\
ructure we are looking for an element in topics which has the property \
that there is no other ele-)108 290.2 R
(ment in topics which is its prerequisite. In SETL this can be e)108
302.2 Q(xpressed by:)-.15 E F0(if exists)158 326.2 Q F1(ne)2.5 E(xt)-.15
E F0(in)2.5 E F1(topics)2.5 E(|)208 338.2 Q F0(not exists)2.5 E F1(a)2.5
E F0(in)2.5 E F1(topics)2.5 E 2.5(|[)258 350.2 S(a,ne)-2.5 E(xt])-.15 E
F0(in)2.5 E F1(follo)2.5 E(ws)-.25 E .63(After e)108 374.2 R -.25(va)
-.25 G .63(luating this test, ne).25 F .63(xt will be a possible choice\
 for the \214rst topic to be output. If there is)-.15 F .969(more than \
one topic which meets the requirement, then one of them is arbitrarily \
chosen. In the)108 386.2 R -.15(ex)108 398.2 S .224
(ample being considered, a possible selection for ne).15 F .224(xt w)
-.15 F .225(ould be 'bottles', which has no prerequi-)-.1 F(sites.)108
410.2 Q 1.694 -.8(We c)133 426.4 T .093(an b).8 F .093
(uild an algorithm using this approach by successi)-.2 F -.15(ve)-.25 G
.093(ly remo).15 F .093(ving elements from top-)-.15 F .318
(ics. The abo)108 438.4 R .618 -.15(ve t)-.15 H .319
(est can then be used to e).15 F .319
(xtract topics in sequence which meet the requirement that)-.15 F(the)
108 450.4 Q 3.349(yd)-.15 G 3.349(on)-3.349 G .849(ot ha)-3.349 F 1.149
-.15(ve p)-.2 H .849(rerequisites among those topics not yet chosen. Th\
e test will \214nally f).15 F .848(ail when)-.1 F .422(there are no top\
ics which meet the requirement. If this happens because topics is null \
\(i.e. all top-)108 462.4 R .457(ics ha)108 474.4 R .757 -.15(ve b)-.2 H
.457(een output\), then all is well, otherwise there is a "c).15 F .457
(ycle" in the data which means that it)-.15 F .382
(is impossible to \214nd an acceptable order)108 486.4 R 2.882(.T)-.55 G
.382(his approach results in the follo)-2.882 F .382
(wing completion of the)-.25 F(program:)108 498.4 Q F0
(loop while exists)158 522.4 Q F1(ne)2.5 E(xt)-.15 E F0(in)2.5 E F1
(topics)2.5 E(|)208 534.4 Q F0(not exists)2.5 E F1(a)2.5 E F0(in)2.5 E
F1(topics)2.5 E 2.5(|[)258 546.4 S(a,ne)-2.5 E(xt])-.15 E F0(in)2.5 E F1
(follo)2.5 E(ws)-.25 E F0(do)158 558.4 Q F1(topics)178 570.4 Q F0(less)
2.5 E F1(:)A F2(=)A F1(ne)2.5 E(xt;)-.15 E(print\(ne)178 582.4 Q(xt\);)
-.15 E F0(end loop;)158 594.4 Q(if)158 618.4 Q F1(topics /)2.5 E F2(=)A
F1 1.666({})2.5 G F0(then)158 630.4 Q F1
(print\('No ordering is possible'\);)178 642.4 Q F0(end if;)158 654.4 Q
(end pr)158 678.4 Q(ogram)-.18 E F1(course;)2.5 E EP
%%Page: 38 39
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 2)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 38).1 E/F1 10/Times-Roman@0
SF .1(The second time through the loop, assuming 'bottles' w)108 130 R
.099(as pick)-.1 F .099(ed on the \214rst loop, 'bottling' might)-.1 F
1.507(be pick)108 142 R 4.007(ed. Although)-.1 F 1.507
(the pair ['bottles',)4.007 F 1.507('bottling'] is in follo)-.7 F 1.507
(ws, it does not pre)-.25 F -.15(ve)-.25 G 1.508(nt the choice,).15 F
(since 'bottles' w)108 154 Q(as remo)-.1 E -.15(ve)-.15 G 2.5(df).15 G
(rom topics in the \214rst loop.)-2.5 E .083(This program is complete b)
133 170.2 R .083(ut inef)-.2 F .083
(\214cient, in that each time one element is remo)-.25 F -.15(ve)-.15 G
2.582(df).15 G .082(rom top-)-2.582 F .386(ics, the entire search proce\
ss is repeated. Except for skipping the one element which w)108 182.2 R
.387(as just out-)-.1 F .222(put, the calculations in)108 194.2 R -.2
(vo)-.4 G(lv).2 E .221
(ed in this search are unchanged. This means that we are repeating w)
-.15 F(ork)-.1 E(unnecessarily)108 206.2 Q(.)-.65 E .667
(This is a typical situation which arises in the construction of ef)133
222.4 R .668(\214cient algorithms. What we)-.25 F 1.828(need is some w)
108 234.4 R 1.827(ay of "remembering" the results of the pre)-.1 F 1.827
(vious computation \(in this case the)-.25 F .468
(search\). After an element is remo)108 246.4 R -.15(ve)-.15 G .469
(d, we just need to modify the remembered result to re\215ect the).15 F
(change which has occurred.)108 258.4 Q .622(In this particular e)133
274.6 R .622(xample, the k)-.15 F .922 -.15(ey i)-.1 H 3.122(st).15 G
3.122(ob)-3.122 G .622(uild an auxiliary map which sho)-3.322 F .621
(ws the number of)-.25 F 1.02
(prerequisites of each topic, counting only topics which ha)108 286.6 R
1.32 -.15(ve n)-.2 H 1.02(ot yet been output. At each stage,).15 F .829
(looking for a topic with no prerequisites means \214nding a topic whos\
e number of prerequisites is)108 298.6 R .093(zero, as determined by re\
ference to the auxiliary map. When this element is remo)108 310.6 R -.15
(ve)-.15 G .093(d, the auxiliary).15 F .534(map is adjusted to re\215ec\
t the change, which can be done without recalculating the entire map. T)
108 322.6 R(o)-.8 E(implement this idea, we must \214rst b)108 334.6 Q
(uild the auxiliary map:)-.2 E(numpre :)144 358.6 Q/F2 10/Symbol SF(=)A
F1({[a,0] : a)2.5 E F0(in)2.5 E F1(topics};)2.5 E(\()144 370.6 Q F0 -.25
(fo)C(r).25 E F1([a,b])2.5 E F0(in)2.5 E F1(follo)2.5 E
(ws\) numpre\(b\) +:)-.25 E F2(=)A F1(1;)2.5 E F0(end)2.5 E F1(;)A -.15
(Fo)108 394.6 S 2.5(rt).15 G(he e)-2.5 E
(xample at hand, the numpre map w)-.15 E(ould contain:)-.1 E 15({[)
240.24 422.8 S('grape)-15 E 20.53(vines' ,)-.25 F(0],)2.5 E(['harv)
260.04 434.8 Q 34.87(est' ,)-.15 F(2],)2.5 E 39.71(['hiring' ,)260.04
446.8 R(0],)2.5 E 12.5(['fermentation' ,)260.04 458.8 R(2],)2.5 E 43.05
(['yeast' ,)260.04 470.8 R(1],)2.5 E 34.16(['alcohol' ,)260.04 482.8 R
(0],)2.5 E 36.93(['bottles' ,)260.04 494.8 R(0],)2.5 E 32.48
(['bottling' ,)260.04 506.8 R(3],)2.5 E(['mark)260.04 518.8 Q 25.65
(eting' ,)-.1 F 12.5(2] })2.5 F(No)108 547 Q 2.5(wt)-.25 G
(he main loop of the algorithm appears as follo)-2.5 E(ws:)-.25 E F0
(loop while exists)158 571 Q F1(ne)2.5 E(xt)-.15 E F0(in)2.5 E F1
(topics)2.5 E 2.5(|n)258 583 S(umpre\(ne)-2.5 E(xt\))-.15 E F2(=)2.5 E
F1(0)2.5 E F0(do)158 595 Q F1(topics)178 607 Q F0(less)2.5 E F1(:)A F2
(=)A F1(ne)2.5 E(xt;)-.15 E(print\(ne)178 619 Q(xt\);)-.15 E(\()178 631
Q F0 -.25(fo)C(r).25 E F1(a)2.5 E F0(in)2.5 E F1(follo)2.5 E(ws{ne)-.25
E(xt}\))-.15 E(numpre\(a\) -:)198 643 Q F2(=)A F1(1;)2.5 E F0(end;)178
655 Q(end loop)158 667 Q F1(;)A EP
%%Page: 39 40
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 2)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 39).1 E/F1 10/Times-Roman@0
SF .997(The test for c)108 130 R .997(ycles is unchanged. F)-.15 F .997
(or the current e)-.15 F .997(xample, a possible choice for ne)-.15 F
.997(xt in the \214rst)-.15 F .747(loop is 'hiring', since numpre\('hir\
ing'\) is zero. In the adjustment loop follo)108 142 R .747
(wing this choice, fol-)-.25 F(lo)108 154 Q(ws{'hiring'} is the set of \
topics which had 'hiring' as a prerequisite, i.e. the set:)-.25 E
({'harv)144 178 Q(est' , 'bottling' , 'mark)-.15 E(eting'})-.1 E .347
(Since 'hiring' is to be remo)108 202 R -.15(ve)-.15 G 2.847(df).15 G
.347(rom topics, the number of predecessors of each of these elements)
-2.847 F(should be reduced by one to gi)108 214 Q -.15(ve)-.25 G(:).15 E
(numpre\('harv)144 238 Q(est'\))-.15 E/F2 10/Symbol SF(=)2.5 E F1(1)2.5
E(numpre\('bottling'\))144 250 Q F2(=)2.5 E F1(2)2.5 E(numpre\('mark)144
262 Q(eting'\))-.1 E F2(=)2.5 E F1(1)2.5 E 1.524
(The remainder of the numpre map is unchanged. On the ne)108 286 R 1.524
(xt loop, we might get 'grape)-.15 F(vines')-.25 E .528
(since numpre\('grape)108 298 R .528(vines'\) is zero. No)-.25 F 3.028
(wf)-.25 G(ollo)-3.028 E(ws{'grape)-.25 E .528
(vines'} is the singleton set {'harv)-.25 F .529(est'} so)-.15 F(we mak)
108 310 Q 2.5(eo)-.1 G(ne change to the numpre map:)-2.5 E
(numpre\('harv)144 334 Q(est'\))-.15 E F2(=)2.5 E F1(0)2.5 E
(making 'harv)108 358 Q
(est' an eligible possibility for selection on the third loop.)-.15 E
.032(This is a more ef)133 374.2 R .032
(\214cient procedure than our pre)-.25 F .032(vious attempt. Ho)-.25 F
(we)-.25 E -.15(ve)-.25 G .832 -.4(r, w).15 H 2.532(es).4 G .032
(till ha)-2.532 F .332 -.15(ve a s)-.2 H(ource).15 E .306(of inef)108
386.2 R(\214cienc)-.25 E 1.606 -.65(y, s)-.15 H .307(ince numpre is sea\
rched at each step to \214nd zero entries. Applying the same prin-).65 F
.29(ciple of a)108 398.2 R -.2(vo)-.2 G .29
(iding doing the same thing twice, we can mak).2 F 2.789(eo)-.1 G .289
(ne \214nal impro)-2.789 F -.15(ve)-.15 G .289(ment in the program.).15
F 1.957 -.8(To a)108 410.2 T -.2(vo).6 G .358(id the search of numpre, \
we maintain an auxiliary set, called nopre, which is the set of top-).2
F .137(ics whose numpre v)108 422.2 R .137(alue is zero. At each stage \
we need merely pick an element from nopre. As the)-.25 F 1.176
(numpre map is adjusted when the element is remo)108 434.2 R -.15(ve)
-.15 G 1.176(d, we check for an).15 F 3.676(ye)-.15 G 1.176
(ntries whose numpre)-3.676 F -.25(va)108 446.2 S .626
(lue becomes zero, and add them to nopre. This a).25 F -.2(vo)-.2 G .625
(ids all searching. The \214rst step in follo).2 F(wing)-.25 E(this app\
roach is to initialize the nopre set right after the initialization of \
numpre:)108 458.2 Q(nopre :)144 482.2 Q F2(=)A F1({a)2.5 E F0(in)2.5 E
F1(topics | numpre\(a\))2.5 E F2(=)2.5 E F1(0};)2.5 E -.15(Fo)108 506.2
S 2.5(rt).15 G(he e)-2.5 E(xample we are using, nopre w)-.15 E(ould ha)
-.1 E .3 -.15(ve t)-.2 H(he initial v).15 E(alue:)-.25 E
({'alcohol', 'hiring', 'grape)144 530.2 Q(vines', 'bottles'})-.25 E
1.129(Remember that the order of elements in a set is not de\214ned, so\
 that when an element is pick)108 554.2 R(ed)-.1 E .326
(from nopre, there is a four w)108 566.2 R .326(ay uncertainty)-.1 F
2.826(.T)-.65 G .326(his aspect of the SETL program models the f)-2.826
F .325(act that)-.1 F 1.384(there is more than one acceptable solution \
to the problem. The main loop of the program no)108 578.2 R(w)-.25 E
(becomes:)108 590.2 Q F0(loop while)158 614.2 Q F1(nopre /)2.5 E F2(=)A
F1 1.666({})2.5 G F0(do).834 E F1(ne)178 626.2 Q(xt)-.15 E F0(fr)2.5 E
(om)-.18 E F1(nopre;)2.5 E(topics)178 638.2 Q F0(less)2.5 E F1(:)A F2(=)
A F1(ne)2.5 E(xt;)-.15 E F0(print)178 650.2 Q F1(\(ne)A(xt\);)-.15 E(\()
178 662.2 Q F0 -.25(fo)C(r).25 E F1(a)2.5 E F0(in)2.5 E F1(follo)2.5 E
(ws{ne)-.25 E(xt}\))-.15 E(numpre\(a\) -:)198 674.2 Q F2(=)A F1(1;)2.5 E
EP
%%Page: 40 41
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 2)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 40).1 E(if)198 130 Q/F1 10
/Times-Roman@0 SF(numpre\(a\))2.5 E/F2 10/Symbol SF(=)A F1(0)A F0(then)
2.5 E F1(nopre)2.5 E F0(with)2.5 E F1(:)A F2(=)A F1(a;)2.5 E F0(end;)2.5
E(end;)178 142 Q(end loop)158 154 Q F1(;)A 2.157(If 'hiring' is pick)108
178 R 2.157
(ed in the \214rst loop, then numpre is adjusted as described abo)-.1 F
2.456 -.15(ve a)-.15 H 2.156(nd nopre).15 F(becomes:)108 190 Q
({'alcohol' , 'grape)144 214 Q(vines' , 'bottles'})-.25 E .349
(In the second loop, suppose that 'grape)108 238 R .349
(vines' is selected.)-.25 F .349(As numpre\('harv)5.349 F .35
(est'\) is decremented, it)-.15 F(becomes zero, so 'harv)108 250 Q
(est' is added to nopre, gi)-.15 E(ving the ne)-.25 E 2.5(wn)-.25 G
(opre v)-2.5 E(alue:)-.25 E({'harv)144 274 Q
(est' , 'alcohol' , 'bottles'})-.15 E 2.491 -.8(We n)108 298 T 1.391
-.25(ow g).8 H -2.15 -.25(iv e).25 H .891
(the complete program with comments added. This \214nal v)3.641 F .89
(ersion contains tw)-.15 F 3.39(oa)-.1 G(ddi-)-3.39 E .498(tional re\
\214nements. The input data is printed out, which is a good general pro\
cedure to follo)108 310 R 2.999(wa)-.25 G(nd)-2.999 E(mak)108 322 Q .051
(es the program easier to use. The second change is a change in the tes\
t for c)-.1 F .05(ycles which a)-.15 F -.2(vo)-.2 G(ids).2 E
(the need to remo)108 334 Q .3 -.15(ve e)-.15 H
(lements from topics in the loop.).15 E F0(pr)158 358 Q(ogram)-.18 E F1
(course;)2.5 E 2.5($f)158 382 S(ollo)-2.5 E(ws is map sho)-.25 E
(wing prerequisites)-.25 E 2.5($t)158 394 S(opics is set of all topics)
-2.5 E(follo)158 418 Q(ws :)-.25 E F2(=)A F1(topics :)2.5 E F2(=)A F1
1.666({})2.5 G(;)-1.666 E 2.5($l)158 442 S(oop to read in data, b)-2.5 E
(uilding follo)-.2 E(ws, topics)-.25 E F0(loop do)158 466 Q -.18(re)178
478 S(ad).18 E F1(\(a,b\);)A F0(if eof then quit; end;)178 490 Q F1
(follo)178 502 Q(ws)-.25 E F0(with)2.5 E F1(:)A F2(=)A F1([a,b];)2.5 E
(topics)178 514 Q F0(with)2.5 E F1(:)A F2(=)A F1(a;)2.5 E(topics)178 526
Q F0(with)2.5 E F1(:)A F2(=)A F1(b;)2.5 E F0(print)178 538 Q F1(\(a,)A 5
('')-.7 G(,b\);)-5 E F0(end loop)158 550 Q F1(;)A 2.5($b)158 574 S
(uild auxiliary information structures)-2.7 E 2.5($n)158 586 S
(umpre\(x\))-2.5 E F2(=)2.5 E F1(count of remaining prerequisites of x)
2.5 E 2.5($n)158 598 S(opre is set of topics with numpre\(x\))-2.5 E F2
(=)2.5 E F1(0)2.5 E F0(print)158 622 Q F1 1.666(\(\))C(;)-1.666 E
(numpre :)158 634 Q F2(=)A F1({[a,0] : a)2.5 E F0(in)2.5 E F1(topics};)
2.5 E(\()158 646 Q F0 -.25(fo)C(r).25 E F1([a,b])2.5 E F0(in)2.5 E F1
(follo)2.5 E(ws\) numpre\(b\)+:)-.25 E F2(=)A F1(1;)A F0(end)2.5 E F1(;)
A(nopre :)158 658 Q F2(=)A F1({a)2.5 E F0(in)2.5 E F1
(topics | numpre\(a\))2.5 E F2(=)A F1(0};)A EP
%%Page: 41 42
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 2)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 41).1 E/F1 10/Times-Roman@0
SF 2.5($l)158 130 S(oop to print elements in appropriate order)-2.5 E
2.5($a)158 142 S(djusting numpre and nopre for element pick)-2.5 E(ed)
-.1 E F0(loop while)158 166 Q F1(nopre /)2.5 E/F2 10/Symbol SF(=)A F1
1.666({})2.5 G F0(do).834 E F1(ne)178 178 Q(xt)-.15 E F0(fr)2.5 E(om)
-.18 E F1(nopre;)2.5 E F0(print)178 190 Q F1(\(ne)A(xt\);)-.15 E(\()178
202 Q F0 -.25(fo)C(r).25 E F1(a)2.5 E F0(in)2.5 E F1(follo)2.5 E(ws{ne)
-.25 E(xt}\))-.15 E(numpre\(a\) -:)198 214 Q F2(=)A F1(1;)2.5 E F0(if)
198 226 Q F1(numpre\(a\))2.5 E F2(=)A F1(0)A F0(then)2.5 E F1(nopre)2.5
E F0(with)2.5 E F1(:)A F2(=)A F1(a;)2.5 E F0(end;)2.5 E(end f)178 238 Q
(or;)-.25 E(end loop)158 250 Q F1(;)A 2.5($t)158 274 S(est for c)-2.5 E
(ycles, indicated by a remaining)-.15 E 2.5($t)158 286 S
(opic with numpre non-zero)-2.5 E F0(if exists)158 310 Q F1(a)2.5 E F0
(in)2.5 E F1(topics | numpre\(a\) > 0)2.5 E F0(then)2.5 E(print)178 322
Q F1(\('No ordering is possible'\);)A F0(end;)158 334 Q(end pr)158 358 Q
(ogram)-.18 E F1(course;)2.5 E 1.571
(This problem is actually a speci\214c e)133 386.2 R 1.572
(xample of a general problem kno)-.15 F 1.572(wn as "topological)-.25 F
.755(sorting", in which a linear order must be generated from a partial\
 order)108 398.2 R 3.255(.Ap)-.55 G .755(artial order is essen-)-3.255 F
.122(tially a directed graph. In f)108 410.2 R .122(act a multi-v)-.1 F
.123(alued map, such as we ha)-.25 F .423 -.15(ve u)-.2 H .123
(sed in this program, is often a).15 F(con)108 422.2 Q -.15(ve)-.4 G
1.154(nient representation for a directed graph.).15 F -.15(Fo)6.153 G
3.653(rt).15 G 1.153(he data used in the e)-3.653 F 1.153
(xample, the map "fol-)-.15 F(lo)108 434.2 Q
(ws" may be thought of as representing the follo)-.25 E(wing graph:)-.25
E EP
%%Page: 42 43
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 2)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 42).1 E .4 LW 113 130 108
130 DL 114 130 109 130 DL 119 130 114 130 DL 124 130 119 130 DL 129 130
124 130 DL 134 130 129 130 DL 139 130 134 130 DL 144 130 139 130 DL 149
130 144 130 DL 154 130 149 130 DL 159 130 154 130 DL 164 130 159 130 DL
169 130 164 130 DL 174 130 169 130 DL 179 130 174 130 DL 184 130 179 130
DL 189 130 184 130 DL 194 130 189 130 DL 199 130 194 130 DL 204 130 199
130 DL 209 130 204 130 DL 214 130 209 130 DL 219 130 214 130 DL 224 130
219 130 DL 229 130 224 130 DL 234 130 229 130 DL 239 130 234 130 DL 244
130 239 130 DL 249 130 244 130 DL 254 130 249 130 DL 259 130 254 130 DL
264 130 259 130 DL 269 130 264 130 DL 274 130 269 130 DL 279 130 274 130
DL 284 130 279 130 DL 289 130 284 130 DL 294 130 289 130 DL 299 130 294
130 DL 304 130 299 130 DL 309 130 304 130 DL 314 130 309 130 DL 319 130
314 130 DL 324 130 319 130 DL 329 130 324 130 DL 334 130 329 130 DL 339
130 334 130 DL 344 130 339 130 DL 349 130 344 130 DL 354 130 349 130 DL
359 130 354 130 DL 364 130 359 130 DL 369 130 364 130 DL 374 130 369 130
DL 379 130 374 130 DL 384 130 379 130 DL 389 130 384 130 DL 394 130 389
130 DL 399 130 394 130 DL 404 130 399 130 DL 409 130 404 130 DL 414 130
409 130 DL 419 130 414 130 DL 424 130 419 130 DL 429 130 424 130 DL 434
130 429 130 DL 439 130 434 130 DL 444 130 439 130 DL 449 130 444 130 DL
454 130 449 130 DL 459 130 454 130 DL 464 130 459 130 DL 469 130 464 130
DL 474 130 469 130 DL 479 130 474 130 DL 484 130 479 130 DL 489 130 484
130 DL 494 130 489 130 DL 499 130 494 130 DL 504 130 499 130 DL 342
174.04 MT 0 -18 RL -72 0 RL 0 18 RL CL .36 LW ST/F1 9/Times-Roman@0 SF
(grape)286.619 167.02 Q(vines)-.225 E 342 217.24 MT 0 -18 RL -72 0 RL 0
18 RL CL ST(harv)293.072 210.22 Q(est)-.135 E 486 208.24 342 208.24 DL
486 352.24 486 208.24 DL 414 352.24 486 352.24 DL 414 352.24 MT 7.2 -1.8
RL 0 3.6 RL CL BL 414 352.24 MT 7.2 -1.8 RL 0 3.6 RL CL ST 414 361.24 MT
0 -18 RL -90 0 RL 0 18 RL CL ST(fermentation)346.005 354.22 Q 369 397.24
369 361.24 DL 297 397.24 369 397.24 DL 297 397.24 MT 7.2 -1.8 RL 0 3.6
RL CL BL 297 397.24 MT 7.2 -1.8 RL 0 3.6 RL CL ST 297 406.24 MT 0 -18 RL
-72 0 RL 0 18 RL CL ST(bottling)246.996 399.22 Q 297 449.44 MT 0 -18 RL
-72 0 RL 0 18 RL CL ST(mark)242.798 442.42 Q(eting)-.09 E 261 424.24 261
406.24 DL 261 424.24 MT -1.8 -7.2 RL 3.6 0 RL CL BL 261 424.24 MT -1.8
-7.2 RL 3.6 0 RL CL ST 297 363.04 MT 0 -18 RL -72 0 RL 0 18 RL CL ST
(bottles)248.999 356.02 Q 261 381.04 261 363.04 DL 261 381.04 MT -1.8
-7.2 RL 3.6 0 RL CL BL 261 381.04 MT -1.8 -7.2 RL 3.6 0 RL CL ST 297
319.84 MT 0 -18 RL -72 0 RL 0 18 RL CL ST(alcohol)247.752 312.82 Q 369
310.84 297 310.84 DL 369 310.84 MT -7.2 1.8 RL 0 -3.6 RL CL BL 369
310.84 MT -7.2 1.8 RL 0 -3.6 RL CL ST 441 319.84 MT 0 -18 RL -72 0 RL 0
18 RL CL ST(yeast)395.753 312.82 Q 405 337.84 405 319.84 DL 405 337.84
MT -1.8 -7.2 RL 3.6 0 RL CL BL 405 337.84 MT -1.8 -7.2 RL 3.6 0 RL CL ST
270 208.24 198 208.24 DL 270 208.24 MT -7.2 1.8 RL 0 -3.6 RL CL BL 270
208.24 MT -7.2 1.8 RL 0 -3.6 RL CL ST 198 217.24 MT 0 -18 RL -72 0 RL 0
18 RL CL ST(hiring)151.25 210.22 Q 144 441.88 144 217.24 DL 216 441.88
144 441.88 DL 216 441.88 MT -7.2 1.8 RL 0 -3.6 RL CL BL 216 441.88 MT
-7.2 1.8 RL 0 -3.6 RL CL ST 162 397.24 162 217.24 DL 216 397.24 162
397.24 DL 216 397.24 MT -7.2 1.8 RL 0 -3.6 RL CL BL 216 397.24 MT -7.2
1.8 RL 0 -3.6 RL CL ST .4 LW 113 467.92 108 467.92 DL 114 467.92 109
467.92 DL 119 467.92 114 467.92 DL 124 467.92 119 467.92 DL 129 467.92
124 467.92 DL 134 467.92 129 467.92 DL 139 467.92 134 467.92 DL 144
467.92 139 467.92 DL 149 467.92 144 467.92 DL 154 467.92 149 467.92 DL
159 467.92 154 467.92 DL 164 467.92 159 467.92 DL 169 467.92 164 467.92
DL 174 467.92 169 467.92 DL 179 467.92 174 467.92 DL 184 467.92 179
467.92 DL 189 467.92 184 467.92 DL 194 467.92 189 467.92 DL 199 467.92
194 467.92 DL 204 467.92 199 467.92 DL 209 467.92 204 467.92 DL 214
467.92 209 467.92 DL 219 467.92 214 467.92 DL 224 467.92 219 467.92 DL
229 467.92 224 467.92 DL 234 467.92 229 467.92 DL 239 467.92 234 467.92
DL 244 467.92 239 467.92 DL 249 467.92 244 467.92 DL 254 467.92 249
467.92 DL 259 467.92 254 467.92 DL 264 467.92 259 467.92 DL 269 467.92
264 467.92 DL 274 467.92 269 467.92 DL 279 467.92 274 467.92 DL 284
467.92 279 467.92 DL 289 467.92 284 467.92 DL 294 467.92 289 467.92 DL
299 467.92 294 467.92 DL 304 467.92 299 467.92 DL 309 467.92 304 467.92
DL 314 467.92 309 467.92 DL 319 467.92 314 467.92 DL 324 467.92 319
467.92 DL 329 467.92 324 467.92 DL 334 467.92 329 467.92 DL 339 467.92
334 467.92 DL 344 467.92 339 467.92 DL 349 467.92 344 467.92 DL 354
467.92 349 467.92 DL 359 467.92 354 467.92 DL 364 467.92 359 467.92 DL
369 467.92 364 467.92 DL 374 467.92 369 467.92 DL 379 467.92 374 467.92
DL 384 467.92 379 467.92 DL 389 467.92 384 467.92 DL 394 467.92 389
467.92 DL 399 467.92 394 467.92 DL 404 467.92 399 467.92 DL 409 467.92
404 467.92 DL 414 467.92 409 467.92 DL 419 467.92 414 467.92 DL 424
467.92 419 467.92 DL 429 467.92 424 467.92 DL 434 467.92 429 467.92 DL
439 467.92 434 467.92 DL 444 467.92 439 467.92 DL 449 467.92 444 467.92
DL 454 467.92 449 467.92 DL 459 467.92 454 467.92 DL 464 467.92 459
467.92 DL 469 467.92 464 467.92 DL 474 467.92 469 467.92 DL 479 467.92
474 467.92 DL 484 467.92 479 467.92 DL 489 467.92 484 467.92 DL 494
467.92 489 467.92 DL 499 467.92 494 467.92 DL 504 467.92 499 467.92 DL
EP
%%Page: 43 44
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(CHAPTER 3)270.666 132.4 R(CHARA)212.382 175.6 Q
(CTER SET & D)-.66 E -1.8 -1.14(AT AT)-.42 H(YPES)1.14 E/F1 10
/Times-Roman@0 SF 1.361(This chapter describes the most elemental aspec\
ts of the SETL language: ho)133 307 R 3.861(wc)-.25 G(haracters)-3.861 E
.163(can grouped together to form those symbols which are the main cons\
ituent components of a SETL)108 319 R(program.)108 331 Q/F2 10
/Times-Bold@0 SF 2.5(3.1. Character)108 355 R(Set)2.5 E F1 1.248(SETL p\
rograms are written using characters from the standard SETL character s\
et which)133 371.2 R(contains the follo)108 383.2 Q(wing characters:)
-.25 E 12.5(A-Z upper)252.685 411.4 R(case letters)2.5 E 15.83
(0-9 numeric)252.685 423.4 R(digits)2.5 E 26.02(<l)252.685 435.4 S
(ess than)-26.02 E 26.02(>g)252.685 447.4 S(reater than)-26.02 E 28.33
(\(l)252.685 459.4 S(eft parenthesis)-28.33 E 28.33(\)r)252.685 471.4 S
(ight parenthesis)-28.33 E 28.33<b471>252.685 483.4 S(uote)-28.33 E
29.16(.p)252.685 495.4 S(eriod)-29.16 E 29.16(,c)252.685 507.4 S(omma)
-29.16 E 28.88(:c)252.685 519.4 S(olon)-28.88 E 28.88(;s)252.685 531.4 S
(emicolon)-28.88 E 28.88(/s)252.685 543.4 S(lash)-28.88 E 26.02(+p)
252.685 555.4 S(lus)-26.02 E/F3 10/Symbol SF(-)252.685 567.4 Q F1(minus)
26.17 E 26.66($d)252.685 579.4 S(ollar sign)-26.66 E 27.22(?i)252.685
591.4 S(nterrog)-27.22 E(ation)-.05 E 26.66(#n)252.685 603.4 S
(umber sign)-26.66 E .4 LW 257.685 615.4 252.685 615.4 DL(underline)
284.345 615.4 Q 26.86({l)252.685 627.4 S(eft set brack)-26.86 E(et)-.1 E
26.86(}r)252.685 639.4 S(ight set brack)-26.86 E(et)-.1 E F2(Chapter 3)
108 756 Q(The SETL Pr)79.06 E(ogramming Language)-.18 E -.1(Pa)89.16 G
(ge 43).1 E EP
%%Page: 44 45
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 3)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 44).1 E/F1 10/Times-Roman@0
SF 28.33([l)252.685 130 S(eft tuple brack)-28.33 E(et)-.1 E 28.33(]r)
252.685 142 S(ight tuple brack)-28.33 E(et)-.1 E 29.66(|s)252.685 154 S
(uch that character)-29.66 E .555(When using SETL on a particular machi\
ne, it may be the case that certain of these characters are)108 186.4 R
.447(not a)108 198.4 R -.25(va)-.2 G 2.947(ilable. F).25 F .447
(or the last \214v)-.15 F 2.947(ec)-.15 G .447
(haracters in the list, standard substitutes are a)-2.947 F -.25(va)-.2
G .448(ilable \(since these).25 F(are the characters which are most lik)
108 210.4 Q(ely to be missing\):)-.1 E EP
%%Page: 45 46
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 3)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 45).1 E/F1 10/Times-Roman@0
SF 7.5({c)242.969 130 S(an be written as)-7.5 E(<<)5 E 7.5(}c)242.969
142 S(an be written as)-7.5 E(>>)5 E 7.5([c)242.969 154 S
(an be written as)-7.5 E(\(/)5 E 7.5(]c)242.969 166 S(an be written as)
-7.5 E(/\))5 E 7.5(|c)242.969 178 S(an be written as)-7.5 E(ST)5 E .937
(The remaining characters are al)108 206.2 R -.1(wa)-.1 G .937(ys a).1 F
-.25(va)-.2 G .937(ilable \(at w).25 F .937
(orst the graphic used will v)-.1 F .936(ary from the one)-.25 F .882
(printed in the abo)108 218.2 R 1.182 -.15(ve l)-.15 H 3.382
(ist\). This).15 F .883
(means that the process of translating a SETL program written in)3.382 F
1.425(the standard character set into the required character set for ac\
tually running the program is at)108 230.2 R
(most a one to one substitution.)108 242.2 Q .184
(Certain implementations may augment this character set. In particular)
133 258.4 R 2.685(,i)-.4 G 2.685(ft)-2.685 G .385 -.1(wo c)-2.685 H .185
(ases of letters).1 F 1.23(are a)108 270.4 R -.25(va)-.2 G 1.23
(ilable, then lo).25 F 1.23
(wer case letters are permitted. SETL treats upper and lo)-.25 F 1.23
(wer case letters as)-.25 F(indistinguishable \(e)108 282.4 Q
(xcept in string constants as further described belo)-.15 E(w\).)-.25 E
1.366(In addition to this standard character set, there is also de\214n\
ed a publication character set)133 298.6 R .155(which is fully describe\
d in appendix nn. The publication set contains v)108 310.6 R .155
(arious "mathematical" sym-)-.25 F .697(bols and is chosen without re)
108 322.6 R -.05(ga)-.15 G .698(rd to a).05 F -.25(va)-.2 G .698
(ilability of characters on actual computers. Ne).25 F -.15(ve)-.25 G
(rtheless,).15 E .266(on man)108 334.6 R 2.766(yc)-.15 G .266(omputers \
it will be possible to implement some of these characters, or at least \
to supply)-2.766 F 1.717(acceptable substitutes for them. A particular \
implementation will describe which if an)108 346.6 R 4.217(yo)-.15 G
4.217(ft)-4.217 G(he)-4.217 E .276
(characters in the publication set it implements.)108 358.6 R 2.776(Ap)
5.276 G .276(rogram may use such characters as are de\214ned)-2.776 F
.398(to be implemented, b)108 370.6 R .398(ut if the program is mo)-.2 F
-.15(ve)-.15 G 2.898(dt).15 G 2.898(oa)-2.898 G .398
(nother implementation which does not imple-)-2.898 F 1.087(ment the sa\
me subset of publication characters, then a translation problem may be \
encountered.)108 382.6 R .808(Therefore the general rule is to use only\
 the standard character set if there is an)108 394.6 R 3.308(yp)-.15 G
.808(ossibility that)-3.308 F(the program will be mo)108 406.6 Q -.15
(ve)-.15 G 2.5(dt).15 G 2.5(oa)-2.5 G(nother implementation.)-2.5 E .093
(The abo)133 422.8 R .393 -.15(ve d)-.15 H .093
(iscussion of character sets applies in all conte).15 F .093(xts e)-.15
F .092(xcept for input data and string)-.15 F .317(constants appearing \
in the program. In both these cases, the full character set a)108 434.8
R -.25(va)-.2 G .318(ilable on the par).25 F(-)-.2 E 1.904
(ticular computer in use are used. Since such character sets v)108 446.8
R 1.904(ary widely from one machine to)-.25 F(another)108 458.8 Q 2.939
(,S)-.4 G .439(ETL mak)-2.939 F .439
(es no attempt to de\214ne the set of a)-.1 F -.25(va)-.2 G .44
(ilable characters for these uses. Note also).25 F .457
(that upper and lo)108 470.8 R .457
(wer case letters are distinct in these conte)-.25 F .457
(xts. Programs which are intended to be)-.15 F(mo)108 482.8 Q -.15(ve)
-.15 G 4.234(df).15 G 1.734
(rom one implementation to another can minimize con)-4.234 F -.15(ve)-.4
G 1.735(rsion dif).15 F 1.735(\214culties by restricting)-.25 F
(data and string constants to the standard character set.)108 494.8 Q F0
2.5(3.2. Syntactical)108 518.8 R -.92(To)2.5 G -.1(ke).92 G(ns).1 E F1
2.5(Ap)133 535 S(rogram is a stream of syntactical tok)-2.5 E
(ens which are in one of the follo)-.1 E(wing cate)-.25 E(gories:)-.15 E
/F2 10/Times-Italic@0 SF(Identi\214er)108 551.2 Q F1 2.673(As)133 563.2
S .172(tring of letters, digits and a special character called the brea\
k character \(in this book, and)-2.673 F .464
(in most implementations, the break character is an underline\).)133
575.2 R .465(An identi\214er must start with)5.465 F 2.53(al)133 587.2 S
.03(etter and contain no blanks. It can be an)-2.53 F 2.529(yl)-.15 G
.029(ength, b)-2.529 F .029(ut must not be split across a line bound-)
-.2 F(ary)133 599.2 Q 5(.U)-.65 G(pper and lo)-5 E
(wer case letters can be used interchang)-.25 E(ably and are equi)-.05 E
-.25(va)-.25 G(lent.).25 E EP
%%Page: 46 47
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 3)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 46).1 E/F1 10/Times-Roman@0
SF 15(Examples: thisisalongidenti\214er)235.03 130 R .4 LW 314.2 142
309.2 142 DL 325.87 142 320.87 142 DL 335.31 142 330.31 142 DL 365.86
142 360.86 142 DL 2.5(this is a longer identi\214er)294.75 142 R(i)
294.75 154 Q(j107x)294.75 166 Q .561
(None of these identi\214er names can be the same as an)133 194.2 R
3.062(yr)-.15 G(eserv)-3.062 E .562(ed k)-.15 F -.15(ey)-.1 G -.1(wo).15
G .562(rd or operator name.).1 F
(Appendix nn contains a complete list of such reserv)133 206.2 Q
(ed names.)-.15 E/F2 10/Times-Italic@0 SF -2.1 -.35(Ke y)108 222.4 T
(wor).35 E(d)-.37 E F1 3.548(Ak)133 234.4 S -.15(ey)-3.648 G -.1(wo).15
G 1.047(rd is a string of letters which is used for a special purpose s\
uch as introducing a).1 F .278(control structure. All k)133 246.4 R -.15
(ey)-.1 G -.1(wo).15 G .278(rd names are reserv).1 F .279(ed w)-.15 F
.279(ords and may not be used as identi\214ers.)-.1 F
(Appendix nn contains a complete list of standard k)133 258.4 Q -.15(ey)
-.1 G -.1(wo).15 G(rds in SETL.).1 E F2(Punctuation)108 274.6 Q F1(Cert\
ain special characters and sequences of special characters appear as se\
parators:)133 286.6 Q 23.5(;s)250.285 314.8 S(emicolon)-23.5 E 22.95
(\(l)250.285 326.8 S(eft parenthesis)-22.95 E 22.95(\)r)250.285 338.8 S
(ight parenthesis)-22.95 E 22.95([l)250.285 350.8 S(eft tuple brack)
-22.95 E(et)-.1 E 22.95(]r)250.285 362.8 S(ight tuple brack)-22.95 E(et)
-.1 E 17.67(\(/ alternate)250.285 374.8 R(left tuple brack)2.5 E(et)-.1
E 17.67(/\) alternate)250.285 386.8 R(right tuple brack)2.5 E(et)-.1 E
21.48({l)250.285 398.8 S(eft set brack)-21.48 E(et)-.1 E 21.48(}r)
250.285 410.8 S(ight set brack)-21.48 E(et)-.1 E 12.5(<< alternate)
250.285 422.8 R(left set brack)2.5 E(et)-.1 E 12.5(>> alternate)250.285
434.8 R(right set brack)2.5 E(et)-.1 E 23.5(:c)250.285 446.8 S(olon)
-23.5 E 24.28(|s)250.285 458.8 S(uch that)-24.28 E 23.78(,c)250.285
470.8 S(omma)-23.78 E 18.78(.. inte)250.285 482.8 R(ger range)-.15 E
16.28(... alternate)250.285 494.8 R(for inte)2.5 E(ger range)-.15 E F2
(Oper)108 527.2 Q(ator)-.15 E(s)-.1 E F1 1.048(Certain special characte\
rs and sequences of special characters are used for names of stan-)133
539.2 R(dard operators:)133 551.2 Q(:)231.12 579.4 Q/F3 10/Symbol SF(=)A
F1(assignment, assigning operator suf)17.86 E<8c78>-.25 E 20.49(+a)
231.12 591.4 S(ddition, set union, concatenation)-20.49 E F3(-)231.12
603.4 Q F1(subtraction, set dif)20.64 E(ference)-.25 E 21.13(*m)231.12
615.4 S(ultiplication, set intersection)-21.13 E 23.35(/d)231.12 627.4 S
-.25(iv)-23.35 G(ision, compound operator suf).25 E<8c78>-.25 E 13.63
(** e)231.12 639.4 R(xponentiation)-.15 E EP
%%Page: 47 48
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 3)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 47).1 E/F1 10/Times-Roman@0
SF 20.49(<l)231.12 130 S(ess than)-20.49 E 20.49(>g)231.12 142 S
(reater than)-20.49 E(<)231.12 154 Q/F2 10/Symbol SF(=)A F1
(less than or equals)15 E(>)231.12 166 Q F2(=)A F1
(greater than or equals)15 E F2(=)231.12 178 Q F1(equals)20.64 E(/)
231.12 190 Q F2(=)A F1(not equals)17.86 E 21.13(#c)231.12 202 S
(ardinality)-21.13 E 21.69(?i)231.12 214 S(nterrog)-21.69 E(ation)-.05 E
.02(Other standard operators ha)108 246.4 R .32 -.15(ve n)-.2 H .021
(ames which are similar in form to identi\214er names. All such names)
.15 F .772(are reserv)108 258.4 R .772
(ed and cannot be used as identi\214er names in a program.)-.15 F .772
(Appendix nn contains a com-)5.772 F(plete list of such reserv)108 270.4
Q(ed names.)-.15 E/F3 10/Times-Italic@0 SF(User De\214ned Oper)108 286.6
Q(ator)-.15 E(s)-.1 E F1 .911(User de\214ned operators ha)133 298.6 R
1.211 -.15(ve n)-.2 H .912(ames which start with a period.).15 F .912
(The names themselv)5.912 F .912(es may)-.15 F .206
(match other identi\214er names, or reserv)133 310.6 R .206(ed w)-.15 F
.206(ords, although such multiple usage is usually not)-.1 F
(desirable. A gi)133 322.6 Q -.15(ve)-.25 G 2.5(no).15 G
(perator name may be used for only one operator)-2.5 E(.)-.55 E F3
(Denotations)108 338.8 Q F1 .022(Constant v)133 350.8 R .022
(alues of basic datatypes are represented by tok)-.25 F .022
(ens called denotations \(e.g. 123 is a)-.1 F(tok)133 362.8 Q .975
(en representing an inte)-.1 F .974(ger v)-.15 F .974
(alue\). A subsequent section gi)-.25 F -.15(ve)-.25 G 3.474(st).15 G
.974(he rules for constructing)-3.474 F(denotation tok)133 374.8 Q(ens.)
-.1 E F3(Comments)108 391 Q F1 .142(Normally the SETL compiler processe\
s all columns of each input line. Ho)133 403 R(we)-.25 E -.15(ve)-.25 G
.943 -.4(r, t).15 H .143(he charac-).4 F .246
(ter $ \(dollar\) is treated as an end of line signal and an)133 415 R
2.746(yt)-.15 G -.15(ex)-2.746 G 2.746(tf).15 G(ollo)-2.746 E .245
(wing the $ is ignored \(apart)-.25 F 1.007(from being listed in the pr\
ogram listing generated by the compiler\). This means that arbi-)133 427
R .403(trary comment te)133 439 R .403(xt may be written on an)-.15 F
2.903(yl)-.15 G .402(ine follo)-2.903 F .402
(wing a $ sign. In particular)-.25 F 2.902(,l)-.4 G .402(ines which)
-2.902 F(ha)133 451 Q .717 -.15(ve a $ i)-.2 H 2.917(nc).15 G .418(olum\
n one are entirely ignored and thus function as comment lines. The SETL)
-2.917 F .836(compiler al)133 463 R -.1(wa)-.1 G .836
(ys ignores blank lines, so the).1 F 3.335(ym)-.15 G .835
(ay be used freely to space the program and)-3.335 F(comment te)133 475
Q(xt.)-.15 E F0 2.5(3.3. Datatypes)108 499 R F1(The follo)133 515.2 Q
(wing primiti)-.25 E .3 -.15(ve d)-.25 H(atatypes appear in SETL:).15 E
F0(integer)108 531.4 Q F1(Inte)133 543.4 Q .195(gers are signed inte)
-.15 F .195(ger v)-.15 F .195(alues. Unlik)-.25 F 2.695(em)-.1 G(an)
-2.695 E 2.696(yo)-.15 G .196(ther programming languages, SETL places)
-2.696 F .597(no limit on the magnitude of inte)133 555.4 R .597
(gers, although enormous inte)-.15 F .596(gers might e)-.15 F -.15(ve)
-.25 G .596(ntually e).15 F(xceed)-.15 E 1.417(the a)133 567.4 R -.25
(va)-.2 G 1.418(ilable storage. Of course the programmer should e).25 F
1.418(xpect that adding tw)-.15 F 3.918(oo)-.1 G 1.418(ne digit)-3.918 F
.913(numbers will be more ef)133 579.4 R .912(\214cient than adding tw)
-.25 F 3.412(ot)-.1 G .912(en thousand digit numbers. There is only)
-3.412 F(one zero in SETL and it is considered to be neither positi)133
591.4 Q .3 -.15(ve n)-.25 H(or ne).15 E -.05(ga)-.15 G(ti).05 E -.15(ve)
-.25 G(.).15 E F0 -.18(re)108 607.6 S(al).18 E F1 .4(Real number v)8.52
F .4(alues correspond to those a)-.25 F -.25(va)-.2 G .4
(ilable on the machine in use. T).25 F .4(ypically this will)-.8 F .014
(mean that implementation dependant limits and accurac)133 619.6 R 2.514
(yw)-.15 G .014(ill apply)-2.514 F 2.514(.S)-.65 G .014
(ETL has only one pre-)-2.514 F .165
(cision of real numbers, and will choose to use "double precision" v)133
631.6 R .165(alues on machines whose)-.25 F -.1(wo)133 643.6 S .264
(rd size is small \(e.g. 32 bits\).).1 F .264
(There is only one real zero v)5.264 F .263
(alue in SETL and it is consid-)-.25 F(ered to be neither positi)133
655.6 Q .3 -.15(ve n)-.25 H(or ne).15 E -.05(ga)-.15 G(ti).05 E -.15(ve)
-.25 G(.).15 E EP
%%Page: 48 49
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 3)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 48).1 E(string)108 130 Q/F1
10/Times-Roman@0 SF .294(These are arbitrary length strings of characte\
rs. As in other languages, SETL is v)133 142 R .294(ague about)-.25 F
.42(what set of characters will be permitted in STRING v)133 154 R .419
(alues. In practice, the allo)-.25 F .419(wed set will)-.25 F
(correspond to the characters a)133 166 Q -.25(va)-.2 G
(ilable on the particular machine in use.).25 E F0(boolean)108 182.2 Q
F1 .614(There are tw)133 194.2 R 3.114(ob)-.1 G .614(oolean v)-3.114 F
.614(alues, TR)-.25 F .614(UE and F)-.4 F .614(ALSE. These v)-.74 F .614
(alues are yielded as the result of)-.25 F
(test operators and are often used to control the \215o)133 206.2 Q 2.5
(wo)-.25 G 2.5(fe)-2.5 G -.15(xe)-2.65 G(cution.).15 E F0(atom)108 222.4
Q F1 .829(These are special unique v)3.34 F .828
(alues which are used in constructing data structuring maps. The)-.25 F
(use of atoms is described in the chapter on data structures.)133 234.4
Q F0 9.17(om Om)108 250.6 R F1(is used to represent an unde\214ned v)2.5
E(alue in the follo)-.25 E(wing circumstances:)-.25 E(Unde\214ned v)
184.13 278.8 Q(ariable)-.25 E(Unde\214ned element of a tuple)184.13
290.8 Q -1.11(Va)184.13 302.8 S(lue of map at unde\214ned point)1.11 E
(Element selected from the null set)184.13 314.8 Q
(Compound operator applied to null set or tuple)184.13 326.8 Q F0(Om)133
355 Q F1 .057(is not a v)2.557 F .057
(alue from a technical point of vie)-.25 F 2.557(wa)-.25 G .058
(nd does not ha)-2.557 F .358 -.15(ve a t)-.2 H .058(ype \(the).15 F F0
(type)2.558 E F1(operator)2.558 E .869(applied to)133 367 R F0(om)3.369
E F1 .869(causes an error\), ho)3.369 F(we)-.25 E -.15(ve)-.25 G 3.369
(ri).15 G 3.369(ti)-3.369 G 3.369(ss)-3.369 G .869(ometimes con)-3.369 F
-.15(ve)-.4 G .868(nient to re).15 F -.05(ga)-.15 G(rd).05 E F0(om)3.368
E F1 .868(as being)3.368 F(the "v)133 379 Q(alue" of an unde\214ned v)
-.25 E(ariable or element.)-.25 E F0 2.5(3.4. Denotations)108 403 R F1
-.15(Fo)133 419.2 S 3.158(re).15 G .658
(ach of the basic datatypes, denotation tok)-3.158 F .659
(ens can be constructed which represent con-)-.1 F(stant v)108 431.2 Q
(alues of particular datatypes.)-.25 E F0 2.5(3.4.1. Integer)108 455.2 R
(Denotations)2.5 E F1 .47(An inte)133 471.4 R .47
(ger denotation consists of a sequence of digits of an)-.15 F 2.97(yl)
-.15 G .47(ength and has as its v)-2.97 F .47(alue the)-.25 F .978
(corresponding decimal number)108 483.4 R 3.478(.N)-.55 G 3.478(ob)
-3.478 G .979
(lanks may appear within the constant and a single constant)-3.478 F
(must appear entirely on one input line.)108 495.4 Q .074
(There are no ne)133 511.6 R -.05(ga)-.15 G(ti).05 E .374 -.15(ve d)-.25
H .074(enotations as such, if).15 F/F2 10/Symbol SF(-)2.574 E F1 .074
(123 appears in a program, then it is composed)B(of tw)108 523.6 Q 2.5
(ot)-.1 G(ok)-2.5 E(ens: the)-.1 E F2(-)2.5 E F1
(sign is a unary operator)2.5 E 2.5(,a)-.4 G
(nd the 123 is an unsigned inte)-2.5 E(ger denotation.)-.15 E(Examples:)
133 539.8 Q(0)158 563.8 Q(13)158 575.8 Q 49.5(0013 $)158 587.8 R(same v)
2.5 E(alue as 13)-.25 E
(123497697623476124976734671249237612467676712497614)158 599.8 Q F0 2.5
(3.4.2. Real)108 635.8 R(Denotations)2.5 E F1 2.706(Ar)133 652 S .206
(eal denotation consist of an optional inte)-2.706 F .207
(ger part consisting of a string of digits, follo)-.15 F(wed)-.25 E .533
(by a period \(decimal point\), follo)108 664 R .532
(wed by a non-empty string of digits which is the fractional part,)-.25
F(follo)108 676 Q(wed by an optional e)-.25 E(xponent.)-.15 E EP
%%Page: 49 50
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 3)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 49).1 E/F1 10/Times-Roman@0
SF .396(An e)133 130 R .397
(xponent consists of the letter E \(upper or lo)-.15 F .397
(wer case if both are a)-.25 F -.25(va)-.2 G .397(ilable\), follo).25 F
.397(wed by)-.25 F(an optional sign \(+ or)108 142 Q/F2 10/Symbol SF(-)
2.5 E F1(\), follo)A(wed by a non-empty string of digits.)-.25 E 1.085(\
Blanks may not be used within the denotation, and a single denotation m\
ust be contained)133 158.2 R(entirely on one line of the program.)108
170.2 Q(Examples:)133 186.4 Q(3.141592653589793)128 214.6 Q(0.0)128
226.6 Q 82.5(.0 $)133 238.6 R -.2(bu)2.5 G 2.5(tn).2 G(ot 0.)-2.5 E
(.01e+10)133 250.6 Q(.01e-10)133 262.6 Q(1.0E0)128 274.6 Q 60.75
(1.0E+10 $)128 286.6 R -.2(bu)2.5 G 2.5(tn).2 G(ot 1.E10 or 1E10)-2.5 E
F0 2.5(3.4.3. String)108 326.8 R(Denotations)2.5 E(String)133 343 Q F1
1.6(denotations consist of a series of zero or more characters enclosed\
 in apostrophe)4.1 F .793
(characters \("single quotes"\). If blanks appear in this sequence, the)
108 355 R 3.293(ya)-.15 G .793(re signi\214cant, and represent)-3.293 F
(blank character v)108 367 Q(alues.)-.25 E(An)133 383.2 Q 4.999(yo)-.15
G 4.999(ft)-4.999 G 2.499(he characters a)-4.999 F -.25(va)-.2 G 2.499
(ilable on the machine in use may appear in a).25 F F0(string)5 E F1
-.25(va)5 G(lue,).25 E .235
(although programs which are intended to be run on a v)108 395.2 R .234
(ariety of dif)-.25 F .234(ferent computers should restrict)-.25 F 1.179
(their use to commonly a)108 407.2 R -.25(va)-.2 G 1.179(ilable charact\
ers \(e.g. those used within the SETL language itself\) to).25 F -.2
(avo)108 419.2 S(id translation problems.).2 E .241
(If the string quote mark itself appears within a)133 435.4 R F0(string)
2.741 E F1 -.25(va)2.741 G .24(lue, then it must be represented as a).25
F(sequence of tw)108 447.4 Q 2.5(os)-.1 G(uccessi)-2.5 E .3 -.15(ve s)
-.25 H(tring quotes with no interv).15 E(ening blank.)-.15 E .125
(If the sequence of characters crosses a line boundary)133 463.6 R 2.626
(,t)-.65 G .126(hen a string quote must signal the end)-2.626 F .632(of\
 the characters on the \214rst line, and another quote signals the star\
t of the characters on the sec-)108 475.6 R .722(ond line. This sequenc\
e of quote, line break, quote is called a string break and is not inclu\
ded in)108 487.6 R(the actual string v)108 499.6 Q(alue.)-.25 E
(Examples)108 523.6 Q('Don')194 547.6 Q .36 -.18('t t)-.74 H
(read on the grass').18 E('a m ,;;;;;')194 559.6 Q 65.06 -.74('' $)194
571.6 T(the null character string)3.24 E F0 2.5(3.4.4. Boolean)108 607.6
R(Denotations)2.5 E F1 .021(The denotations TR)133 623.8 R .021
(UE and F)-.4 F .021(ALSE can be used to stand for the tw)-.74 F 2.52
(op)-.1 G .02(ossible boolean v)-2.52 F(alues.)-.25 E EP
%%Page: 50 51
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 3)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 50).1 E 2.5(3.4.5. Other)
108 130 R(Denotations)2.5 E/F1 10/Times-Roman@0 SF .306(The symbol)133
146.2 R F0(om)2.806 E F1 .306
(may be used to represent the unde\214ned v)2.806 F .307
(alue \(it is not strictly a denotation,)-.25 F(since)108 158.2 Q F0(om)
2.814 E F1 .314(is not strictly a v)2.814 F .314
(alue\). The only sensible conte)-.25 F .314(xts for the appearence of)
-.15 F F0(om)2.814 E F1 .313(are the right)2.814 F .057
(hand side of an assignment, and as an operand for an)108 170.2 R/F2 10
/Symbol SF(=)2.557 E F1 .057(or /)2.557 F F2(=)A F1 .057
(test whose purpose is to test for unde-)2.557 F(\214ned.)108 182.2 Q
(There are no denotations for)133 198.4 Q F0(atom)2.5 E F1 -.25(va)2.5 G
(lues.).25 E EP
%%Page: 51 52
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(CHAPTER 4)270.666 132.4 R
(EXPRESSIONS & ASSIGNMENT ST)174.588 175.6 Q -1.14(AT)-1.08 G(EMENTS)
1.14 E/F1 10/Times-Roman@0 SF 1.09(An e)133 307 R 1.09
(xpression in SETL is used to compute a v)-.15 F 1.089
(alue or test some condition. There are \214v)-.25 F(e)-.15 E
(forms for an e)108 319 Q(xpression:)-.15 E 21.5<8342>108 335.2 S 1.793
(asic operand, includes identi\214ers, denotations, set and tuple forme\
rs, subscripted refer)-21.5 F(-)-.2 E
(ences to tuples, map references, conditional e)133 347.2 Q
(xpressions and parenthesized e)-.15 E(xpressions.)-.15 E 21.5<8353>108
363.4 S(pecial system v)-21.5 E(alue \()-.25 E/F2 10/Times-Bold@0 SF
(eof)2.5 E 2.5(,n)-.15 G(ewat, nar)-2.5 E(gs, ok, le)-.1 E 1.1 -.55
(v, t)-.15 H(ime, date).55 E F1(\).)2.5 E 21.5<8355>108 379.6 S 1.256
(nary operator)-21.5 F 3.756(,w)-.4 G 1.255
(hich is written in front of its operand which is itself an e)-3.756 F
1.255(xpression and)-.15 F
(which causes a computation to be made using the operand v)133 391.6 Q
(alue as input.)-.25 E 21.5<8342>108 407.8 S .165(inary operator)-21.5 F
2.665(,w)-.4 G .165(hich is written in between its tw)-2.665 F 2.666(oo)
-.1 G .166(perands, which are themselv)-2.666 F .166(es e)-.15 F(xpres-)
-.15 E(sions. Causes a computation to be made using the tw)133 419.8 Q
2.5(oo)-.1 G(perand v)-2.5 E(alues as input.)-.25 E 21.5<8351>108 436 S
.796(uanti\214ed test, one of three forms)-21.5 F F2 .795
(\(exists, notexists, f)3.295 F(orall\))-.25 E F1 .795(which e)3.295 F
.795(xcute an implied loop)-.15 F
(testing a condition and yield a boolean result.)133 448 Q .405
(These rules lea)108 464.2 R .705 -.15(ve s)-.2 H .405
(ome ambiguity in forming an e).15 F .405(xpression, for e)-.15 F .405
(xample in the e)-.15 F .405(xpression a+b*c,)-.15 F 1.101
(is the operator + applied to the tw)108 476.2 R 3.601(oo)-.1 G 1.1
(perands a and b*c, or is the operator * applied to the tw)-3.601 F(o)
-.1 E .17(operands a+b and c? These ambiguities are resolv)108 488.2 R
.171(ed by the precedence rules described later in this)-.15 F(chapter)
108 500.2 Q 3.112(,f)-.4 G .612(or e)-3.112 F .612
(xample these rules specify that the \214rst alternati)-.15 F .912 -.15
(ve i)-.25 H 3.112(st).15 G .612(he one tak)-3.112 F .611
(en in this case. It is)-.1 F 1.637(also possible to use parentheses to\
 alter or emphasize the order prescribed by these rules. F)108 512.2 R
(or)-.15 E -.15(ex)108 524.2 S(ample:).15 E 14.16 2.5(1+2*3 $)128 552.4
T/F3 10/Symbol SF(=)A F1 2.5(7b)2.5 G 2.5(yp)-2.5 G(recedence rules)-2.5
E 2.5(1+\()128 564.4 S 2.5(2*3)-2.5 G 15(\)$)-2.5 G F3(=)-12.5 E F1(7)
2.5 E(\(1 + 2\) * 3)128 576.4 Q($)15 E F3(=)2.5 E F1(9)2.5 E .724
(The follo)108 596.8 R .724(wing sections gi)-.25 F 1.024 -.15(ve t)-.25
H .724(he e).15 F .724
(xact rules for forming basic operands, together with a list of all)-.15
F(the standardly de\214ned operators.)108 608.8 Q F2 2.5(4.1. Basic)108
632.8 R(Operands and Special System V)2.5 E(alues)-.92 E F1
(This section describes the v)133 649 Q
(arious possibilities for basic operands in e)-.25 E(xpressions.)-.15 E
F2(Chapter 4)108 756 Q(The SETL Pr)79.06 E(ogramming Language)-.18 E -.1
(Pa)89.16 G(ge 51).1 E EP
%%Page: 52 53
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 52).1 E/F1 10
/Times-Italic@0 SF(Denotations)108 130 Q/F2 10/Times-Roman@0 SF .86
(Denotations stand for the v)133 142 R .861(alue which the)-.25 F 3.361
(yd)-.15 G .861(enote. F)-3.361 F .861(or e)-.15 F .861
(xample the denotation 123 stands)-.15 F(for the inte)133 154 Q(ger v)
-.15 E(alue 123.)-.25 E F1(Identi\214er)108 170.2 Q(s)-.1 E F2 1.896
(Identi\214ers stand for the v)133 182.2 R 1.896
(alue contained in the associated v)-.25 F 1.895
(ariable, as set by a pre)-.25 F(vious)-.25 E(assignment statement.)133
194.2 Q F1 -.55(Tu)108 210.4 S(ple Enumer).55 E(ation)-.15 E F2 3.895
(At)133 222.4 S 1.395(uple v)-3.895 F 1.396
(alue constructed by enumeration consists of zero or more arbitrary e)
-.25 F(xpressions,)-.15 E(separated by commas, with v)133 234.4 Q
(alues other than)-.25 E F0(om)2.5 E F2(and enclosed in tuple brack)2.5
E(ets [ and ].)-.1 E F1(Inte)108 250.6 Q -.1(ge)-.4 G 2.5(rt).1 G
(uple former)-2.5 E F2(An inte)133 262.6 Q
(ger tuple former has one of the tw)-.15 E 2.5(of)-.1 G(orms:)-2.5 E 2.5
([e)169 286.6 S(xpression1, e)-2.65 E(xpression2 .. e)-.15 E
(xpression3 ])-.15 E 2.5([e)169 298.6 S(xpression1 .. e)-2.65 E
(xpression3])-.15 E 1.56(The ef)108 322.6 R 1.559
(fect is to construct a tuple containing the speci\214ed range of inte)
-.25 F 1.559(ger v)-.15 F 1.559(alues. The starting)-.25 F -.25(va)108
334.6 S 1.27(lue is gi).25 F -.15(ve)-.25 G 3.77(nb).15 G 3.77(ye)-3.77
G 1.27(xpression1. If e)-3.92 F 1.271
(xpression2 is present, then it speci\214es both the step size and)-.15
F .502(direction of the sequence which produces the remaining v)108
346.6 R .502(alues. The step is the dif)-.25 F .502(ference e)-.25 F
(xpres-)-.15 E 1.316(sion2 minus e)108 358.6 R 1.316(xpression1. This v)
-.15 F 1.317(alue must be non-zero. If it is positi)-.25 F -.15(ve)-.25
G 3.817(,t).15 G 1.317(hen e)-3.817 F 1.317(xpression3 is the)-.15 F
.074(maximum v)108 370.6 R .074
(alue which terminates the sequence, if ne)-.25 F -.05(ga)-.15 G(ti).05
E -.15(ve)-.25 G 2.574(,t).15 G .073(hen it is the minimum v)-2.574 F
.073(alue terminat-)-.25 F .096(ing a re)108 382.6 R -.15(ve)-.25 G .096
(rse sequence. If e).15 F .096(xpression2 is omitted, then the def)-.15
F .096(ault step size is 1 and the sequence is)-.1 F
(ascending \(i.e. the def)108 394.6 Q(ault for e)-.1 E(xpression2 is e)
-.15 E(xpression1 plus 1\).)-.15 E F1 -.55(Tu)108 410.8 S(ple F).55 E
(ormer)-1.05 E F2 2.5(At)133 422.8 S(uple former is written:)-2.5 E 2.5
([e)169 446.8 S(xpression : iterator ])-2.65 E .48
(and computes a tuple v)133 470.8 R .48
(alue in an implied loop. The syntax and meaning of tuple formers is)
-.25 F(further described in the section on loops.)133 482.8 Q F1
(Set Enumer)108 499 Q(ation)-.15 E F2 3.952(As)133 511 S 1.452(et v)
-3.952 F 1.453(alue constructed by enumeration consists of zero or more\
 arbitrary computational)-.25 F -.15(ex)133 523 S .484(pressions with v)
.15 F .484(alue other than)-.25 F F0(om)2.984 E F2 2.984(,s)C .483
(eparated by commas, and enclosed in set brack)-2.984 F .483(ets {)-.1 F
(and }.)133 535 Q F1(Set F)108 551.2 Q(ormer)-1.05 E F2 2.5(As)133 563.2
S(et former is written)-2.5 E({e)169 587.2 Q(xpression : iterator})-.15
E .48(and computes a set v)133 611.2 R .481
(alue in an implied loop. The syntax and meaning of set formers is fur)
-.25 F(-)-.2 E(ther described in the section on loops.)133 623.2 Q F1
(Inte)108 639.4 Q -.1(ge)-.4 G 2.5(rs).1 G(et former)-2.5 E F2(An inte)
133 651.4 Q(ger set former has one of tw)-.15 E 2.5(op)-.1 G
(ossible forms:)-2.5 E 2.5({e)169 675.4 S(xpression1, e)-2.65 E
(xpression2 .. e)-.15 E(xpression3 })-.15 E EP
%%Page: 53 54
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 53).1 E/F1 10/Times-Roman@0
SF 2.5({e)169 130 S(xpression1 .. e)-2.65 E(xpression3 })-.15 E 1.173
(The ef)133 154 R 1.173
(fect is to construct a set using the sequence of inte)-.25 F 1.172
(gers speci\214ed. This sequence of)-.15 F(inte)133 166 Q 1.999
(gers is the same as that implied in an inte)-.15 F 2
(ger tuple former as pre)-.15 F 2(viously described,)-.25 F -.15(ex)133
178 S .662(cept that the resulting set does not retain the order of the\
 elements, since sets are al).15 F -.1(wa)-.1 G(ys).1 E(unordered.)133
190 Q/F2 10/Times-Italic@0 SF(String Slice)108 206.2 Q F1 2.5(As)133
218.2 S(tring slice obtains a substring from a)-2.5 E F0(string)2.5 E F1
-.25(va)2.5 G(lue. The syntax is:).25 E(string\(start..end\))169 242.2 Q
.028(where string is the string v)133 266.2 R .029
(alue, which must be a basic operand, and start and length are arbi-)
-.25 F .445(trary e)133 278.2 R .445(xpressions yielding inte)-.15 F
.445
(ger results. Start is the starting position \(with the \214rst charac-)
-.15 F .447(ter in the string numbered 1\), and end is the ending posit\
ion numbered in the same manner)133 290.2 R(.)-.55 E .55(The resulting \
string is the substring which includes both the starting and ending cha\
racters.)133 302.2 R .783(Both the start and end v)133 314.2 R .783
(alues must be in range \(greater than zero and less than or equal to)
-.25 F 1.066(the length of the string\). The one e)133 326.2 R 1.066
(xception to this rule occurs when the end v)-.15 F 1.065(alue is less)
-.25 F .009(than the start v)133 338.2 R .009
(alue. In this case the start and end v)-.25 F .009
(alues need not be in range and the result is)-.25 F(al)133 350.2 Q -.1
(wa)-.1 G(ys a null string.).1 E(The follo)5 E(wing abbre)-.25 E
(viated forms are permitted:)-.25 E 17.5(string\(start\) $)153 378.4 R
(means string\(start..start\))2.5 E 12.5(string\(start..\) $)153 390.4 R
(means string\(start..#string\))2.5 E 12.5(string\(..start\) $)153 402.4
R(means string\(1..start\))2.5 E F2 -.55(Tu)108 434.8 S(ple Slices).55 E
F1 -.45(Tu)133 446.8 S(ple slices ha).45 E .3 -.15(ve t)-.2 H
(he same basic format as string slices:).15 E(tuple\(start..end\))169
470.8 Q 1.338(The v)133 494.8 R 1.338(alue tuple, which must be a basic\
 operand, is the tuple from which a slice is to be)-.25 F .578
(selected. Start and end are arbitrary inte)133 506.8 R .578(ger e)-.15
F .579(xpressions which specify the desired subtuple.)-.15 F .188(Both \
start and end must be in range \(greater than zero and less than or equ\
al to the length of)133 518.8 R .775(the tuple\).)133 530.8 R .775
(As in the case of string slices, the one e)5.775 F .776
(xception occurs if the end v)-.15 F .776(alue is less)-.25 F .22
(than the start v)133 542.8 R .22
(alue, in which case a null tuple is obtained as the result re)-.25 F
-.05(ga)-.15 G .22(rdless of whether).05 F .402
(or not the start and end v)133 554.8 R .402(alues are in range.)-.25 F
.402(Note that a tuple can ne)5.402 F -.15(ve)-.25 G 2.903(rh).15 G
-2.25 -.2(av e)-2.903 H(an)3.103 E 2.903(yu)-.15 G(nde\214ned)-2.903 E
-.25(va)133 566.8 S .273(lues at the end, so the resulting tuple is sho\
rtened if necessary to meet this requirement as).25 F
(illustrated by the follo)133 578.8 Q(wing e)-.25 E(xamples:)-.15 E 2.5
(a:)153 607 S/F3 10/Symbol SF(=)-2.5 E F1([1,3,7,9];)2.5 E(a\(8\) :)153
619 Q F3(=)A F1(13;)2.5 E 2.5(b:)153 631 S F3(=)-2.5 E F1 25
(a\(2..3\); $)2.5 F(b)2.5 E F3(=)2.5 E F1([3,7])2.5 E 2.5(b:)153 643 S
F3(=)-2.5 E F1 25(a\(2..4\); $)2.5 F(b)2.5 E F3(=)2.5 E F1([3,7,9])2.5 E
EP
%%Page: 54 55
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 54).1 E/F1 10/Times-Roman@0
SF 2.5(b:)153 130 S/F2 10/Symbol SF(=)-2.5 E F1 25(a\(2..5\); $)2.5 F(b)
2.5 E F2(=)2.5 E F1([3,7,9])2.5 E 2.5(b:)153 142 S F2(=)-2.5 E F1 15
(a\(11..10\); $)2.5 F(b)2.5 E F2(=)2.5 E F1 1.666([])2.5 G(The follo)133
170.2 Q(wing short hand notations are a)-.25 E -.25(va)-.2 G(ilable:).25
E 12.5(tuple\(start..\) $)153 198.4 R(means tuple\(start..#start\))2.5 E
12.5(tuple\(..start\) $)153 210.4 R(means tuple\(1..start\))2.5 E .359(\
Note that, in contrast to string slicing notation, the form tuple\(star\
t\) is a selection, not a one)133 238.6 R(element slice.)133 250.6 Q/F3
10/Times-Italic@0 SF -.55(Tu)108 266.8 S(ple Selection).55 E F1 3.649
(At)133 278.8 S 1.148(uple selection, or tuple subscripting operation y\
ields a speci\214ed single element from a)-3.649 F(tuple. The form is:)
133 290.8 Q(tuple\(inde)169 314.8 Q(x\))-.15 E 1.15
(where tuple is a basic operand yielding the tuple v)133 338.8 R 1.15
(alue to be subscripted, and inde)-.25 F 3.65(xi)-.15 G 3.65(sa)-3.65 G
(n)-3.65 E 2.83(arbitrary e)133 350.8 R 2.83(xpression with a positi)
-.15 F 3.13 -.15(ve v)-.25 H 2.83
(alue which selects the desired element. If inde)-.1 F(x)-.15 E -.15(ex)
133 362.8 S 1.512(ceeds the maximum inde).15 F 1.512
(x, or corresponds to an unde\214ned element v)-.15 F 1.513
(alue, the result is)-.25 F(unde\214ned)133 374.8 Q F0(\(om\).)2.5 E F1
(An error results if the inde)5 E 2.5(xv)-.15 G(alue is zero or ne)-2.75
E -.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G(.).15 E F3(Single V)108 391 Q
(alued Map Refer)-1.11 E(ence)-.37 E F1 2.5(As)133 403 S(ingle v)-2.5 E
(alued map reference is written:)-.25 E(map\(domv)169 427 Q(al\))-.25 E
.713(where map is a basic operand which yields a set v)133 451 R .713
(alue which must contain only pairs \(tw)-.25 F(o)-.1 E 1.571
(element tuples\), and domv)133 463 R 1.572(al is an arbitrary e)-.25 F
1.572(xpression gi)-.15 F 1.572(ving the domain v)-.25 F 1.572
(alue. Domv)-.25 F(al)-.25 E .776(must not be)133 475 R F0(om,)3.276 E
F1 .775(and there must be e)3.276 F .775
(xactly one pair [x,y] in map such that domv)-.15 F(al)-.25 E F2(=)A F1
.775(x. The)B(result of the map reference is the range v)133 487 Q
(alue y)-.25 E(.)-.65 E F3(Multi-valued Map Refer)108 503.2 Q(ence)-.37
E F1 2.5(Am)133 515.2 S(ulti-v)-2.5 E(alued map reference is written:)
-.25 E(map{domv)169 539.2 Q(al})-.25 E 1.058
(where map is a basic operand or parenthesized e)133 563.2 R 1.059
(xpression which yields a set v)-.15 F 1.059(alue which)-.25 F .779
(must contain only pairs \(tw)133 575.2 R 3.279(oe)-.1 G .778
(lement tuples\), and domv)-3.279 F .778(al is an arbitrary e)-.25 F
.778(xpression gi)-.15 F(ving)-.25 E(the domain v)133 587.2 Q 2.5
(alue. The)-.25 F(result is e)2.5 E(xpressed by the follo)-.15 E
(wing equation:)-.25 E(map{domv)169 611.2 Q(al})-.25 E F2(=)2.5 E F1
({y : [x,y])2.5 E F0(in)2.5 E F1(map | x)2.5 E F2(=)2.5 E F1(domv)2.5 E
(al})-.25 E .723(In particular)133 635.2 R 3.223(,t)-.4 G .723(he v)
-3.223 F .723(alue is {)-.25 F 3.223(}i)1.666 G 3.223(ft)-3.223 G .724
(here is no pair in the set with a matching domain v)-3.223 F .724
(alue. If)-.25 F(there is only one pair)133 647.2 Q 2.5(,t)-.4 G
(he result is a singleton set containing the one range v)-2.5 E(alue.)
-.25 E EP
%%Page: 55 56
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 55).1 E/F1 10
/Times-Italic@0 SF(Multi-ar)108 130 Q(gument Map Refer)-.37 E(ences)-.37
E/F2 10/Times-Roman@0 SF 1.244(It is sometimes con)133 142 R -.15(ve)-.4
G 1.244(nient to ha).15 F 1.544 -.15(ve a m)-.2 H(ulti-ar).15 E 1.243
(gument map, i.e. a map whose elements are)-.18 F(retrie)133 154 Q -.15
(ve)-.25 G 3.397(du).15 G .897(sing tw)-3.397 F 3.397(oo)-.1 G 3.397(rm)
-3.397 G .897(ore subscript v)-3.397 F .898
(alues. Such maps are modeled in SETL by using a)-.25 F 1.237
(map where the elements of the domain are themselv)133 166 R 1.237
(es tuples of v)-.15 F 1.237(alues. F)-.25 F 1.237(or e)-.15 F 1.237
(xample, the)-.15 F(equi)133 178 Q -.25(va)-.25 G
(lent of a 2 by 2 array can be modeled as the map:).25 E 15({[)273.29
206.2 S([1,1] , v11],)-15 E([[1,2] , v12],)293.09 218.2 Q
([[2,1] , v21],)293.09 230.2 Q([[2,2] , v22])293.09 242.2 Q(})17.5 E 2.5
(As)133 270.4 S(pecial notation is a)-2.5 E -.25(va)-.2 G(ilable to f)
.25 E(acilitate references to such a map:)-.1 E(map\(a,b)237.785 298.6 Q
15.44(..n\) means)-.4 F(map\([a,b)15 E(...n]\))-.4 E(map{a,b)237.785
310.6 Q 12.5(..n} means map{[a,b)-.4 F(...n]})-.4 E .046
(This means that the e)133 338.8 R .046(xtra tuple brack)-.15 F .046
(ets can be omitted in such a reference, gi)-.1 F .047(ving a notation)
-.25 F
(similar to multi-dimensional array references in other languages.)133
350.8 Q F1(Function Calls)108 367 Q F2 2.5(Af)133 379 S
(unction call is a call to a procedure which returns a v)-2.5 E
(alue, and has the general form:)-.25 E(fname\(e)169 403 Q(xpression,e)
-.15 E(xpression,...e)-.15 E(xpression\))-.15 E(Further details on func\
tion calls are contained in the chapter on procedures.)133 427 Q F1
(Special V)108 443.2 Q(alue)-1.11 E F2 .469(Certain special reserv)133
455.2 R .469(ed names correspond to v)-.15 F .468(alues a)-.25 F -.25
(va)-.2 G .468(ilable from the SETL run time sys-).25 F(tem. The follo)
133 467.2 Q(wing is a list of all such names:)-.25 E F0(newat)153 483.4
Q F2 2.5($y)15 G(ields a unique atom)-2.5 E F0(eof)153 495.4 Q F2 2.5
($t)27.78 G(ests for end of \214le)-2.5 E F0(nar)153 507.4 Q(gs)-.1 E F2
2.5($n)16.76 G(umber of ar)-2.5 E(guments)-.18 E F0(le)153 519.4 Q(v)
-.15 E F2 2.5($c)28.48 G(urrent backtracking le)-2.5 E -.15(ve)-.25 G(l)
.15 E F0(ok)153 531.4 Q F2 2.5($b)29.99 G(acktracking en)-2.5 E
(vironment switch)-.4 E F0(time)153 543.4 Q F2 2.5($t)21.67 G
(ime of day)-2.5 E F0(date)153 555.4 Q F2 2.5($c)22.22 G(urrent date)
-2.5 E F0(Newat)133 587.8 Q F2 .945(yields a ne)3.445 F 3.445(wa)-.25 G
.945(tom v)-3.445 F .945(alue which has the property of being dif)-.25 F
.946(ferent from an)-.25 F 3.446(yp)-.15 G(re)-3.446 E(vi-)-.25 E .404
(ously obtained atom.)108 599.8 R .404
(The use of atoms in general, and the)5.404 F F0(newat)2.904 E F2 .403
(function in particular)2.904 F 2.903(,i)-.4 G 2.903(sf)-2.903 G(urther)
-2.903 E(described in the chapter on data structures.)108 611.8 Q F0
(Eof)133 628 Q F2 .66(is used follo)3.16 F .661
(wing a read or other input function call. It returns a boolean v)-.25 F
.661(alue \(TR)-.25 F(UE)-.4 E 1.4(or F)108 640 R 1.399(ALSE\) indicati\
ng whether the read just performed caused an end of \214le to be encoun\
tered)-.74 F(\(TR)108 652 Q .145(UE means that an end of \214le w)-.4 F
.145(as encountered\).)-.1 F(If)5.145 E F0(eof)2.645 E F2 .145
(is referenced before an)2.645 F 2.645(yi)-.15 G .145(nput operation)
-2.645 F(has been performed, the result is F)108 664 Q(ALSE.)-.74 E EP
%%Page: 56 57
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 56).1 E(Nar)133 130 Q(gs)
-.1 E/F1 10/Times-Roman@0 SF 1.109(yields the number of ar)3.609 F 1.109
(guments which appear in the call to a procedure. It is used)-.18 F .919
(within the procedure, and is most useful in conjunction with the featu\
re which allo)108 142 R .919(ws a v)-.25 F(ariable)-.25 E .887
(number of ar)108 154 R .887(guments to a procedure. If)-.18 F F0(nar)
3.386 E(gs)-.1 E F1 .886(is used outside an)3.386 F 3.386(yp)-.15 G .886
(rocedure \(in the "main" pro-)-3.386 F(gram\), the v)108 166 Q
(alue is zero.)-.25 E F0(Le)133 182.2 Q(v)-.15 E F1(and)4.629 E F0(ok)
4.629 E F1 2.129(are only used in conjunction with the backtracking fea\
ture, which is fully)4.629 F(described in a separate chapter)108 194.2 Q
(.)-.55 E/F2 10/Times-Italic@0 SF -.8(Pa)108 210.4 S -.37(re).8 G
(nthesized Expr).37 E(ession)-.37 E F1(An)133 222.4 Q 4(ye)-.15 G 1.499
(xpression enclosed in parentheses can be used as a basic operand. This\
 is the rule)-4.15 F(which allo)133 234.4 Q
(ws the use of parentheses to control the order of operations.)-.25 E F2
(Conditional Expr)108 250.6 Q(essions)-.37 E F1 3.444(Conditional e)133
262.6 R(xpressions)-.15 E F0(\(if)5.944 E F1 -.15(ex)5.944 G 3.444
(pressions and).15 F F0(case)5.944 E F1 -.15(ex)5.945 G 3.445
(pressions\) may be used as basic).15 F
(operands. These constructions are fully e)133 274.6 Q
(xplained in the follo)-.15 E(wing chapter)-.25 E(.)-.55 E F0(expr)108
290.8 Q F2(Bloc)2.5 E(ks)-.2 E F1(The)133 302.8 Q F0(expr)2.724 E F1
.224(block allo)2.724 F .224(ws a v)-.25 F .223
(alue to be computed from a sequence of statements, and used as a)-.25 F
.554(basic operand in an)133 314.8 R 3.054(ys)-.15 G .554(uitable conte)
-3.054 F .555(xt, e.g. as the operand of some other operator)-.15 F
3.055(.T)-.55 G .555(he form)-3.055 F(is:)133 326.8 Q F0(expr)169 350.8
Q F1(block)2.5 E F0(end)2.5 E F1 1.283(The ef)133 367 R 1.283
(fect is to e)-.25 F -.15(xe)-.15 G 1.283
(cute the sequence of statements in block.).15 F 1.282
(At least one of these state-)6.282 F(ments will be, or contain, a)108
379 Q F0(yield)2.5 E F1(statement:)2.5 E F0(yield)144 403 Q F1 -.15(ex)
2.5 G(pression;).15 E 1.127(As soon as the)133 431.2 R F0(yield)3.628 E
F1 1.128(statement is encountered, e)3.628 F -.15(xe)-.15 G 1.128
(cution of the).15 F F0(expr)3.628 E F1 1.128(block is terminated,)3.628
F .279(and the v)108 443.2 R .279(alue of the)-.25 F F0(expr)2.779 E F1
.279(block is the v)2.779 F .279(alue of the e)-.25 F .279
(xpression in the)-.15 F F0(yield)2.779 E F1 2.779(statement. It)2.779 F
.278(is possible)2.779 F .555(to ha)108 455.2 R .855 -.15(ve m)-.2 H
.555(ore than one).15 F F0 .555(yield yield)3.055 F F1 .555
(statement in the same)3.055 F F0(expr)3.055 E F1 .555
(block, and the last statement is not)3.055 F .031(required to be a)108
467.2 R F0(yield)2.531 E F1 .031
(statement, although it often will be. If e)2.531 F -.15(xe)-.15 G .03
(cution of the).15 F F0(expr)2.53 E F1 .03(block completes)2.53 F .689
(without e)108 479.2 R -.15(xe)-.15 G .689(cuting a).15 F F0(yield)3.189
E F1 .689(statement, then the result is)3.189 F F0(om.)3.189 E F1 .69
(It is possible, though unusual, to nest)5.689 F F0(expr)108 491.2 Q F1
.388(blocks, i.e. to use an)2.888 F F0(expr)2.888 E F1 .388
(block as an operand within another)2.888 F F0(expr)2.888 E F1 .388
(block, b)2.888 F .388(ut in this case, a)-.2 F F0(yield)108 503.2 Q F1
.923(statement in the inner block al)3.423 F -.1(wa)-.1 G .924
(ys refers to the inner block. The use of a).1 F F0(yield)3.424 E F1
(statement)3.424 E .886(other that statically inside an)108 515.2 R F0
(expr)3.386 E F1 .885(block is erroneous, in particular)3.385 F 3.385
(,i)-.4 G 3.385(ti)-3.385 G 3.385(sn)-3.385 G .885(ot v)-3.385 F .885
(alid to e)-.25 F -.15(xe)-.15 G .885(cute the).15 F F0(yield)108 527.2
Q F1(in a function or re\214nement called within the)2.5 E F0(expr)2.5 E
F1(block.)2.5 E F0 2.5(4.2. Operators)108 543.4 R F1 .397
(Operators yield a v)133 559.6 R .397
(alue using as input one \(unary\) or tw)-.25 F 2.897(o\()-.1 G .397
(binary\) operands.)-2.897 F .398(The follo)5.398 F(wing)-.25 E 1.68
(is a complete list of prede\214ned operators in the SETL system.)108
571.6 R 1.68(The ef)6.68 F 1.68(fect of each operator is)-.25 F .551(de\
\214ned informally in this section. A more formal set of de\214nitions \
appears in appendix nn where)108 583.6 R 1.009(each operator is de\214n\
ed precisely using a SETL operator de\214nition. This appendix may be c\
on-)108 595.6 R(sulted to determine the e)108 607.6 Q(xact ef)-.15 E
(fect of the operator in special cases.)-.25 E F0 2.5(4.2.1. Unary)108
631.6 R(Operators)2.5 E F1 .081(Unary operators compute a v)133 647.8 R
.082(alue from a single input operand which is written to the right of)
-.25 F .156(the operator tok)108 659.8 R .156(en. In the follo)-.1 F
.155(wing list, the allo)-.25 F -.1(wa)-.25 G .155
(ble operand datatype is indicated. If an operator).1 F(is used with a \
datatype which is not in the list, then an error results.)108 671.8 Q EP
%%Page: 57 58
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 57).1 E/F1 10/Times-Roman@0
SF 2.5(+i)108 130 S(nte)-2.5 E 71.74(ger The)-.15 F(result is the inte)
2.5 E(ger operand, unchanged in v)-.15 E(alue.)-.25 E 2.5(+r)108 146.2 S
84.37(eal The)-2.5 F(result is the real operand, unchanged in v)2.5 E
(alue.)-.25 E/F2 10/Symbol SF(-)108 162.4 Q F1(inte)2.5 E 71.89(ger The)
-.15 F(result is the ne)2.5 E -.05(ga)-.15 G(ti).05 E .3 -.15(ve o)-.25
H 2.5(ft).15 G(he inte)-2.5 E(ger operand.)-.15 E F2(-)2.5 E F1 2.5(0i)C
2.5(se)-2.5 G(qual to 0.)-2.5 E F2(-)108 178.6 Q F1 84.52(real The)2.5 F
(result is the ne)2.5 E -.05(ga)-.15 G(ti).05 E .3 -.15(ve o)-.25 H 2.5
(ft).15 G(he real operand.)-2.5 E F2(-)2.5 E F1(0.0 is equal to 0.0.)A
2.5(#s)108 194.8 S 88.89(et Number)-2.5 F
(of elements in the set as an inte)2.5 E(ger)-.15 E(.)-.55 E 2.5(#s)108
211 S 77.22(tring Number)-2.5 F(of characters in the string as an inte)
2.5 E(ger)-.15 E(.)-.55 E 2.5(#t)108 227.2 S 80(uple Inde)-2.5 F 2.633
(xo)-.15 G 2.633(fh)-2.633 G .134
(ighest de\214ned element in the tuple, zero if applied to the null)
-2.633 F 1.018(tuple. This is equal to the number of de\214ned elements\
 in the tuple in)218 239.2 R(the case where there are no "holes".)218
251.2 Q F0(abs)108 267.4 Q F1(inte)2.5 E 62.93(ger Y)-.15 F 1.836
(ields the absolute v)-.55 F 1.836(alue of the inte)-.25 F 1.836
(ger operand.)-.15 F 1.836(Returns the v)6.836 F(alue)-.25 E 1.231
(unchanged if it is zero or positi)218 279.4 R -.15(ve)-.25 G 3.731(,a)
.15 G 1.231(nd ne)-3.731 F -.05(ga)-.15 G 1.23(tes it if it is ne).05 F
-.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G 3.73(,s).15 G(o)-3.73 E
(that the result is al)218 291.4 Q -.1(wa)-.1 G(ys non-ne).1 E -.05(ga)
-.15 G(ti).05 E -.15(ve)-.25 G(.).15 E F0(abs)108 307.6 Q F1 75.56
(real Y)2.5 F 3.099(ields the absolute v)-.55 F 3.099
(alue of the real operand.)-.25 F 3.099(Returns the v)8.099 F(alue)-.25
E 1.231(unchanged if it is zero or positi)218 319.6 R -.15(ve)-.25 G
3.731(,a).15 G 1.231(nd ne)-3.731 F -.05(ga)-.15 G 1.23
(tes it if it is ne).05 F -.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G 3.73
(,s).15 G(o)-3.73 E(that the result is al)218 331.6 Q -.1(wa)-.1 G
(ys non-ne).1 E -.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G(.).15 E F0(abs)
108 347.8 Q F1 67.77(string The)2.5 F 1.152(operand v)3.652 F 1.153
(alue must be a one character string or an error results.)-.25 F .869
(The returned result is the internal inte)218 359.8 R .869
(ger code for the character)-.15 F 3.369(.N)-.55 G(ote)-3.369 E(that)218
371.8 Q F0(abs)2.5 E F1(and)2.5 E F0(char)2.5 E F1(are in)2.5 E -.15(ve)
-.4 G(rse operators.).15 E F0(acos)108 388 Q F1 71.68(real Y)2.5 F .492
(ields the arccosine of the real operand which is gi)-.55 F -.15(ve)-.25
G 2.992(ni).15 G 2.992(nr)-2.992 G 2.992(adians. An)-2.992 F
(error results if the operand is out of range.)218 400 Q F0(arb)108
416.2 Q F1 78.89(set The)2.5 F .347(result is an arbitrary element from\
 the set. If the set is the null set,)2.848 F(then the result is)218
428.2 Q F0(om.)2.5 E(asin)108 444.4 Q F1 72.78(real Y)2.5 F 1.278
(ields the arcsine of the real operand which is gi)-.55 F -.15(ve)-.25 G
3.779(ni).15 G 3.779(nr)-3.779 G 3.779(adians. An)-3.779 F
(error results if the operand is out of range.)218 456.4 Q F0(atan)108
472.6 Q F1 71.12(real Y)2.5 F
(ields the arctangent of the real operand which is gi)-.55 E -.15(ve)
-.25 G 2.5(ni).15 G 2.5(nr)-2.5 G(adians.)-2.5 E F0(ceil)108 488.8 Q F1
(real)2.5 E F0(Ceil)78.07 E F1 .455(yields the smallest inte)2.955 F
.455(ger x such that x >)-.15 F F2(=)A F1 .454(real. F)2.954 F .454
(or e)-.15 F(xample)-.15 E F0(ceil)2.954 E F1 1.094(3.5 and)218 500.8 R
F0(ceil)3.594 E F1 1.094(4.0 both yield 4.0 and)3.594 F F0(ceil)3.594 E
F2(-)3.594 E F1 1.094(3.5 and)B F0(ceil)3.595 E F2(-)3.595 E F1 1.095
(3.0 both yield)B F2(-)218 512.8 Q F1(3.0.)A F0(char)108 529 Q F1(inte)
2.5 E 57.94(ger Y)-.15 F .424(ields a string consisting of the characte\
r whose internal code is equal)-.55 F 1.95(to the v)218 541 R 1.95
(alue of the inte)-.25 F 1.95
(ger operand. The range of permissible input)-.15 F 2.926
(operands and their interpretation is implementation dependent. An)218
553 R(error results if the operand is out of range.)218 565 Q F0(cos)108
581.2 Q F1 76.68(real Y)2.5 F
(ields the cosine of the real operand which is gi)-.55 E -.15(ve)-.25 G
2.5(ni).15 G 2.5(nr)-2.5 G(adians.)-2.5 E F0(domain)108 597.4 Q F1 61.66
(set The)2.5 F 1.212
(set operand must be a map, i.e. it must consist entirely of pairs.)
3.711 F
(The reference yields the domain set as de\214ned by the equation:)218
609.4 Q F0(domain)254 633.4 Q F1(set)2.5 E F2(=)2.5 E F1({a : [a,b])2.5
E F0(in)2.5 E F1(set})2.5 E F0 -2.3 -.15(ev e)108 661.6 T(n).15 E F1
(inte)2.5 E 58.19(ger Y)-.15 F 1.603(ields TR)-.55 F 1.603
(UE if the inte)-.4 F 1.603(ger operand is e)-.15 F 1.603(xactly di)-.15
F 1.602(visible by tw)-.25 F 1.602(o, and)-.1 F -.74(FA)218 673.6 S
(LSE if it is not di).74 E(visible by tw)-.25 E(o.)-.1 E EP
%%Page: 58 59
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 58).1 E(expr)108 130 Q/F1
10/Times-Roman@0 SF 70.57(real Y)2.5 F 1.063(ields the e)-.55 F 1.063
(xponential of the real operand \(i.e.)-.15 F 1.063(the v)6.063 F 1.063
(alue e**operand)-.25 F .513(where e is the base of natural log)218 142
R .513(arithms\). An error results if the com-)-.05 F
(putation causes real o)218 154 Q -.15(ve)-.15 G(r\215o).15 E -.65(w.)
-.25 G F0<8c78>108 170.2 Q F1 79.45(real Returns)2.5 F .494(the inte)
2.994 F .494(ger part of the real operand as an inte)-.15 F(ger)-.15 E
2.995(,d)-.4 G .495(ropping the)-2.995 F 1.197(fractional part. The con)
218 182.2 R -.15(ve)-.4 G 1.196(rsion is al).15 F -.1(wa)-.1 G 1.196
(ys possible, although precision).1 F .841
(may be lost in the least signi\214cant digits for numbers of lar)218
194.2 R .841(ge magni-)-.18 F(tude.)218 206.2 Q F0(\215oat)108 222.4 Q
F1(inte)2.5 E 58.49(ger Con)-.15 F -.15(ve)-.4 G .082(rts the inte).15 F
.082(ger operand to its corresponding real v)-.15 F .081
(alue. If the con-)-.25 F -.15(ve)218 234.4 S 1.629(rsion causes o).15 F
-.15(ve)-.15 G(r\215o).15 E 4.129(w\()-.25 G 1.629
(which is possible in the case of v)-4.129 F 1.63(ery lar)-.15 F(ge)-.18
E(inte)218 246.4 Q(ger operands\), then an error results.)-.15 E .4 LW
119.67 262.6 114.67 262.6 DL F0 2.5(is atom)108 262.6 R F1(an)2.5 E
59.88(yY)-.15 G(ields TR)-60.43 E
(UE if the operand is of type atom, and F)-.4 E(ALSE otherwise.)-.74 E
119.67 278.8 114.67 278.8 DL F0 2.5(is boolean)108 278.8 R F1(an)2.5 E
48.2(yY)-.15 G .425(ields TR)-48.75 F .425
(UE if the operand is of type boolean, and F)-.4 F .424(ALSE otherwise.)
-.74 F 119.67 295 114.67 295 DL F0 2.5(is integer)108 295 R F1(an)2.5 E
51.55(yY)-.15 G(ields TR)-52.1 E(UE if the operand is of type inte)-.4 E
(ger)-.15 E 2.5(,a)-.4 G(nd F)-2.5 E(ALSE otherwise.)-.74 E 119.67 311.2
114.67 311.2 DL F0 2.5(is map)108 311.2 R F1(an)2.5 E 62.65(yY)-.15 G
.41(ields TR)-63.2 F .41
(UE if the operand is a map \(i.e. it is of type set and contains)-.4 F
(only pairs as element v)218 323.2 Q(alues\), and F)-.25 E
(ALSE otherwise.)-.74 E 119.67 339.4 114.67 339.4 DL F0 2.5(is r)108
339.4 R(eal)-.18 E F1(an)2.5 E 65.06(yY)-.15 G(ields TR)-65.61 E
(UE if the operand is of type real, and f)-.4 E(alse otherwise.)-.1 E
119.67 355.6 114.67 355.6 DL F0 2.5(is set)108 355.6 R F1(an)2.5 E 69.88
(yY)-.15 G(ields TR)-70.43 E(UE if the operand is of type set, and F)-.4
E(ALSE otherwise.)-.74 E 119.67 371.8 114.67 371.8 DL F0 2.5(is tuple)
108 371.8 R F1(an)2.5 E 59.87(yY)-.15 G(ields TR)-60.42 E
(UE if the operand is of type tuple, and F)-.4 E(ALSE otherwise.)-.74 E
F0(\215oor)108 388 Q F1(real)2.5 E F0(Floor)72.51 E F1 .972
(returns the lar)3.472 F .972(gest inte)-.18 F .972
(ger x, such that x <)-.15 F/F2 10/Symbol SF(=)A F1 3.471(real. F)3.471
F .971(or e)-.15 F(xample,)-.15 E F0(\215oor)218 400 Q F1 .078(3.5 and)
2.578 F F0(\215oor)2.578 E F1 .078(of 3.0 are both 3.0 and)2.578 F F0
(\215oor)2.578 E F2(-)2.578 E F1 .078(3.5 and)B F0(\215oor)2.578 E F2(-)
2.578 E F1 .078(4.0 are)B(both)218 412 Q F2(-)2.5 E F1(4.0.)A F0(log)108
428.2 Q F1 77.23(real Y)2.5 F .231(ields the natural log)-.55 F .231
(arithm of the real operand.)-.05 F .231(An error results if the)5.231 F
(operand v)218 440.2 Q(alue is zero or ne)-.25 E -.05(ga)-.15 G(ti).05 E
-.15(ve)-.25 G(.).15 E F0(not)108 456.4 Q F1 59.45(boolean Y)2.5 F .124
(ields TR)-.55 F .124(UE if the operand v)-.4 F .124(alue is F)-.25 F
.124(ALSE and F)-.74 F .125(ALSE if the operand)-.74 F -.25(va)218 468.4
S(lue is TR).25 E(UE.)-.4 E F0(odd)108 484.6 Q F1(inte)2.5 E 61.26
(ger Y)-.15 F 1.23(ields F)-.55 F 1.229(ALSE if the inte)-.74 F 1.229
(ger operand is e)-.15 F 1.229(xactly di)-.15 F 1.229(visible by tw)-.25
F 1.229(o, and)-.1 F(TR)218 496.6 Q(UE if it is not di)-.4 E(visible.)
-.25 E F0(po)108 512.8 Q(w)-.1 E F1 76.21(set Returns)2.5 F 4.045(as)
4.045 G 1.546(et whose elements are all the subsets of the set operand,)
-4.045 F .25
(including the null set. The number of elements will be 2**n where n is)
218 524.8 R .322(the cardinality of the operand.)218 536.8 R F0(po)5.322
E(w)-.1 E F1 .323(applied to the null set yields a one)2.822 F
(element set containing the null set as its v)218 548.8 Q(alue.)-.25 E
F0(random)108 565 Q F1(inte)2.5 E 43.49(ger Returns)-.15 F 3.058
(an inte)5.558 F 3.058(ger which is pseudo-randomly distrib)-.15 F 3.057
(uted o)-.2 F -.15(ve)-.15 G 5.557(rt).15 G(he)-5.557 E .432
(range from zero to the gi)218 577 R -.15(ve)-.25 G 2.932(no).15 G .432
(perand v)-2.932 F .432(alue, including both end points.)-.25 F -.15(Fo)
218 589 S 7.839(re).15 G(xample)-7.989 E F0(random)7.839 E F1 7.839(6w)
7.839 G 5.339(ill gi)-7.839 F 5.639 -.15(ve o)-.25 H 5.339(ne of the se)
.15 F -.15(ve)-.25 G 7.839(ni).15 G(nte)-7.839 E(gers)-.15 E
(0,1,2,3,4,5,6.)218 601 Q F0(random)108 617.2 Q F1 56.12(real Returns)
2.5 F 4.431(ar)4.431 G 1.931(eal which is pseudo-randomly distrib)-4.431
F 1.931(uted o)-.2 F -.15(ve)-.15 G 4.431(rt).15 G 1.932(he range)-4.431
F .526(from zero to the gi)218 629.2 R -.15(ve)-.25 G 3.026(no).15 G
.525(perand v)-3.026 F .525(alue, including zero b)-.25 F .525
(ut not including)-.2 F(the operand v)218 641.2 Q(alue.)-.25 E F0
(random)108 657.4 Q F1 60(set Returns)2.5 F 1.687
(an element from the set where the choice is go)4.187 F -.15(ve)-.15 G
1.688(rned by a).15 F 3.786(pseudo-random distrib)218 669.4 R 3.786
(ution which ensures that the probability of)-.2 F EP
%%Page: 59 60
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 59).1 E/F1 10/Times-Roman@0
SF 1.455(picking an)218 130 R 3.955(yp)-.15 G 1.456
(articular element is the same as that for an)-3.955 F 3.956(yo)-.15 G
1.456(ther ele-)-3.956 F 2.122(ment. Contrast this with)218 142 R F0
(arb)4.622 E F1 2.122(which picks an arbitrary element, b)4.622 F(ut)-.2
E(mak)218 154 Q .66(es no similar guarantee on the distrib)-.1 F .66
(ution \(and might in f)-.2 F .66(act pick)-.1 F
(the same element each time\).)218 166 Q F0(random)108 182.2 Q F1 51.11
(tuple Returns)2.5 F .577
(an element from the tuple where the choice is go)3.077 F -.15(ve)-.15 G
.576(rened by a).15 F 1.213(pseudo-random distrib)218 194.2 R 1.214
(ution which ensures that the probability of an)-.2 F(y)-.15 E .916
(element of the tuple \(including an)218 206.2 R 3.415(y")-.15 G .915
(holes"\) being pick)-3.415 F .915(ed is the same)-.1 F
(as the probability of picking an)218 218.2 Q 2.5(yo)-.15 G
(ther element.)-2.5 E F0(range)108 234.4 Q F1 69.45(set The)2.5 F 1.212
(set operand must be a map, i.e. it must consist entirely of pairs.)
3.711 F
(The reference yields the range set as de\214ned by the equation:)218
246.4 Q F0(range)254 270.4 Q F1(set)2.5 E/F2 10/Symbol SF(=)2.5 E F1
({b : \(a,b\))2.5 E F0(in)2.5 E F1(set})2.5 E F0(sign)108 298.6 Q F1
(inte)2.5 E 60.15(ger Y)-.15 F .475(ields one of the inte)-.55 F .475
(ger results)-.15 F F2(-)2.975 E F1 .474
(1, 0 or +1 depending on whether the)B(inte)218 310.6 Q
(ger operand is ne)-.15 E -.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G 2.5(,z)
.15 G(ero or positi)-2.5 E -.15(ve)-.25 G(.).15 E F0(sign)108 326.8 Q F1
72.78(real Y)2.5 F .722(ields one of the inte)-.55 F .722(ger results)
-.15 F F2(-)3.222 E F1 .723(1,0 or +1 depending on whether the)B
(real operand is ne)218 338.8 Q -.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G
2.5(,z).15 G(ero or positi)-2.5 E -.15(ve)-.25 G(.).15 E F0(sin)108 355
Q F1 77.78(real Y)2.5 F(ields the sine of the real operand, which is gi)
-.55 E -.15(ve)-.25 G 2.5(ni).15 G 2.5(nr)-2.5 G(adians.)-2.5 E F0(sqrt)
108 371.2 Q F1 72.79(real Returns)2.5 F 2.01
(the square root of the real operand. An error results if the)4.51 F
(operand v)218 383.2 Q(alue is ne)-.25 E -.05(ga)-.15 G(ti).05 E -.15
(ve)-.25 G(.).15 E F0(str)108 399.4 Q F1(inte)2.5 E 65.72(ger This)-.15
F .853(reference yields the decimal string corresponding to the v)3.353
F .853(alue of)-.25 F .332(the inte)218 411.4 R(ger)-.15 E 2.832(,p)-.4
G .332(receded by a minus sign if the v)-2.832 F .331(alue is ne)-.25 F
-.05(ga)-.15 G(ti).05 E .631 -.15(ve \()-.25 H -.2(bu).15 G 2.831(tp).2
G(osi-)-2.831 E(ti)218 423.4 Q .3 -.15(ve v)-.25 H
(alues are not preceded by a plus sign\).)-.1 E F0(str)108 439.6 Q F1
78.35(real Y)2.5 F 2.199
(ields the decimal string corresponding to the v)-.55 F 2.199
(alue of the inte)-.25 F(ger)-.15 E .604
(using a format consistent with range and precision of the implementa-)
218 451.6 R .122(tion. Ne)218 463.6 R -.05(ga)-.15 G(ti).05 E .422 -.15
(ve v)-.25 H .123(alues are preceded by a minus sign, b)-.1 F .123
(ut postiti)-.2 F .423 -.15(ve v)-.25 H(alues)-.1 E
(are not preceded by a plus sign.)218 475.6 Q F0(str)108 491.8 Q F1
70.56(string If)2.5 F .809
(the string operand has the form of an identi\214er \(i.e.)3.309 F .808
(it starts with a)5.808 F .161(letter and contains only letters, digits\
 and the underline character\), then)218 503.8 R F0(str)218 515.8 Q F1
.325(returns its operand unchanged, otherwise)2.825 F F0(str)2.825 E F1
.325(yields the string v)2.825 F(alue)-.25 E 2.173
(surrounded by quotes, and with an)218 527.8 R 4.673(yi)-.15 G 2.173
(nternal quotes doubled, i.e. it)-4.673 F
(yields the string denotation corresponding to the string v)218 539.8 Q
(alue.)-.25 E F0(str)108 556 Q F1 73.34(atom Y)2.5 F .721
(ields a string consisting of a number sign \(#\) follo)-.55 F .72
(wed by an inte)-.25 F(ger)-.15 E -.25(va)218 568 S
(lue which uniquely identi\214es the atom v).25 E(alue.)-.25 E F0(str)
108 584.2 Q F1 61.68(boolean Y)2.5 F 1.205(ields one of the tw)-.55 F
3.706(os)-.1 G 1.206(trings '#T' or '#F' depending on whether the)-3.706
F(operand is true or f)218 596.2 Q(alse respecti)-.1 E -.15(ve)-.25 G
(ly).15 E(.)-.65 E F0(str om)108 612.4 Q F1 -.55(Yi)82.51 G
(elds the string '*'.).55 E F0(str)108 628.6 Q F1 82.23(set Y)2.5 F .314
(ields the string consisting of a left set brack)-.55 F .314
(et {, follo)-.1 F .313(wed by a blank,)-.25 F(follo)218 640.6 Q .868
(wed by the results of applying)-.25 F F0(str)3.368 E F1 .869
(to each element in the set, the)3.368 F -.25(va)218 652.6 S .744
(lues being separated by the sequence blank, comma, blank. F).25 F(ollo)
-.15 E(w-)-.25 E .428(ing the last v)218 664.6 R .429
(alue is a \214nal blank and a right set brack)-.25 F .429
(et }. The null set)-.1 F 3.232(as an operand results in the string '{)
218 676.6 R 5.732(}'. If)1.666 F 3.232(the set brack)5.732 F 3.232
(ets are)-.1 F EP
%%Page: 60 61
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 60).1 E/F1 10/Times-Roman@0
SF(una)218 130 Q -.25(va)-.2 G
(ilable, then << and >> are used as replacements.).25 E F0(str)108 146.2
Q F1 73.34(tuple Similar)2.5 F .882(result to)3.382 F F0(str)3.382 E F1
.882(set e)3.382 F .882(xcept that the elements are in order by tuple)
-.15 F(inde)218 158.2 Q 2.04(x, and the brack)-.15 F 2.04
(ets are either [)-.1 F 4.539(]o)1.666 G 4.539(rs)-4.539 G 2.039
(imple parentheses if these)-4.539 F .874(characters are una)218 170.2 R
-.25(va)-.2 G .874(ilable, unless the tuple has one element, in which)
.25 F(case tuple brack)218 182.2 Q(ets [ and ] are used.)-.1 E F0(tan)
108 198.4 Q F1 76.12(real Y)2.5 F
(ields the tangent of the real operand which is gi)-.55 E -.15(ve)-.25 G
2.5(ni).15 G 2.5(nr)-2.5 G(adians.)-2.5 E F0(tanh)108 214.6 Q F1 70.56
(real Y)2.5 F 1.086(ields the h)-.55 F 1.086
(yperbolic tangent of the real operand.)-.05 F 1.085
(An error results if)6.085 F(the calculation causes real o)218 226.6 Q
-.15(ve)-.15 G(r\215o).15 E -.65(w.)-.25 G F0(type)108 242.8 Q F1 66.67
(atom Y)2.5 F(ields the string ')-.55 E F0(atom)A F1('.)A F0(type)108
259 Q F1 55.01(boolean Y)2.5 F(ields the string ')-.55 E F0(boolean'.)A
F1(type inte)108 275.2 Q 60.16(ger Y)-.15 F(ields the string ')-.55 E F0
(integer'.)A F1(type set)108 291.4 Q -.55(Yi)79.17 G(elds the string ')
.55 E F0(set'.)A F1(type real)108 307.6 Q -.55(Yi)75.29 G
(elds the string ').55 E F0 -.18(re)C(al').18 E F1(type string)108 323.8
Q -.55(Yi)67.5 G(elds the string ').55 E F0(string'.)A F1(type tuple)108
340 Q -.55(Yi)70.28 G(elds the string ').55 E F0(tuple)A F1('.)A F0 2.5
(4.2.2. Binary)108 376 R(Operators)2.5 E F1 2.464
(Binary operators compute a result v)133 392.2 R 2.464(alue from tw)-.25
F 4.964(oi)-.1 G 2.464(nput operands. The operator tok)-4.964 F(en)-.1 E
.056(appears between the tw)108 404.2 R 2.556(oo)-.1 G .056(perands whi\
ch are referred to as the left and right operands of the opera-)-2.556 F
(tor)108 416.2 Q 4.007(.I)-.55 G 4.007(nt)-4.007 G 1.507(he follo)-4.007
F 1.507(wing list, the allo)-.25 F -.1(wa)-.25 G 1.507
(ble combinations of operand datatypes are indicated.).1 F 1.508(If an)
6.508 F(operator is used with a combination of datatypes not in the lis\
t, then an error results.)108 428.2 Q(inte)108 444.4 Q(ger + inte)-.15 E
41.62(ger Y)-.15 F .369(ields the sum of the tw)-.55 F 2.869(oi)-.1 G
(nte)-2.869 E .369(ger operand v)-.15 F .369(alues. Ov)-.25 F(er\215o)
-.15 E 2.869(wi)-.25 G 2.869(sn)-2.869 G .369(ot pos-)-2.869 F
(sible, since inte)218 456.4 Q(gers can be of arbitrary magnitude.)-.15
E(real + real)108 472.6 Q -.55(Yi)69.38 G .836
(elds the real sum of the tw).55 F 3.336(oo)-.1 G 3.336(perands. An)
-3.336 F .836(error results if the addi-)3.336 F(tion causes real o)218
484.6 Q -.15(ve)-.15 G(r\215o).15 E -.65(w.)-.25 G(set + set)108 500.8 Q
-.55(Yi)77.14 G(elds the set which is the union of the tw).55 E 2.5(os)
-.1 G(et operands.)-2.5 E(string + string)108 517 Q -.55(Yi)53.8 G .204
(elds the string which is the concatenation of the tw).55 F 2.703(oo)-.1
G .203(perand strings.)-2.703 F(tuple + tuple)108 533.2 Q
(Concatenates its tw)59.36 E 2.5(ot)-.1 G(uple operands.)-2.5 E(inte)108
549.4 Q(ger - inte)-.15 E 43.93(ger Y)-.15 F .43(ields the dif)-.55 F
.43(ference of the tw)-.25 F 2.93(oi)-.1 G(nte)-2.93 E .43
(ger operands. Ov)-.15 F(er\215o)-.15 E 2.93(wi)-.25 G 2.93(sn)-2.93 G
.43(ot pos-)-2.93 F(sible.)218 561.4 Q(real - real)108 577.6 Q -.55(Yi)
71.69 G .86(elds the real dif).55 F .859(ference of the tw)-.25 F 3.359
(oo)-.1 G 3.359(perands. An)-3.359 F .859(error results if the)3.359 F
(subtraction causes real o)218 589.6 Q -.15(ve)-.15 G(r\215o).15 E -.65
(w.)-.25 G(set - set)108 605.8 Q -.55(Yi)79.45 G .95(elds the dif).55 F
.951(ference between the tw)-.25 F 3.451(os)-.1 G .951
(et operands, i.e.)-3.451 F .951(the set of all)5.951 F .467
(elements which are contained in the \214rst operand, b)218 617.8 R .466
(ut not contained in)-.2 F(the second operand.)218 629.8 Q(inte)108 646
Q(ger * inte)-.15 E 42.26(ger Y)-.15 F .572(ields the product of the tw)
-.55 F 3.072(oi)-.1 G(nte)-3.072 E .572(ger operands as an inte)-.15 F
(ger)-.15 E 3.072(.O)-.55 G -.15(ve)-3.072 G(r\215o).15 E(w)-.25 E
(is not possible.)218 658 Q EP
%%Page: 61 62
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 61).1 E/F1 10/Times-Roman@0
SF(real * real)108 130 Q -.55(Yi)70.02 G 1.694
(elds the read product of the tw).55 F 4.193(oo)-.1 G 1.693
(perands. An error results if the)-4.193 F(multiplication causes real o)
218 142 Q -.15(ve)-.15 G(r\215o).15 E -.65(w.)-.25 G(set * set)108 158.2
Q -.55(Yi)77.78 G(elds the set which is the intersection of the tw).55 E
2.5(os)-.1 G(et operands.)-2.5 E(string * inte)108 174.4 Q 47.1(ger Y)
-.15 F 1.033(ields a string consisting of inte)-.55 F 1.033
(ger number of duplications of string.)-.15 F -.15(Fo)218 186.4 S 4.128
(re).15 G 1.627(xample, 'ab'*3 is the string 'ababab'. If the inte)
-4.278 F 1.627(ger operand is)-.15 F 1.438
(zero, then the result is the null string. An error results if the inte)
218 198.4 R(ger)-.15 E(operand is ne)218 210.4 Q -.05(ga)-.15 G(ti).05 E
-.15(ve)-.25 G(.).15 E(inte)108 226.6 Q(ger * string)-.15 E .251
(Means the same as string * inte)49.6 F .251(ger \(i.e. the tw)-.15 F
2.751(oo)-.1 G .25(perands can appear in)-2.751 F(either order\).)218
238.6 Q(tuple * inte)108 254.8 Q 49.88(ger Y)-.15 F 1.589
(ields a tuple consisting of inte)-.55 F 1.589
(ger number of duplications of tuple.)-.15 F -.15(Fo)218 266.8 S 2.813
(re).15 G .313(xample, 3*[1,2] is the tuple [1,2,1,2,1,2]. If the inte)
-2.963 F .312(ger operand is)-.15 F .551(zero, then the result is the n\
ull tuple. An error results if the operand is)218 278.8 R(ne)218 290.8 Q
-.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G(.).15 E(inte)108 307 Q
(ger * tuple)-.15 E .764(Means the same as tuple * inte)52.38 F .764
(ger \(i.e. the tw)-.15 F 3.264(oo)-.1 G .763(perand can appear in)
-3.264 F(either order\).)218 319 Q(inte)108 335.2 Q(ger / inte)-.15 E
44.48(ger Y)-.15 F 1.821(ields the quotient of the tw)-.55 F 4.322(oi)
-.1 G(nte)-4.322 E 1.822(ger operands as a real.)-.15 F 1.822(An error)
6.822 F .117(results if the di)218 347.2 R .117
(visor is zero, or if the di)-.25 F .116(vision causes real o)-.25 F
-.15(ve)-.15 G(r\215o).15 E 1.416 -.65(w, o)-.25 H 2.616(ri).65 G(f)
-2.616 E .248(either operand is outside the range of v)218 359.2 R .249
(alues which can be con)-.25 F -.15(ve)-.4 G .249(rted to).15 F(real.)
218 371.2 Q(real / real)108 387.4 Q -.55(Yi)72.24 G .453
(elds the real quotient of the tw).55 F 2.952(oo)-.1 G .452
(perands as a real.)-2.952 F .452(An error results)5.452 F(if the di)218
399.4 Q(visor is zero, or if the di)-.25 E(vision causes real o)-.25 E
-.15(ve)-.15 G(r\215o).15 E -.65(w.)-.25 G(inte)108 415.6 Q(ger ** inte)
-.15 E 37.26(ger Y)-.15 F .171(ields the inte)-.55 F .172
(ger result of e)-.15 F .172
(xponentiating the left operand by the right.)-.15 F(Ov)218 427.6 Q
(er\215o)-.15 E 3.327(wi)-.25 G 3.327(sn)-3.327 G .827(ot possible.)
-3.327 F .827(An error results if the right operand is ne)5.827 F(g-)
-.15 E(ati)218 439.6 Q -.15(ve)-.25 G 2.5(,o).15 G 2.5(ri)-2.5 G 2.5(fb)
-2.5 G(oth operands are zero.)-2.5 E(real ** inte)108 455.8 Q 49.89
(ger Y)-.15 F 1.547(ields the real result of e)-.55 F 1.547
(xponentiating the left operand by the right)-.15 F 2.714(operand. An)
218 467.8 R .214(error results if the e)2.714 F .214
(xponentiation causes real o)-.15 F -.15(ve)-.15 G(r\215o).15 E 1.514
-.65(w, o)-.25 H(r).65 E(if the right operand is ne)218 479.8 Q -.05(ga)
-.15 G(ti).05 E -.15(ve)-.25 G 2.5(,o).15 G 2.5(ri)-2.5 G 2.5(fb)-2.5 G
(oth operands are zero.)-2.5 E(real ** real)108 496 Q -.55(Yi)65.02 G
.576(elds the real result of e).55 F .577
(xponentiating the left operand is comple)-.15 F .577(x, or)-.15 F 1.534
(in the case of zero to the po)218 508 R 1.533
(wer of zero, or if the result causes real)-.25 F -.15(ove)218 520 S
(r\215o).15 E -.65(w.)-.25 G(an)108 536.2 Q(y#?#an)-.15 E 66.98(yY)-.15
G 1.006(ields the left operand if it is de\214ned, or the right operand\
 if the left)-67.53 F(operand is unde\214ned)218 548.2 Q F0(\(om\).)2.5
E F1(an)108 564.4 Q(y)-.15 E/F2 10/Symbol SF(=)2.5 E F1(an)2.5 E 70.93
(yY)-.15 G .243(ields TR)-71.48 F .243(UE if both operands ha)-.4 F .542
-.15(ve t)-.2 H .242(he same type and v).15 F .242(alue, or if both)-.25
F(operands are unde\214ned)218 576.4 Q F0(\(om\))2.5 E F1(and F)2.5 E
(ALSE otherwise.)-.74 E(an)108 592.6 Q 2.5(y/)-.15 G F2(=)-2.5 E F1(an)
2.5 E 68.15(yY)-.15 G 1.61(ields F)-68.7 F 1.61
(ALSE if both operands ha)-.74 F 1.91 -.15(ve t)-.2 H 1.61
(he same type and v).15 F 1.61(alue, or if)-.25 F
(both operands are unde\214ned)218 604.6 Q F0(\(om\))2.5 E F1(and TR)2.5
E(UE otherwise.)-.4 E(inte)108 620.8 Q(ger < inte)-.15 E 41.62(ger Y)
-.15 F 2.018(ields TR)-.55 F 2.017
(UE if the left operand is less than the right operand and)-.4 F -.74
(FA)218 632.8 S(LSE otherwise.).74 E(real < real)108 649 Q -.55(Yi)69.38
G 2.017(elds TR).55 F 2.018
(UE if the left operand is less than the right operand and)-.4 F -.74
(FA)218 661 S(LSE otherwise.).74 E EP
%%Page: 62 63
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 62).1 E/F1 10/Times-Roman@0
SF(string < string)108 130 Q -.55(Yi)53.8 G .155(elds TR).55 F .155
(UE if the left operand is le)-.4 F .155
(xically less than the right operand.)-.15 F 4.378(The le)218 142 R
4.379(xical ordering of characters is implementation dependant.)-.15 F
.122(Strings are compared left to right. A string is considered to be l\
ess than)218 154 R 3.883(al)218 166 S 1.384
(onger string which matches its initial characters \(e.g. 'abc' is less)
-3.883 F(than 'abcf)218 178 Q('\).).55 E(inte)108 194.2 Q(ger <)-.15 E
/F2 10/Symbol SF(=)A F1(inte)2.5 E 36.13(ger Y)-.15 F .321(ields TR)-.55
F .321(UE if the left operand is less than the right operand, or if the)
-.4 F(operands are equal, and F)218 206.2 Q(ALSE otherwise.)-.74 E
(real <)108 222.4 Q F2(=)A F1 61.39(real Y)2.5 F .32(ields TR)-.55 F
.321(UE if the left operand is less than the right operand, or if the)
-.4 F(operands are equal, and F)218 234.4 Q(ALSE otherwise.)-.74 E
(string <)108 250.6 Q F2(=)A F1 45.81(string Y)2.5 F .155(ields TR)-.55
F .155(UE if the left operand is le)-.4 F .155
(xically less than the right operand,)-.15 F
(or if both operands are equal, and F)218 262.6 Q(ALSE otherwise.)-.74 E
(inte)108 278.8 Q(ger > inte)-.15 E 41.62(ger Y)-.15 F .745(ields TR)
-.55 F .746
(UE if the left operand is greater than the right operand, and)-.4 F
-.74(FA)218 290.8 S(LSE otherwise.).74 E(real > real)108 307 Q -.55(Yi)
69.38 G .746(elds TR).55 F .746
(UE if the left operand is greater than the right operand, and)-.4 F
-.74(FA)218 319 S(LSE otherwise.).74 E(string > string)108 335.2 Q -.55
(Yi)53.8 G 3.315(elds true if the left operand is le).55 F 3.316
(xically greater than the right)-.15 F(operand, and F)218 347.2 Q
(ALSE otherwise.)-.74 E(inte)108 363.4 Q(ger >)-.15 E F2(=)A F1(inte)2.5
E 36.13(ger Y)-.15 F .497(ields TR)-.55 F .496
(UE if the left operand is greater than the right operand, or if)-.4 F
(the operands are equal, and F)218 375.4 Q(ALSE otherwise.)-.74 E
(real >)108 391.6 Q F2(=)A F1 61.39(real Y)2.5 F .496(ields TR)-.55 F
.496(UE if the left operand is greater than the right operand, or if)-.4
F(the operands are equal, and F)218 403.6 Q(ALSE otherwise.)-.74 E
(string >)108 419.8 Q F2(=)A F1 45.81(string Y)2.5 F 2.392(ields TR)-.55
F 2.392(UE if the left operand is le)-.4 F 2.392
(xically greater than the right)-.15 F
(operand, or if the operands are equal, and F)218 431.8 Q
(ALSE otherwise.)-.74 E(boolean)108 448 Q F0(and)2.5 E F1 23.06
(boolean Y)2.5 F .13(ields TR)-.55 F .13(UE if both operands ha)-.4 F
.43 -.15(ve t)-.2 H .13(he v).15 F .13(alue TR)-.25 F .13(UE and F)-.4 F
.13(ALSE other)-.74 F(-)-.2 E 3.113(wise. The right operand is not e)218
460 R -.25(va)-.25 G 3.113(luated \(and therefore not e).25 F -.15(ve)
-.25 G(n).15 E 1.671(required to be of type boolean\) in the e)218 472 R
-.15(ve)-.25 G 1.672(nt that the left operand is).15 F -.74(FA)218 484 S
(LSE.).74 E(real)108 500.2 Q F0(atan2)2.5 E F1 48.63(real Y)2.5 F 2.366
(ields the arc tangent of the quotient of the operands, taking into)-.55
F(account their signs. The result is yielded in radians.)218 512.2 Q
(inte)108 528.4 Q(ger)-.15 E F0(di)2.5 E(v)-.1 E F1(inte)2.5 E 34.02
(ger Y)-.15 F .025(ields the inte)-.55 F .025
(ger part of the quotient of the tw)-.15 F 2.526(oo)-.1 G .026
(perands as an inte)-2.526 F(ger)-.15 E(.)-.55 E(Ov)218 540.4 Q(er\215o)
-.15 E 3.821(wi)-.25 G 3.821(sn)-3.821 G 1.321
(ot possible. An error results if the di)-3.821 F 1.321(visor is zero.)
-.25 F(The)6.32 E .3(treatment of ne)218 552.4 R -.05(ga)-.15 G(ti).05 E
.6 -.15(ve o)-.25 H .3
(perands, which is not consistent with that of the).15 F F0(mod)218
564.4 Q F1(operator is sho)2.5 E(wn by the follo)-.25 E(wing table of e)
-.25 E(xamples:)-.15 E(+7)238 592.6 Q F0(di)2.5 E(v)-.1 E F1(+3)2.5 E F2
(=)15 E F1(+2)2.5 E F2(-)238 604.6 Q F1(7)A F0(di)2.5 E(v)-.1 E F1(+3)
2.5 E F2 2.5(=-)15.15 G F1(2)-2.5 E(+7)238 616.6 Q F0(di)2.5 E(v)-.1 E
F2(-)2.5 E F1(3)A F2 2.5(=-)15.15 G F1(2)-2.5 E F2(-)238 628.6 Q F1(7)A
F0(di)2.5 E(v)-.1 E F2(-)2.5 E F1(3)A F2(=)15.3 E F1(+2)2.5 E EP
%%Page: 63 64
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 63).1 E/F1 10/Times-Roman@0
SF(boolean)108 130 Q F0(impl)2.5 E F1 19.73(boolean Y)2.5 F .736
(ields F)-.55 F .736(ALSE if the \214rst operand is TR)-.74 F .736
(UE and the second operand is)-.4 F -.74(FA)218 142 S(LSE, and TR).74 E
(UE otherwise.)-.4 E(string)108 158.2 Q F0(in)2.5 E F1 48.6(string Y)2.5
F 1.786(ields TR)-.55 F 1.787
(UE if the left operand appears as a substring of the right)-.4 F .76
(operand, and F)218 170.2 R .759(ALSE otherwise. F)-.74 F .759
(or the case of a single character left)-.15 F .11(operand, the ef)218
182.2 R .111
(fect is to test whether the character appears in the string.)-.25 F(an)
108 198.4 Q(y)-.15 E F0(in)2.5 E F1 68.76(set Y)2.5 F 1.834(ields TR)
-.55 F 1.833(UE if the left operand appears as an element in the right)
-.4 F .895(operand, and F)218 210.4 R .896
(ALSE otherwise. An error results if the left operand is)-.74 F
(unde\214ned)218 222.4 Q F0(\(om\).)2.5 E F1(an)108 238.6 Q(y)-.15 E F0
(in)2.5 E F1 59.87(tuple Y)2.5 F 1.834(ields TR)-.55 F 1.833
(UE if the left operand appears as an element in the right)-.4 F .895
(operand, and F)218 250.6 R .896
(ALSE otherwise. An error results if the left operand is)-.74 F
(unde\214ned)218 262.6 Q F0(\(om\).)2.5 E F1(set)108 278.8 Q F0(incs)2.5
E F1 63.61(set Y)2.5 F .769
(ields true if the left operand includes the right operand, i.e.)-.55 F
.769(if e)5.769 F -.15(ve)-.25 G(ry).15 E .436(element in the right ope\
rand appears as an element in the left operand,)218 290.8 R(and F)218
302.8 Q(ALSE otherwise.)-.74 E(set)108 319 Q F0(less)2.5 E F1(an)2.5 E
64.6(yI)-.15 G 2.88(ft)-64.6 G .38(he right operand v)-2.88 F .38
(alue appears as an element of the left operand set)-.25 F -.25(va)218
331 S .936(lue, then the result is the set with this one element remo)
.25 F -.15(ve)-.15 G .936(d, other).15 F(-)-.2 E .434
(wise the result is the unchanged left operand v)218 343 R 2.933
(alue. An)-.25 F .433(error results if)2.933 F
(the right operand is unde\214ned)218 355 Q F0(\(om\).)2.5 E F1(set)108
371.2 Q F0(lessf)2.5 E F1(an)2.5 E 61.27(yT)-.15 G 1.085
(he left operand must be a map, i.e. a set containing only pairs. The)
-61.27 F 1.189
(result yielded is the set of all pairs in this map operand v)218 383.2
R 1.188(alue whose)-.25 F 2.793
(\214rst element does not match the right operand v)218 395.2 R 2.794
(alue. If the right)-.25 F .734
(operand does not appear in the domain of the left operand v)218 407.2 R
.734(alue, then)-.25 F 1.71(the left operand v)218 419.2 R 1.71
(alue is yielded unchanged.)-.25 F 1.71(An error results if the)6.71 F
(right operand is unde\214ned)218 431.2 Q F0(\(om\).)2.5 E F1(inte)108
447.4 Q(ger)-.15 E F0(max)2.5 E F1(inte)2.5 E 28.93(ger Y)-.15 F
(ields the lar)-.55 E(ger of the tw)-.18 E 2.5(oi)-.1 G(nte)-2.5 E
(ger operands.)-.15 E(real)108 463.6 Q F0(max)2.5 E F1 54.19(real Y)2.5
F(ields the lar)-.55 E(ger of the tw)-.18 E 2.5(or)-.1 G(eal operands.)
-2.5 E(inte)108 479.8 Q(ger)-.15 E F0(min)2.5 E F1(inte)2.5 E 30.59
(ger Y)-.15 F(ields the smaller of the tw)-.55 E 2.5(oi)-.1 G(nte)-2.5 E
(ger operands.)-.15 E(real)108 496 Q F0(min)2.5 E F1 55.85(real Y)2.5 F
(ields the smaller of the tw)-.55 E 2.5(or)-.1 G(eal operands.)-2.5 E
(inte)108 512.2 Q(ger)-.15 E F0(mod)2.5 E F1(inte)2.5 E 28.37(ger Y)-.15
F 3.83(ields the inte)-.55 F 3.83(ger remainder or modulus from di)-.15
F 3.83(viding the \214rst)-.25 F .988(operand by the second.)218 524.2 R
.988(An error results if the di)5.988 F .989(visor is zero or ne)-.25 F
(g-)-.15 E(ati)218 536.2 Q -.15(ve)-.25 G 5.13(.T).15 G .13
(he result is al)-5.13 F -.1(wa)-.1 G .13(ys positi).1 F -.15(ve)-.25 G
2.63(,s).15 G 2.63(ot)-2.63 G .13(hat, for e)-2.63 F(xample,)-.15 E/F2
10/Symbol SF(-)2.63 E F1(7)A F0(mod)2.63 E F1 2.63(5h)2.63 G(as)-2.63 E
(the v)218 548.2 Q(alue +3.)-.25 E(string)108 564.4 Q F0(notin)2.5 E F1
34.71(string Y)2.5 F 1.444(ields F)-.55 F 1.444
(ALSE if the left operand appears as a substring of the right)-.74 F
1.133(operand, and TR)218 576.4 R 1.133(UE otherwise. F)-.4 F 1.133
(or the case of a single character left)-.15 F .058(operand, the ef)218
588.4 R .059
(fect is to test whether the character is not included in the)-.25 F
(string.)218 600.4 Q(an)108 616.6 Q(y)-.15 E F0(notin)2.5 E F1 54.87
(set Y)2.5 F .03(ields F)-.55 F .029
(ALSE if the left operand is contained as an element in the right)-.74 F
1.269(operand, and TR)218 628.6 R 1.269
(UE otherwise. An error results if the left operand is)-.4 F
(unde\214ned)218 640.6 Q F0(\(om\).)2.5 E F1(an)108 656.8 Q(y)-.15 E F0
(notin)2.5 E F1 45.98(tuple Y)2.5 F .03(ields F)-.55 F .029
(ALSE if the left operand is contained as an element in the right)-.74 F
1.269(operand, and TR)218 668.8 R 1.269
(UE otherwise. An error results if the left operand is)-.4 F EP
%%Page: 64 65
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 64).1 E/F1 10/Times-Roman@0
SF(unde\214ned)218 130 Q F0(\(om\).)2.5 E F1(inte)108 146.2 Q(ger)-.15 E
F0(npo)2.5 E(w)-.1 E F1 40.53(set Y)2.5 F .196(ields the set containing\
 all subsets of the right set operand whose car)-.55 F(-)-.2 E 1.296
(dinality \(number of elements\) matches the inte)218 158.2 R 1.296
(ger v)-.15 F 1.296(alue gi)-.25 F -.15(ve)-.25 G 3.796(na).15 G 3.796
(st)-3.796 G(he)-3.796 E
(left operand. An error results if the left operand is ne)218 170.2 Q
-.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G(.).15 E(set)108 186.4 Q F0(npo)
2.5 E(w)-.1 E F1(inte)2.5 E 40.53(ger Means)-.15 F .896
(the same as inte)3.396 F(ger)-.15 E F0(npo)3.396 E(w)-.1 E F1 .896
(set \(i.e. the operands may appear in)3.396 F(either order\).)218 198.4
Q(set)108 214.6 Q F0(subset)2.5 E F1 53.61(set Y)2.5 F .46(ields TR)-.55
F .46(UE if the left operand is a subset of the right operand \(i.e. if)
-.4 F -2.15 -.25(ev e)218 226.6 T 1.419
(ry element of the left operand appears as an element of the right).25 F
(operand\), and F)218 238.6 Q(ALSE otherwise.)-.74 E(set)108 254.8 Q F0
(with)2.5 E F1(an)2.5 E 60.71(yY)-.15 G .961(ields the v)-61.26 F .962
(alue obtained by adding the v)-.25 F .962(alue of the right operand as)
-.25 F .766(an element to the left operand set v)218 266.8 R .766
(alue. If this v)-.25 F .765(alue is already in the)-.25 F .371
(set, then the \214rst operand v)218 278.8 R .371
(alue is yielded unchanged.)-.25 F .371(An error results)5.371 F
(if the right operand is unde\214ned)218 290.8 Q F0(\(om\).)2.5 E F1
(tuple)108 307 Q F0(with)2.5 E F1(an)2.5 E 51.82(yT)-.15 G 1.041
(he result is a tuple whose length is one longer than the original left)
-51.82 F .501(operand v)218 319 R .502
(alue as a result of concatenating the right operand v)-.25 F .502
(alue as a)-.25 F(ne)218 331 Q 2.5(wl)-.25 G(ast element.)-2.5 E
(An error results if the right operand is unde\214ned.)5 E F0 2.5
(4.2.3. Compound)108 347.2 R(Operators)2.5 E F1 -.15(Fo)133 363.4 S 3.84
(re).15 G 1.34(ach binary operator)-3.84 F 3.839(,i)-.4 G 1.339
(ncluding user de\214ned binary operators from)-3.839 F F0(op)3.839 E F1
1.339(declarations, a)3.839 F 1.237(corresponding compound operator e)
108 375.4 R 1.237
(xists whose name is formed by appending a / \(slash\) to the)-.15 F
.526(usual operator name, for e)108 387.4 R .526
(xample **/ is the name of the compound operator corresponding to the)
-.15 F -.15(ex)108 399.4 S 1.116(ponentiation operator).15 F 6.116(.T)
-.55 G 1.117(he slash may either immediately follo)-6.116 F 3.617(wt)
-.25 G 1.117(he operator name, or blanks)-3.617 F(may interv)108 411.4 Q
(ene \(i.e. the operator name is actually composed of tw)-.15 E 2.5(os)
-.1 G(eparate tok)-2.5 E(ens\).)-.1 E .17
(The compound operator may be used in one of tw)133 427.6 R 2.669(ow)-.1
G 2.669(ays. It)-2.769 F .169(can be used as though it were a)2.669 F
.685(unary operator)108 439.6 R 3.185(.I)-.55 G 3.185(nt)-3.185 G .685
(his case, the operand must be either a set or tuple, i.e.)-3.185 F .685
(the e)5.685 F .685(xpression form is)-.15 F(one of:)108 451.6 Q
(bop / set)158 475.6 Q(bop / tuple)158 487.6 Q 1.417
(where bop is the name of the base operator)108 511.6 R 3.917(.T)-.55 G
1.417(he ef)-3.917 F 1.416
(fect is to calculate a result by applying the)-.25 F
(binary operator successi)108 523.6 Q -.15(ve)-.25 G
(ly to the elements of the set or tuple:).15 E(e1 bop e2 bop e3 bop ...)
144 547.6 Q .485(where e1,e2,e3 are successi)108 571.6 R .785 -.15(ve e)
-.25 H .485(lements of the set or tuple.).15 F .486
(In the case of a set these elements are)5.486 F .677
(in an arbitrary order)108 583.6 R 5.677(.I)-.55 G 3.176(nt)-5.677 G
.676
(he tuple case, the elements are in sequence and include unde\214ned)
-3.176 F F0(\(om\))3.176 E F1 -.25(va)108 595.6 S .828(lues from "holes\
" in the tuple. Normal usage is that in the case of sets, it only mak)
.25 F .828(es sense to)-.1 F .215(use an operator which is commutati)108
607.6 R .515 -.15(ve \()-.25 H .215
(because of the arbitrary order of the elements\). In the tuple).15 F
.739(case, the use of a non-commutati)108 619.6 R 1.039 -.15(ve o)-.25 H
.739(perator is well de\214ned although unusual. Since most opera-).15 F
.349(tors cause an error if gi)108 631.6 R -.15(ve)-.25 G 2.849(nu).15 G
.349
(nde\214ned operands, the use of a compound operator form with a tuple)
-2.849 F(operand which contains holes will usually cause an error)108
643.6 Q(.)-.55 E 1.199
(If there is only one element in the tuple or set, then this element v)
133 659.8 R 1.199(alue is returned as the)-.25 F .218
(result \(and the operator is ne)108 671.8 R -.15(ve)-.25 G 2.718(ra).15
G .217
(pplied\). If the unary compound operator form is applied to a null)
-2.718 F EP
%%Page: 65 66
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 65).1 E/F1 10/Times-Roman@0
SF(set or tuple, the result is unde\214ned \(i.e.)108 130 Q F0(om)5 E F1
(\).)A 1.485
(The other form of use of the compound operator is binary with tw)133
146.2 R 3.985(oo)-.1 G 1.485(perands. The right)-3.985 F
(operand must be a set or tuple, as in the unary case, b)108 158.2 Q
(ut the left operand may be an)-.2 E 2.5(yv)-.15 G(alue:)-2.75 E(an)158
182.2 Q 2.5(yb)-.15 G(op / set)-2.5 E(an)158 194.2 Q 2.5(yb)-.15 G
(op / tuple)-2.5 E 1.12(The ef)108 218.2 R 1.12
(fect is to include the v)-.25 F 1.12
(alue of the left operand as the \214rst operand v)-.25 F 1.12
(alue in the computed)-.25 F(sequence:)108 230.2 Q(an)144 254.2 Q 2.5
(yb)-.15 G(op e1 bop e2 bop ...)-2.5 E .146(where e1,e2,.. are elements\
 from the set or tuple operand as in the unary case. If the binary form\
 is)108 278.2 R 1.428
(applied to a null set or null tuple, then the left operand v)108 290.2
R 1.428(alue is yielded as the result. The left)-.25 F .437
(operand thus acts as an initial v)108 302.2 R .437
(alue for the computation. If the operator is commutati)-.25 F .737 -.15
(ve a)-.25 H .437(nd asso-).15 F(ciati)108 314.2 Q -.15(ve)-.25 G 2.5
(,t).15 G(hen this v)-2.5 E(alue is often the identity element, for e)
-.25 E(xample 0 in the case of addition.)-.15 E .085(The follo)133 330.4
R .085(wing e)-.25 F .084(xamples indicate some of uses of the compound\
 operator form. Note that the)-.15 F(set or tuple operand may be an e)
108 342.4 Q(xplicit set or tuple former to obtain the ef)-.15 E
(fect of a direct iteration:)-.25 E 2.5(a:)128 370.6 S/F2 10/Symbol SF
(=)-2.5 E F1 92.15(+/t; $)2.5 F(sum of elements in t,)2.5 E F0(om)2.5 E
F1(if t)2.5 E F2(=)A F1 1.666([])C 2.5(a:)128 382.6 S F2(=)-2.5 E F1
87.15(0+/t; $)2.5 F(same, b)2.5 E(ut 0 if t)-.2 E F2(=)A F1 1.666([])C
(0+/[a\(i\) * b\(i\) : i)128 394.6 Q F0(in)2.5 E F1 12.5({1..#a}] $)2.5
F(dot product)2.5 E F0(min)128 406.6 Q F1 100.5(/s $)B
(minimum element in a set)2.5 E(*/[x)128 418.6 Q F0(in)2.5 E F1 2.5
(t|x/)2.5 G F2(=)-2.5 E F1 58.01(0] $)2.5 F
(product of non-zero elements in t)2.5 E .574(If the iteration is e)108
446.8 R .574(xplicitly gi)-.15 F -.15(ve)-.25 G 3.074(nu).15 G .574
(sing a former)-3.074 F 3.074(,at)-.4 G .575
(uple former should normally be used. If a set)-3.074 F
(former is used then duplicate elements will only appear once:)108 458.8
Q(0+/{x)144 482.8 Q F0(in)2.5 E F1 2.5(t|x>0)2.5 G -.44 .22(}$ d)-2.5 H
(uplicate elements not included)-.22 E 2.702(Am)108 506.8 S .202(ore de\
tailed and precise description of the meaning of compound operator form\
s can be found)-2.702 F
(in appendix nn where a translation in terms of equi)108 518.8 Q -.25
(va)-.25 G(lent SETL code is gi).25 E -.15(ve)-.25 G(n.).15 E F0 2.5
(4.3. Assignment)108 542.8 R(Statements)2.5 E F1
(Assignment statements in SETL ha)133 559 Q .3 -.15(ve t)-.2 H
(he general form:).15 E(lhs :)144 583 Q F2(=)A F1 -.15(ex)2.5 G
(pression;).15 E .284(The e)108 607 R .284(xpression is formed from bas\
ic operands and operators as described in the pre)-.15 F .285
(vious sections.)-.25 F .832(Lhs is the tar)108 619 R .831
(get of the assignment, and has se)-.18 F -.15(ve)-.25 G .831
(ral possibilities as described later on. The semi-).15 F .135(colon at\
 the end terminates the statement and is considered to be part of it. A\
ll statements in SETL)108 631 R(are terminated by a semicolon.)108 643 Q
EP
%%Page: 66 67
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 66).1 E/F1 10/Times-Roman@0
SF .143(The basic action of an assignment statement is to compute the v)
133 130 R .142(alue represented by the right)-.25 F .82(hand side e)108
142 R .82(xpression and then to perform the assignment. The assignment \
action depends on the)-.15 F(form of the left side which has se)108 154
Q -.15(ve)-.25 G(ral dif).15 E(ferent possibilities.)-.25 E/F2 10
/Times-Italic@0 SF(Identi\214er)108 170.2 Q F1 .381
(If the left hand side is a simple identi\214er)133 182.2 R 2.881(,t)-.4
G .38(hen the result is simply to assign the v)-2.881 F .38(alue of the)
-.25 F .041(right hand side as its ne)133 194.2 R 2.541(wv)-.25 G .041
(alue, the old v)-2.791 F .041(alue being lost. This may ha)-.25 F .341
-.15(ve t)-.2 H .041(he ef).15 F .042(fect of dynam-)-.25 F
(ically changing the datatype of the identi\214er)133 206.2 Q(.)-.55 E
F2(String Slice)108 222.4 Q F1 2.512(As)133 234.4 S .011(tring slice ca\
n only be used on the left side if the corresponding right hand side is\
 a string)-2.512 F -.25(va)133 246.4 S 1.066
(lue, otherwise an error results. The ef).25 F 1.066
(fect is to modify the string v)-.25 F 1.066(alue by replacing the)-.25
F .861(selected slice with the right hand side v)133 258.4 R .86
(alue. This may cause the length of the string to be)-.25 F
(increased or decreased as sho)133 270.4 Q(wn in the follo)-.25 E
(wing e)-.25 E(xamples:)-.15 E 2.5(a:)153 298.6 S/F3 10/Symbol SF(=)-2.5
E F1('ABCDEF';)2.5 E(a\(2..4\) :)153 310.6 Q F3(=)A F1 15.85('XY'; $)2.5
F(a)2.5 E F3(=)2.5 E F1('AXYEF')2.5 E(a\(4..\) :)153 322.6 Q F3(=)A F1
15.29('1234'; $)2.5 F(a)2.5 E F3(=)2.5 E F1('AXY1234')2.5 E(a\(2\) :)153
334.6 Q F3(=)A F1 -.834('\( \)';)2.5 F 2.5($a)34.464 G F3(=)A F1 -.834
('A\( \)Y1234')2.5 F .534(As indicated in the abo)133 362.8 R .834 -.15
(ve ex)-.15 H .534(amples, the usual def).15 F .534
(aults are permitted. An error results if the)-.1 F .168(speci\214ed li\
mits do not select a de\214ned substring of the original string.)133
374.8 R .167(It is possible to spec-)5.167 F .65
(ify a null string by using a v)133 386.8 R .651(alue for the lo)-.25 F
.651(wer bound which is e)-.25 F .651(xactly one greater than the)-.15 F
(upper bound. The ef)133 398.8 Q(fect is speci\214ed by the follo)-.25 E
(wing rule:)-.25 E(a\(b)169 422.8 Q(..c\) :)-.4 E F3(=)A F1 10(dm)2.5 G
5(eans a)-10 F(:)2.5 E F3(=)A F1(a\(1..b-1\) + d + a\(c+1..#a\))2.5 E F2
-.55(Tu)108 451 S(ple Slice).55 E F1 3.363(At)133 463 S .862(uple slice\
 can be used on the left side of an assignment only if the correspondin\
g right)-3.363 F(hand side v)133 475 Q(alue is a tuple.)-.25 E(The ef)5
E(fect is similar to the use of a string slice on the left side:)-.25 E
2.5(t:)153 503.2 S F3(=)-2.5 E F1([10,20,30,40];)2.5 E(t[2..2] :)153
515.2 Q F3(=)A F1 18.34([5,6,7]; $)2.5 F(t)2.5 E F3(=)2.5 E F1
([10,5,6,7,30,40])2.5 E(t[3..] :)153 527.2 Q F3(=)A F1 30.84([7,8]; $)
2.5 F(t)2.5 E F3(=)2.5 E F1([10,5,7,8])2.5 E(t[1..2] :)153 539.2 Q F3(=)
A F1 1.666([])2.5 G 39.174(;$)-1.666 G(t)-36.674 E F3(=)2.5 E F1([7,8])
2.5 E F2 -.55(Tu)108 559.6 S(ple Selection).55 E F1 2.691(At)133 571.6 S
.191(uple selection as a left side for an assignment allo)-2.691 F .191
(ws a single speci\214ed element of a tuple)-.25 F(to be modi\214ed:)133
583.6 Q 2.5(t:)153 611.8 S F3(=)-2.5 E F1([10,20,30,40];)2.5 E(t\(2\) :)
153 623.8 Q F3(=)A F1 45(15; $)2.5 F(t)2.5 E F3(=)2.5 E F1
([10,15,30,40])2.5 E(t\(4\) :)153 635.8 Q F3(=)A F0(om)2.5 E F1 44.17
(;$)C(t)-41.67 E F3(=)2.5 E F1([10,15,30])2.5 E EP
%%Page: 67 68
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 67).1 E/F1 10/Times-Roman@0
SF(t\(6\) :)153 130 Q/F2 10/Symbol SF(=)A F1 50(5; $)2.5 F(t)2.5 E F2(=)
2.5 E F1([10,15,30,)2.5 E F0(om,om)A F1(,5])A 1.007(As sho)133 158.2 R
1.007(wn in the abo)-.25 F 1.307 -.15(ve ex)-.15 H 1.007
(amples, the assignment may cause the length to decrease \(if the).15 F
.253(last element is assigned the v)133 170.2 R(alue)-.25 E F0(om)2.754
E F1 .254(\), or increase \(if an assignment is made to a pre)B(viously)
-.25 E(non-e)133 182.2 Q(xistent element\).)-.15 E/F3 10/Times-Italic@0
SF -.55(Tu)108 198.4 S(ple).55 E F1 .246(An enumerated tuple can be use\
d as a left hand side of an assignment if each element of the)2.77 F
.178(enumeration is itself a v)133 210.4 R .179(alid left hand side.)
-.25 F .179(The corresponding right hand side must itself be)5.179 F
4.438(at)133 222.4 S 1.937(uple and the ef)-4.438 F 1.937
(fect is to perform a series of assignments using corresponding v)-.25 F
(alues)-.25 E -.15(ex)133 234.4 S
(tracted from the right hand side tuple.).15 E 2.5(a:)153 262.6 S F2(=)
-2.5 E F1([10,20];)2.5 E([b,c] :)153 274.6 Q F2(=)A F1 27.78(a; $)2.5 F
(b)2.5 E F2(=)2.5 E F1(10, c)2.5 E F2(=)2.5 E F1(20)2.5 E([x,y] :)153
286.6 Q F2(=)A F1 12.5([2,3]; $)2.5 F(x)2.5 E F2(=)2.5 E F1(2, y)2.5 E
F2(=)2.5 E F1(3)2.5 E([c,d] :)153 298.6 Q F2(=)A F1 13.62([d,c]; $)2.5 F
(interchanges c,d)2.5 E .712(The last e)133 326.8 R .712(xample w)-.15 F
.713(orks because the right hand side is e)-.1 F -.25(va)-.25 G .713
(luated \214rst, forming a tuple with).25 F(copies of the old v)133
338.8 Q(alues of c and d before the assignment is made.)-.25 E .511
(It is permissible for the tuple on the right to be longer \(e)133 355 R
.511(xtra v)-.15 F .511(alues are ignored\), or shorter)-.25 F F0(\(om)
108 367 Q F1 1.651 -.55('s a)D .552(re supplied\) than the tuple on the\
 left. It is also possible to use a minus sign as one of the).55 F(comp\
onents of the left side tuple, indicating that the corresponding assign\
ment should be skipped:)108 379 Q([a,b,c] :)128 407.2 Q F2(=)A F1 35.49
([1,2]; $)2.5 F(a)2.5 E F2(=)2.5 E F1(1, b)2.5 E F2(=)2.5 E F1(2, c)2.5
E F2(=)2.5 E F0(om)2.5 E F1([a,b] :)128 419.2 Q F2(=)A F1 19.93
([10,20,30]; $)2.5 F(a)2.5 E F2(=)2.5 E F1(10, b)2.5 E F2(=)2.5 E F1(20)
2.5 E([a,)128 431.2 Q F2(-)A F1(,c] :)A F2(=)A F1 12.5([10,20,30]; $)2.5
F(a)2.5 E F2(=)2.5 E F1(10, c)2.5 E F2(=)2.5 E F1(30)2.5 E 2.552(As)108
459.4 S .052(pecial case occurs when the right hand side is)-2.552 F F0
(om.)2.552 E F1 .051(The ef)5.051 F .051
(fect if to unde\214ne all the left side v)-.25 F(al-)-.25 E(ues:)108
471.4 Q([a,b,c] :)144 495.4 Q F2(=)A F0(om)2.5 E F1 2.5($a)27.5 G F2(=)A
F1(b)2.5 E F2(=)2.5 E F1(c)2.5 E F2(=)2.5 E F0(om)2.5 E F3(Single V)108
523.6 Q(alued Map Refer)-1.11 E(ence)-.37 E F1 .743(If a single v)133
535.6 R .743(alued map reference is used as a left side, then the ef)
-.25 F .743(fect is to remo)-.25 F 1.044 -.15(ve t)-.15 H .744(he pair)
.15 F .135(which starts with the speci\214ed domain v)133 547.6 R .135
(alue \(if it is already present\), and add the pair corre-)-.25 F
(sponding to the ne)133 559.6 Q 2.5(wv)-.25 G(alue.)-2.75 E 2.5(m:)153
587.8 S F2(=)-2.5 E F1({[1,2], [2,4], [3,5]};)2.5 E(m\(1\) :)153 599.8 Q
F2(=)A F1 72.92(5; $)2.5 F(m)2.5 E F2(=)2.5 E F1({[1,5], [2,4], [3,5]})
2.5 E(m\(4\) :)153 611.8 Q F2(=)A F1 72.92(9; $)2.5 F(m)2.5 E F2(=)2.5 E
F1({[1,5], [2,4], [3,5], [4,9]})2.5 E(If the right hand side is)133 640
Q F0(om,)2.5 E F1(then the pair is still remo)2.5 E -.15(ve)-.15 G(d, b)
.15 E(ut no pair is added:)-.2 E(m\(2\) :)169 664 Q F2(=)A F0(om)2.5 E
F1 59.18(;$)C(m)-56.68 E F2(=)2.5 E F1({[1,5], [3,5], [4,9]})2.5 E EP
%%Page: 68 69
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 68).1 E/F1 10/Times-Roman@0
SF .177(An error results if the original set v)133 130 R .177
(alue is not a single v)-.25 F .178(alued map, i.e. if it contains an)
-.25 F 2.678(ye)-.15 G(le-)-2.678 E(ment which is not a tw)133 142 Q 2.5
(oe)-.1 G(lement tuple, or if tw)-2.5 E 2.5(op)-.1 G(airs ha)-2.5 E .3
-.15(ve t)-.2 H(he same \214rst element v).15 E(alue.)-.25 E/F2 10
/Times-Italic@0 SF(Multi-V)108 158.2 Q(alued Map Refer)-1.11 E(ence)-.37
E F1 .129(If a multi-v)133 170.2 R .128
(alued map reference is used as a left side, then the ef)-.25 F .128
(fect is to remo)-.25 F .428 -.15(ve a)-.15 H .128(ll e).15 F(xisting)
-.15 E 1.107(pairs starting with the speci\214ed domain element, and ad\
d the set of pairs speci\214ed by the)133 182.2 R(right side v)133 194.2
Q(alue:)-.25 E 2.5(m:)169 218.2 S/F3 10/Symbol SF(=)-2.5 E F1
({[1,1],[1,2],[2,4]};)2.5 E(m{1} :)169 230.2 Q F3(=)A F1 44.97({3,4}; $)
2.5 F(m)2.5 E F3(=)2.5 E F1({[1,3],[1,4],[2,4]})2.5 E 1.221
(If the right hand side is not a set, or if the left side set v)133
254.2 R 1.221(alue is not a map, then an error)-.25 F(results. If the r\
ight hand side is the null set, then no pairs are added:)133 266.2 Q
(m{1} :)169 290.2 Q F3(=)A F1 1.666({})2.5 G 58.304(;$)-1.666 G(m)
-55.804 E F3(=)2.5 E F1({[2,4]})2.5 E EP
%%Page: 69 70
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 69).1 E/F1 10
/Times-Italic@0 SF(Multiple Subscripting)108 130 Q/F2 10/Times-Roman@0
SF(In the abo)133 142 Q .3 -.15(ve ex)-.15 H
(amples of subscript forms on the left side:).15 E(\(x..y\))243.47 170.2
Q F1(String slice)15 E F2(\(x..y\))243.47 182.2 Q F1 -.55(Tu)15 G
(ple slice).55 E F2(\(x\))243.47 194.2 Q F1 -.55(Tu)25 G(ple selection)
.55 E F2(\(x\))243.47 206.2 Q F1(Single valued map r)25 E(efer)-.37 E
(ence)-.37 E F2({x})243.47 218.2 Q F1(Multi-valued map r)22.06 E(efer)
-.37 E(ence)-.37 E F2 1.13(the subscripted quantity w)108 238.6 R 1.131
(as a simple identi\214er)-.1 F 3.631(.S)-.55 G 1.131
(ETL actually permits this quantity to be itself)-3.631 F(an)108 250.6 Q
2.867(yv)-.15 G .367(alid left hand side. The meaning of such a compoun\
d assignment is described by the follo)-3.117 F(w-)-.25 E(ing equi)108
262.6 Q -.25(va)-.25 G(lence, where \(x\) stands for an).25 E 2.5(yo)
-.15 G 2.5(ft)-2.5 G(he abo)-2.5 E .3 -.15(ve s)-.15 H(ubscript forms:)
.15 E(lhs\(x\) :)158 286.6 Q/F3 10/Symbol SF(=)A F2(y;)2.5 E(means)108
310.6 Q(t0 :)158 334.6 Q F3(=)A F2(lhs;)2.5 E(t0\(x\) :)158 346.6 Q F3
(=)A F2(y;)2.5 E(lhs :)158 358.6 Q F3(=)A F2(t0;)2.5 E .48
(Since the lhs may itself ha)108 374.8 R .78 -.15(ve c)-.2 H .481
(ompound form, this de\214nition is recursi).15 F -.15(ve)-.25 G 2.981
(,a).15 G .481(nd the third line of the)-2.981 F
(translation may itself need e)108 386.8 Q(xpanding.)-.15 E .242
(Although this de\214nition seems comple)133 403 R .241
(x, its aim is actually simple. The object of the assign-)-.15 F .058
(ment statement is to mak)108 415 R 2.558(et)-.1 G .058(he left side ha)
-2.558 F .358 -.15(ve t)-.2 H .058(he appropriate v).15 F .058
(alue after the assignment is complete,)-.25 F(and this ef)108 427 Q
(fect is achie)-.25 E -.15(ve)-.25 G 2.5(de).15 G -.15(ve)-2.75 G 2.5
(ni).15 G 2.5(nc)-2.5 G(omple)-2.5 E 2.5(xc)-.15 G(ases by the abo)-2.5
E .3 -.15(ve r)-.15 H(ule.).15 E F1(Multi-variable Map Refer)108 443.2 Q
(ences)-.37 E F2 .699
(The same short hand notations for dealing with maps of more than one v)
133 455.2 R .698(ariable which can)-.25 F 2.079(appear in e)133 467.2 R
2.079(xpressions are also permitted as left hand sides of assignments w\
ith similar)-.15 F(meaning:)133 479.2 Q(a\(b,c..n\) :)153 507.4 Q F3(=)A
F2 15.44(x; $)2.5 F(means a\([b,c..n]\) :)2.5 E F3(=)A F2(x;)2.5 E
(a{b,c..n} :)153 519.4 Q F3(=)A F2 12.5(x; $)2.5 F(means a{[b,c..n]} :)
2.5 E F3(=)A F2(x;)2.5 E F0 2.5(4.3.1. Assigning)108 539.8 R(Operatoss)
2.5 E F2 -.15(Fo)133 556 S 3.908(re).15 G 1.408
(ach de\214ned binary operator)-3.908 F 3.908(,i)-.4 G 1.407
(ncluding user de\214ned operators introduced with an)-3.908 F F0(op)
3.907 E F2 1.117(statement, there is a corresponding assigning operator)
108 568 R 3.617(,w)-.4 G 1.117(hose name is formed by appending the)
-3.617 F .117(characters :)108 580 R F3(=)A F2 .117
(to the operator name. The ef)2.617 F .116
(fect of such an operator is to perform the usual computa-)-.25 F .804(\
tion and then assign the result back to the left operand, which must th\
erefore ha)108 592 R 1.105 -.15(ve t)-.2 H .805(he form of a).15 F -.25
(va)108 604 S .073(lid assignment left hand side. Most often these assi\
gning operators are used directly in statement).25 F
(forms as in the follo)108 616 Q(wing e)-.25 E(xamples:)-.15 E EP
%%Page: 70 71
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 70).1 E/F1 10/Times-Roman@0
SF(a)128 130 Q F0(max)2.5 E F1(:)A/F2 10/Symbol SF(=)A F1 13.62(5; $)2.5
F(set a to maximum of current v)2.5 E(alue and 5)-.25 E(b)128 142 Q F0
(with)2.5 E F1(:)A F2(=)A F1 12.5(6; $)2.5 F
(adds the element 6 to the set b)2.5 E 2.5(i+)128 154 S(:)-2.5 E F2(=)A
F1 27.97(1; $)2.5 F(increment inte)2.5 E(ger v)-.15 E(alue of i by one)
-.25 E .35(It is also possible to use assigning operators within an e)
108 182.2 R .351(xpression, in which case the v)-.15 F .351
(alue yielded)-.25 F
(is the computed result and the assignment occurs as a side ef)108 194.2
Q(fect:)-.25 E(a\(i+:)128 222.4 Q F2(=)A F1(1\) :)A F2(=)A F1 12.5(5; $)
2.5 F(increment i by 1, assign i')2.5 E(th element)-.18 E .145(The assi\
gnment operator itself is a special case of an assigning operator and t\
hus may also be used)108 250.6 R(within an e)108 262.6 Q
(xpression, the v)-.15 E(alue being the assigned result:)-.25 E(a:)128
290.8 Q F2(=)A F1(b:)A F2(=)A F1 22.58(1; $)B(multiple assignment, a)2.5
E F2(=)2.5 E F1(b)2.5 E F2(=)2.5 E F1(1)2.5 E(a:)128 302.8 Q F2(=)A F1
(3+c:)A F2(=)A F1 12.5(5; $)B(c)2.5 E F2(=)2.5 E F1(5, a)2.5 E F2(=)2.5
E F1(8)2.5 E .849(The follo)108 331 R .849(wing special assigning opera\
tors modify both their operands which must therefore both)-.25 F(ha)108
343 Q 1.129 -.15(ve t)-.2 H .829(he form of v).15 F .828
(alid assignment left hand sides. It is not possible to append :)-.25 F
F2(=)A F1 .828(to an)3.328 F 3.328(yo)-.15 G 3.328(ft)-3.328 G(hese)
-3.328 E(operator names, nor is it possible to form compound operator f\
orms by appending a slash.)108 355 Q(lhs)108 371.2 Q F0(fr)2.5 E(om)-.18
E F1 58.8(set an)2.5 F .321
(arbitrary element \(in the same sense as the)2.82 F F0(arb)2.821 E F1
.321(operator\) is selected)2.821 F .205
(from the right hand set operand if it is non-null.)218 383.2 R .204
(This v)5.204 F .204(alue is assigned)-.25 F .642(as the ne)218 395.2 R
3.143(wv)-.25 G .643(alue of lhs. The right operand is assigned a ne)
-3.393 F 3.143(ws)-.25 G .643(et v)-3.143 F(alue)-.25 E 1.311
(consisting of the old set v)218 407.2 R 1.311
(alue less the selected element.)-.25 F 1.31(If the right)6.311 F 1.283
(operand is the null set, then the lhs is set to unde\214ned)218 419.2 R
F0(\(om\))3.784 E F1 1.284(and the)3.784 F(right operand v)218 431.2 Q
(alue is unchanged.)-.25 E(lhs)108 447.4 Q F0(fr)2.5 E(omb)-.18 E F1
44.35(tuple If)2.5 F 1.006(the right operand is not the null tuple, the\
n the \214rst element of the)3.506 F .54(tuple \(i.e. the element inde)
218 459.4 R -.15(xe)-.15 G 3.04(db).15 G 3.04(yt)-3.04 G .54(he inde)
-3.04 F 3.04(xv)-.15 G .54(alue 1\) is assigned as the)-3.29 F -.25(va)
218 471.4 S .822(lue of lhs, and the right operand is assigned a ne).25
F 3.322(wt)-.25 G .822(uple v)-3.322 F .822(alue con-)-.25 F .919
(sisting of the remaining elements of the tuple.)218 483.4 R .919
(If the right operand is)5.919 F .891
(the null tuple, then lhs is set to unde\214ned)218 495.4 R F0(\(om\))
3.391 E F1 .89(and the right operand)3.391 F -.25(va)218 507.4 S
(lue is unchanged.).25 E(lhs)108 523.6 Q F0(fr)2.5 E(omb)-.18 E F1 41.57
(string If)2.5 F .451(the right operand is not the null string, then th\
e \214rst character of the)2.951 F 2.62(string is assigned as the v)218
535.6 R 2.619(alue of lhs, and the right operand is is)-.25 F 1.1
(assigned a ne)218 547.6 R 3.6(ws)-.25 G 1.1(tring v)-3.6 F 1.1
(alue consisting of the remaining characters of)-.25 F .271(the string.\
 If the right operand is the null string, then lhs is set to unde-)218
559.6 R(\214ned)218 571.6 Q F0(\(om\))2.5 E F1(and the right operand v)
2.5 E(alue is unchanged.)-.25 E(lhs)108 587.8 Q F0(fr)2.5 E(ome)-.18 E
F1 45.47(tuple If)2.5 F 1.125
(the right operand is not the null tuple, then the last element of the)
3.625 F .152(tuple is assigned as the v)218 599.8 R .151
(alue of lhs, and the right operand is assigned a)-.25 F(ne)218 611.8 Q
2.685(wt)-.25 G .185(uple v)-2.685 F .186(alue obtained by remo)-.25 F
.186(ving the last element \(i.e. setting it to)-.15 F 4.374
(unde\214ned\). If)218 623.8 R 1.873
(the right operand is the null tuple, then lhs is set to)4.373 F
(unde\214ned)218 635.8 Q F0(\(om\))2.5 E F1(and the right operand v)2.5
E(alue is unchanged.)-.25 E(lhs)108 652 Q F0(fr)2.5 E(ome)-.18 E F1
42.69(string If)2.5 F .571(the right operand is not the null string, th\
en the last character of the)3.07 F .483(string is assigned as the v)218
664 R .483(alue of lhs, and the right operand is assigned)-.25 F EP
%%Page: 71 72
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 71).1 E/F1 10/Times-Roman@0
SF 3.272(an)218 130 S 1.272 -.25(ew s)-3.272 H .772(tring v).25 F .773
(alue consisting of the remaining characters.)-.25 F .773(If the right)
5.773 F 1.617
(operand is the null string, then lhs is set to unde\214ned)218 142 R F0
(\(om\))4.117 E F1 1.616(and the)4.117 F(right operand v)218 154 Q
(alue is unchanged.)-.25 E F0 2.5(4.3.2. Quanti\214ed)108 170.2 R -.92
(Te)2.5 G(sts).92 E F1 1.12(Quanti\214ed tests are special e)133 186.4 R
1.121(xpression forms yielding a boolean result \(TR)-.15 F 1.121
(UE or F)-.4 F(ALSE\))-.74 E .779
(and which therefore can be used in conte)108 198.4 R .779
(xts requiring a test.)-.15 F .778(Quanti\214ed tests in)5.778 F -.2(vo)
-.4 G(lv).2 E 3.278(ea)-.15 G 3.278(ni)-3.278 G(mplied)-3.278 E
(loop and appear in three forms:)108 210.4 Q F0(exists)158 234.4 Q F1
(iterator | test)2.5 E F0(notexists)158 246.4 Q F1(iterator | test)2.5 E
F0 -.25(fo)158 258.4 S(rall).25 E F1(iterator | test)2.5 E 1.09(The syn\
tax and interpretation of the iterator is further described in the sect\
ion on iterator forms)108 282.4 R .285(which appears in the ne)108 294.4
R .285(xt chapter)-.15 F 2.785(.A)-.55 G 2.785(si)-2.785 G .285
(ndicated, the iterator must contain a such that test preceded)-2.785 F
(by the | character \(or the equi)108 306.4 Q -.25(va)-.25 G(lent).25 E
F0(st)2.5 E F1 -.1(ke)2.5 G(yw)-.05 E(ord\).)-.1 E
(In each case, the iterator causes an implied loop to be e)133 322.6 Q
-.15(xe)-.15 G(cuted.).15 E .105(In the case of the)133 338.8 R F0
(exists)2.606 E F1 .106(test, the result is TR)2.606 F .106
(UE if the test succeeds \(yields TR)-.4 F .106(UE\) on an)-.4 F 2.606
(yo)-.15 G(f)-2.606 E .537(the loops. As soon as the test succeeds, the\
 iteration is abandoned \(lea)108 350.8 R .536(ving an)-.2 F 3.036(yi)
-.15 G .536(teration v)-3.036 F(ariables)-.25 E .303(set to the v)108
362.8 R .303
(alues for which the test succeeded\) and the result of the e)-.25 F
.303(xpression is TR)-.15 F .304(UE. If the test)-.4 F -.1(fa)108 374.8
S .803(ils for all loops, or if the loop is not e).1 F -.15(xe)-.15 G
.803(cuted at all, then the result is F).15 F .803
(ALSE and the iteration)-.74 F -.25(va)108 386.8 S .631(riables, if an)
.25 F 1.932 -.65(y, a)-.15 H .632(re set to unde\214ned.).65 F(The)5.632
E F0(notexists)3.132 E F1 .632(form e)3.132 F -.15(xe)-.15 G .632
(cutes the same test loop, b).15 F .632(ut yields)-.2 F(TR)108 398.8 Q
(UE if the test ne)-.4 E -.15(ve)-.25 G 2.5(rs).15 G(ucceeds and F)-2.5
E(ALSE if the test does succeed one some iteration.)-.74 E F0(if exists)
128 427 Q F1(i)2.5 E F0(in)2.5 E F1([1..#t] | t\(i\) /)2.5 E/F2 10
/Symbol SF(=)A F1(0)2.5 E F0(then)2.5 E F1 129.56(... $)133 439 R
(with i)2.5 E F2(=)2.5 E F1(1st non-zero element in t)2.5 E F0(else)128
451 Q F1 129.56(... $)133 463 R(if no non-zero elements, i)2.5 E F2(=)
2.5 E F0(om)2.5 E(end if;)128 475 Q(if notexists)128 499 Q F1([a,b])2.5
E F0(in)2.5 E F1 2.5(m|a)2.5 G F2(=)-2.5 E F1(b)A F0(then)2.5 E F1
129.56(... $)133 511 R(if no such element, a)2.5 E F2(=)A F1(b)A F2(=)A
F0(om)2.5 E(else)128 523 Q F1 129.56(... $)133 535 R
(a,b set to element with a)2.5 E F2(=)A F1(b)A F0(end if)128 547 Q F1(;)
A(The)108 575.2 Q F0 -.25(fo)2.954 G(rall).25 E F1 .454
(test also sets up a loop. F)2.954 F .454
(or each iteration of the loop, the speci\214ed test is e)-.15 F -.25
(va)-.25 G .453(luated. If).25 F .349(this test yields F)108 587.2 R
.349(ALSE on an)-.74 F 2.849(yi)-.15 G .349
(teration of the loop, then e)-2.849 F -.25(va)-.25 G .35
(luation of the loop is immediately ter).25 F(-)-.2 E .366
(minated, the result of the)108 599.2 R F0 -.25(fo)2.866 G(rall).25 E F1
.366(test is F)2.866 F .366(ALSE, and the loop v)-.74 F .366
(ariables, if an)-.25 F 1.666 -.65(y, a)-.15 H .365(re left with the v)
.65 F(al-)-.25 E .066(ues causing the test to f)108 611.2 R .067
(ail. If the loop terminates with the test condition e)-.1 F -.25(va)
-.25 G .067(luating to TR).25 F .067(UE for all)-.4 F .882
(iterations, then the result of the)108 623.2 R F0 -.25(fo)3.382 G(rall)
.25 E F1 .882(test is TR)3.382 F 3.382(UE. A)-.4 F .881
(special case of this last rule arises when)3.382 F
(there are no iterations \(e.g. a test on a null set\). Such a test al)
108 635.2 Q -.1(wa)-.1 G(ys returns a result of TR).1 E(UE.)-.4 E EP
%%Page: 72 73
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 72).1 E(if f)128 130 Q
(orall)-.25 E/F1 10/Times-Roman@0 SF(i)2.5 E F0(in)2.5 E F1
([1..#t-1] | t\(i\) < t\(i+1\))2.5 E F0(then)2.5 E F1 157.19(... $)133
142 R(tuple elements are sorted, i)2.5 E/F2 10/Symbol SF(=)A F0(om)2.5 E
(else)128 154 Q F1 157.19(... $)133 166 R 2.5(ii)2.5 G 2.5(si)-2.5 G
(nde)-2.5 E 2.5(xo)-.15 G 2.5(fo)-2.5 G(ut of order pair)-2.5 E F0
(end if)128 178 Q F1(;)A(if forall x)128 202 Q F0(in)2.5 E F1(s, y)2.5 E
F0(in)2.5 E F1 2.5(s|\()2.5 G 2.5(x.)-2.5 G F0(op)-2.5 E F1(y\))2.5 E F0
(in)2.5 E F1(s)2.5 E F0(then)2.5 E F1 157.19(... $)133 214 R 2.5(si)2.5
G 2.5(sc)-2.5 G(losed under operator .)-2.5 E F0(op)A(else)128 226 Q F1
157.19(... $)133 238 R(x,y set to counter e)2.5 E(xample)-.15 E F0
(end if)128 250 Q F1(;)A .513
(It is possible to use these quanti\214ed test forms as parts of lar)108
270.4 R .513(ger e)-.18 F .513(xpressions, b)-.15 F .513
(ut parenthesization)-.2 F(is required e)108 282.4 Q(xcept when a quant\
i\214ed test is used as the test in another quanti\214ed test:)-.15 E F0
(exists)118 310.6 Q F1(a)2.5 E F0(in)2.5 E F1 2.5(x|c)2.5 G(\(a\))-2.5 E
F0(and)2.5 E F1(d\(a\))2.5 E F0(exists)118 322.6 Q F1(a)2.5 E F0(in)2.5
E F1 2.5(x|\()2.5 G(c\(a\))-2.5 E F0(and)2.5 E F1 119.71(d\(a\)\) $)2.5
F(means the same)2.5 E(\()118 334.6 Q F0(exists)A F1(a)2.5 E F0(in)2.5 E
F1 2.5(x|c)2.5 G(\(a\)\))-2.5 E F0(and)2.5 E F1
(d\(a\) $ to get the other meaning)2.5 E F0(if exists)158 362.8 Q F1(a)
2.5 E F0(in)2.5 E F1 2.5(c|)2.5 G F0(exists)178 374.8 Q F1(b)2.5 E F0
(in)2.5 E F1 2.5(x|)2.5 G F0 -.25(fo)198 386.8 S(rall).25 E F1(y)2.5 E
F0(in)2.5 E F1 2.5(z:)2.5 G F0(exists)218 398.8 Q F1(r)2.5 E F0(in)2.5 E
F1 2.5(s|a)2.5 G F2(=)A F1(r)2.5 E F0(then)2.5 E F1(...)2.5 E F0 2.5
(4.3.3. Operator)108 422.8 R(Pr)2.5 E(ecedence Rules)-.18 E F1 .292
(The table in this section sho)133 439 R .292
(ws the precedence rules which determine the order in which the)-.25 F
.734(operators in an e)108 451 R .734(xpression are e)-.15 F -.25(va)
-.25 G .735(luated. If tw).25 F 3.235(oo)-.1 G .735
(perators share a common operand, then the one)-3.235 F .372
(with the higher precedence is e)108 463 R -.25(va)-.25 G .371
(luated \214rst. If both operators ha).25 F .671 -.15(ve t)-.2 H .371
(he same precedence, then the).15 F 1.135(left hand one is e)108 475 R
-.25(va)-.25 G 1.135(luated \214rst \(i.e. operators of a gi).25 F -.15
(ve)-.25 G 3.635(np).15 G 1.135(recedence le)-3.635 F -.15(ve)-.25 G
3.636(la).15 G 1.136(re e)-3.636 F -.25(va)-.25 G 1.136
(luated in a left).25 F(associati)108 487 Q .3 -.15(ve m)-.25 H(anner)
.15 E(.\))-.55 E -.15(Pa)133 503.2 S .565(rentheses may be used freely \
to emphasize or alter the order of operations as determined).15 F
(by this table.)108 515.2 Q EP
%%Page: 73 74
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 73).1 E/F1 10
/Times-Italic@0 SF(Pr)202.26 130 Q 12.5(ecedence Oper)-.37 F(ator)-.15 E
(s)-.1 E .4 LW 248.53 134.5 202.26 134.5 DL 202.26 136.5 248.53 136.5 DL
/F2 10/Times-Roman@0 SF 48.77(11 :)202.26 146 R/F3 10/Symbol SF(=)A F2
(\(on left side\))2.5 E(assigning operators \(on left side\))263.53 158
Q F0(fr)263.53 170 Q(om)-.18 E F2(\(both sides\))2.5 E 48.77(10 All)
202.26 194 R(unary operators e)2.5 E(xcept)-.15 E F0(not)263.53 206 Q F2
(and the)2.5 E 323.25 206 318.25 206 DL F0(is)311.58 206 Q F2
(xx operators.)5 E 56.27(9*)202.26 230 S(*)-56.27 E 56.27(8*)202.26 254
S(/)-51.27 E F0(mod di)5 E(v)-.1 E F2 56.27(7+)202.26 278 S F3(-)-53.77
E F2 56.27(6U)202.26 302 S(ser de\214ned binary operators)-56.27 E(5)
202.26 326 Q F3(=)56.27 E F2(/)2.5 E F3(=)A F2 2.5(<<)2.5 G F3(=)-2.5 E
F2 2.5(>>)2.5 G F3(=)-2.5 E F0(in notin subset incs)2.5 E F2(4)202.26
350 Q F0(not)56.27 E F2(and the)2.5 E 323.25 350 318.25 350 DL F0(is)
311.58 350 Q F2(xx operators)5 E(3)202.26 374 Q F0(and)56.27 E F2(2)
202.26 398 Q F0(or)56.27 E F2(1)202.26 422 Q F0(impl)56.27 E F2 56.27
(0:)202.26 446 S F3(=)-56.27 E F2(\(on right side\))2.5 E
(assigning operators \(on right side\))263.53 458 Q .053(The follo)108
490.4 R .053(wing e)-.25 F .053(xamples of equi)-.15 F -.25(va)-.25 G
.053(lent e).25 F .054
(xpressions with and without parentheses illustrate the oper)-.15 F(-)
-.2 E(ation of these rules:)108 502.4 Q 2.5(a+b+c*d)158 526.4 S
(\(a + b\) + \(c * d\))158 538.4 Q 2.5(a+b+)158 562.4 S(:)-2.5 E F3(=)A
F2(c)2.5 E F0(di)2.5 E(v)-.1 E F2(d)2.5 E 2.5(a+\()158 574.4 S 2.5(b+)
-2.5 G(:)-2.5 E F3(=)A F2(\(c)2.5 E F0(di)2.5 E(v)-.1 E F2(d\)\))2.5 E
2.5(a+)158 598.4 S F0(ceil)A F2 2.5(b:)2.5 G F3(=)-2.5 E F2(c)2.5 E 2.5
(a+\()158 610.4 S F0(ceil)-2.5 E F2(\(b :)2.5 E F3(=)A F2(c\)\))2.5 E
.781
(Compound operators used in the unary form \(with no left operand\) ha)
108 634.4 R 1.081 -.15(ve t)-.2 H .781(he same precedence as).15 F .42
(other unary operators.)108 646.4 R .421
(Compound operators used in the binary form ha)5.42 F .721 -.15(ve t)-.2
H .421(he same precedence as).15 F(the operator from which the)108 658.4
Q 2.5(ya)-.15 G(re constructed.)-2.5 E EP
%%Page: 74 75
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 4)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 74).1 E/F1 10/Times-Roman@0
SF 1.061(The precedence rules also e)133 130 R 1.061
(xclude the use of quanti\214ed tests as operands of an)-.15 F 3.56(yo)
-.15 G(perator)-3.56 E(,)-.4 E .105(unless the)108 142 R 2.605(ya)-.15 G
.106(re enclosed in parentheses. The only case in which a quanti\214ed \
test can appear as part)-2.605 F(of a lar)108 154 Q(ger e)-.18 E(xpress\
ion is when one test appears as the iterator test of another quanti\214\
ed test.)-.15 E F0 2.5(4.3.4. Side)108 178 R(Effects)2.5 E F1 1.819
(The f)133 194.2 R 1.819
(act that assigning operators can be used within e)-.1 F 1.818
(xpressions gi)-.15 F -.15(ve)-.25 G 4.318(sr).15 G 1.818
(ise to questions)-4.318 F(about possible orders of side ef)108 206.2 Q
(fects. F)-.25 E(or e)-.15 E(xample, what is the v)-.15 E(alue of the e)
-.25 E(xpression:)-.15 E(\(i +:)144 230.2 Q/F2 10/Symbol SF(=)A F1
(3\) + i + \(i :)2.5 E F2(=)A F1(5\))2.5 E(and what is the v)108 254.2 Q
(alue of i after computing this e)-.25 E(xpression?)-.15 E 1.541(SETL d\
eals with this question by specifying that the order of operations with\
in a single)133 270.4 R -.15(ex)108 282.4 S 2.27
(pression is unpredictable. This means that an).15 F 4.77(ye)-.15 G 2.27
(xpression ha)-4.92 F 2.27(ving side ef)-.2 F 2.27(fects whose result)
-.25 F .253(depends on the order in which the v)108 294.4 R .253
(arious parts of the e)-.25 F .253(xpression are e)-.15 F -.25(va)-.25 G
.253(luated gi).25 F -.15(ve)-.25 G 2.754(sa).15 G 2.754(nu)-2.754 G
(nde\214ned)-2.754 E(result.)108 306.4 Q .758
(In general, the use of multiple assignments to the same v)133 322.6 R
.758(ariable within a single e)-.25 F(xpression)-.15 E .042(may gi)108
334.6 R .342 -.15(ve r)-.25 H .042
(ise to such an unde\214ned result and should be a).15 F -.2(vo)-.2 G
.043(ided. It is also risk).2 F 2.543(yt)-.15 G 2.543(oa)-2.543 G .043
(ssign a v)-2.543 F .043(alue to)-.25 F 4.058(av)108 346.6 S 1.558
(ariable in one part of an e)-4.308 F 1.558
(xpression and reference this same v)-.15 F 1.557
(ariable in another part of the)-.25 F -.15(ex)108 358.6 S
(pression which may be e).15 E -.25(va)-.25 G
(luated before or after the assignment.).25 E .255
(Another case of possible side ef)133 374.8 R .255
(fects arises in connection with the left operand of an assign-)-.25 F
(ing operator which has a side ef)108 386.8 Q
(fect itself, typi\214ed by the follo)-.25 E(wing question:)-.25 E
(a\(x\)+:)144 410.8 Q F2(=)A F1 2.5(1m)C(eans a\(x\):)-2.5 E F2(=)A F1
(a\(x\)+1)A(Ho)108 434.8 Q 2.5(wm)-.25 G(an)-2.5 E 2.5(yt)-.15 G
(imes does a\(j+:)-2.5 E F2(=)A F1(1\)+:)A F2(=)A F1 2.5(1i)C
(ncrement j?)-2.5 E .794(The rule follo)133 451 R .793(wed here is that\
 the result is unde\214ned if the answer to the question matters,)-.25 F
.99(that is if the result of the assignment, or the resulting v)108 463
R .991(alue of an)-.25 F 3.491(yi)-.15 G .991
(denti\214ers assigned as a side)-3.491 F(ef)108 475 Q .225
(fect, depends on whether there are one or tw)-.25 F 2.725(oe)-.1 G -.25
(va)-2.975 G .225(luations, then the result is unde\214ned.).25 F .225
(Thus the)5.225 F(assignment a\(j+:)108 487 Q F2(=)A F1(1\)+:)A F2(=)A
F1 2.5(1i)C 2.5(si)-2.5 G -1.95 -.4(nv a)-2.5 H(lid.).4 E 1.041
(The purpose of making all these nasty cases unde\214ned is to gi)133
503.2 R 1.342 -.15(ve t)-.25 H 1.042(he compiler freedom to).15 F .087
(choose the easiest or most ef)108 515.2 R .087
(\214cient translation without being hampered by w)-.25 F .087
(orrying about peculiar)-.1 F .301
(cases which do not occur in practice. The programmer')108 527.2 R 2.801
(sj)-.55 G .301(ob in this respect is to a)-2.801 F -.2(vo)-.2 G .302
(id "trick).2 F .302(y" use)-.15 F(of side ef)108 539.2 Q(fects and mak)
-.25 E 2.5(es)-.1 G(ure that these cases do not appear at all!)-2.5 E EP
%%Page: 75 76
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(CHAPTER 5)270.666 132.4 R(CONTR)234.444 175.6 Q
(OL ST)-.36 E -1.14(AT)-1.08 G(EMENTS)1.14 E/F1 10/Times-Roman@0 SF .032
(This chapter describes the statements in SETL which are used to contro\
l the \215o)133 307 R 2.532(wo)-.25 G 2.532(fp)-2.532 G(rocess-)-2.532 E
(ing.)108 319 Q/F2 10/Times-Bold@0 SF 2.5(5.1. Conditional)108 335.2 R
(Statements & Expr)2.5 E(essions)-.18 E F1 .416
(The conditional statements in SETL allo)133 351.4 R 2.917(wt)-.25 G
.417(he \215o)-2.917 F 2.917(wo)-.25 G 2.917(fc)-2.917 G .417
(ontrol to be determined on the basis)-2.917 F 2.841
(of speci\214ed tests. Conditional e)108 363.4 R 2.841(xpressions allo)
-.15 F 5.341(ws)-.25 G 2.841(election of a calculation in an e)-5.341 F
(xpression)-.15 E(depending on the outcome of a test.)108 375.4 Q F2 2.5
(5.1.1. If)108 399.4 R(Statement)2.5 E F1 3.966(Ab)133 415.6 S 1.466
(asic control structure in SETL is the)-3.966 F F2(if)3.966 E F1 1.466
(conditional statement, which allo)3.966 F 1.467(ws selection)-.25 F
.555(among sequences of program statements to be e)108 427.6 R -.15(xe)
-.15 G .554(cuted depending on the outcome of a test.).15 F(The)5.554 E
(simplest form is a tw)108 439.6 Q 2.5(ow)-.1 G(ay)-2.6 E F2(if)2.5 E F1
(statement:)2.5 E F2(if)158 463.6 Q F1(test)2.5 E F2(then)2.5 E F1
(block1)178 475.6 Q F2(else)158 487.6 Q F1(block2)178 499.6 Q F2
(end if;)158 511.6 Q F1 .428(The test after the)108 535.6 R F2(if)2.928
E F1 .428(is e)2.928 F -.25(va)-.25 G .428(luated. If it succeeds, then\
 the series of statements \(zero or more\) which).25 F .13
(comprise block1 are e)108 547.6 R -.15(xe)-.15 G .13
(cuted. If the test f).15 F .129
(ails, then the series of statements in block2 are e)-.1 F -.15(xe)-.15
G(cuted.).15 E(The follo)108 559.6 Q(wing are some e)-.25 E
(xamples of this tw)-.15 E 2.5(ow)-.1 G(ay)-2.6 E F2(if)2.5 E F1
(structure:)2.5 E F2(if)158 583.6 Q F1 2.5(a>3)2.5 G F2(or)2.5 E F1
(status)5 E/F3 10/Symbol SF(=)2.5 E F1('error')2.5 E F2(then)2.5 E F1
(print\('B)178 595.6 Q(AD A V)-.35 E(ALUE OR O)-1.35 E(THER ERR)-.4 E
(OR'\);)-.4 E 2.5(a:)178 607.6 S F3(=)-2.5 E F1(3;)2.5 E(status :)178
619.6 Q F3(=)A F1('ok';)2.5 E F2(else)158 631.6 Q F1(x\(a\) :)178 643.6
Q F3(=)A F1(2;)2.5 E(print\(y\(a\)\);)178 655.6 Q F2(end if;)158 667.6 Q
(Chapter 5)108 756 Q(The SETL Pr)79.06 E(ogramming Language)-.18 E -.1
(Pa)89.16 G(ge 75).1 E EP
%%Page: 76 77
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 76).1 E(if)158 130 Q/F1 10
/Times-Roman@0 SF(mark)2.5 E(ed\('x'\))-.1 E F0(then stop; else goto)2.5
E F1(x;)2.5 E F0(end if;)2.5 E(if)158 154 Q F1(\(a > 3)2.5 E F0(or)5 E
F1 2.5(b<2)5 G(\))-2.5 E F0(and not)2.5 E F1 2.5(c>3)2.5 G F0(then)A F1
2.5(d:)178 166 S/F2 10/Symbol SF(=)-2.5 E F1 2.5(a+b+c)2.5 G(;)-2.5 E F0
(else)158 178 Q F1 2.5(a:)178 190 S F2(=)-2.5 E F1(2;)2.5 E 2.5(b:)178
202 S F2(=)-2.5 E F1(0;)2.5 E F0(end if;)158 214 Q F1 .043
(The indentation used in the abo)108 238 R .343 -.15(ve ex)-.15 H .044
(amples \(e).15 F .044
(xcept for the last one which can \214t all on one line\) is)-.15 F .688
(not required by the SETL language, b)108 250 R .688
(ut it represents a recommended style which impro)-.2 F -.15(ve)-.15 G
3.187(sr).15 G(ead-)-3.187 E(ability of programs.)108 262 Q(The)133
278.2 Q F0(else)3.09 E F1 -.1(ke)3.09 G(yw)-.05 E .59(ord and its follo)
-.1 F .591(wing statements in block2 may be omitted, in which case no)
-.25 F(action occurs if the test f)108 290.2 Q(ails:)-.1 E F0(if)158
314.2 Q F1(d)2.5 E F2(=)2.5 E F1(0)2.5 E F0(then)2.5 E F1
(print\('zero diagonal element'\);)178 326.2 Q F0(stop;)178 338.2 Q
(end if;)158 350.2 Q F1(The)108 374.2 Q F0 .178(end if)2.678 F F1 .178
(terminator may be written in tw)2.678 F 2.677(oo)-.1 G .177
(ther styles. It can be shortened to)-2.677 F F0(end;)2.677 E F1 .177
(which is use-)2.677 F 2.54(ful in the case of short)108 386.2 R F0(if)
5.04 E F1 2.54(statements where no confusion can arise. Alternati)5.04 F
-.15(ve)-.25 G 2.54(ly it can be).15 F -.15(ex)108 398.2 S .216
(panded by cop).15 F .216(ying one or more tok)-.1 F .216
(ens from the test in the corresponding)-.1 F F0(if)2.715 E F1 .215
(as sho)2.715 F .215(wn in the fol-)-.25 F(lo)108 410.2 Q(wing e)-.25 E
(xamples:)-.15 E F0(if)144 434.2 Q F1 2.5(a>3)2.5 G F0(then)A F1
(print\(a\);)2.5 E F0(end if)2.5 E F1(;)A F0(if)144 446.2 Q F1 2.5(a>3)
2.5 G F0(then)A F1(print\(a\);)2.5 E F0(end if)2.5 E F1(a;)2.5 E F0(if)
144 458.2 Q F1 2.5(a>3)2.5 G F0(then)A F1(print\(a\);)2.5 E F0(end if)
2.5 E F1 2.5(a>3)2.5 G(;)-2.5 E .831(This e)108 482.2 R .832
(xpanded form is particularly useful for v)-.15 F .832
(ery long if statements, since it helps the reader to)-.15 F .464
(match up)108 494.2 R F0(end)2.964 E F1 1.564 -.55('s w)D .464
(ith their corresponding).55 F F0(if)2.964 E F1 .464
(tests. It also helps the compiler perform this match up)2.964 F
(if errors ha)108 506.2 Q .3 -.15(ve b)-.2 H(een made in the program.)
.15 E .698(Since an)133 522.4 R F0(if)3.198 E F1 .699(statement is cons\
idered to be a single statement itself, ending with a semicolon)3.198 F
.23(as usual, it may appear as one of the statements in the)108 534.4 R
F0(then)2.729 E F1(or)2.729 E F0(else)2.729 E F1 .229(block, allo)2.729
F .229(wing nesting of con-)-.25 F .791
(ditional tests to an arbitrary le)108 546.4 R -.15(ve)-.25 G .791
(l. A special case of such nesting occurs when se).15 F -.15(ve)-.25 G
.792(ral conditions).15 F(are tested in sequence as in the follo)108
558.4 Q(wing e)-.25 E(xample.)-.15 E F0(if)158 586.6 Q F1(day)2.5 E F2
(=)2.5 E F1 -.55('s)2.5 G(un').55 E F0(then)2.5 E F1 2.5(d:)178 598.6 S
F2(=)-2.5 E F1(1;)2.5 E F0(else)158 610.6 Q(if)178 622.6 Q F1(day)2.5 E
F2(=)2.5 E F1('mon')2.5 E F0(then)2.5 E F1 2.5(d:)198 634.6 S F2(=)-2.5
E F1(2;)2.5 E F0(else)178 646.6 Q(if)198 658.6 Q F1(day)2.5 E F2(=)2.5 E
F1 -.18('t)2.5 G(ue').18 E F0(then)2.5 E F1 2.5(d:)218 670.6 S F2(=)-2.5
E F1(3;)2.5 E EP
%%Page: 77 78
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 77).1 E(else)198 130 Q(if)
218 142 Q/F1 10/Times-Roman@0 SF(day)2.5 E/F2 10/Symbol SF(=)2.5 E F1
('wed')2.5 E F0(then)2.5 E F1 2.5(d:)238 154 S F2(=)-2.5 E F1(4;)2.5 E
F0(else)218 166 Q(if)238 178 Q F1(day)2.5 E F2(=)2.5 E F1 -.18('t)2.5 G
(hu').18 E F0(then)2.5 E F1 2.5(d:)258 190 S F2(=)-2.5 E F1(5;)2.5 E F0
(else)238 202 Q(if)258 214 Q F1(day)2.5 E F2(=)2.5 E F1('fri')2.5 E F0
(then)2.5 E F1 2.5(d:)278 226 S F2(=)-2.5 E F1(6;)2.5 E F0(else)258 238
Q F1 2.5(d:)278 250 S F2(=)-2.5 E F1(7;)2.5 E F0(end;)258 262 Q(end;)238
274 Q(end;)218 286 Q(end;)198 298 Q(end;)178 310 Q(end;)158 322 Q F1
.914(Although this achie)108 350.2 R -.15(ve)-.25 G 3.414(st).15 G .914
(he intended ef)-3.414 F .914(fect, it illustrates the a)-.25 F(wkw)-.15
E .913(ardness of making sure that all)-.1 F(the)108 362.2 Q F0(end)3.44
E F1 .94(statements match up. The follo)3.44 F .94(wing alternati)-.25 F
1.24 -.15(ve a)-.25 H .94(pproach is easier to write, b).15 F .94
(ut less ef)-.2 F<8c2d>-.25 E(cient since all the tests are made in e)
108 374.2 Q -.15(ve)-.25 G(ry case.).15 E F0(if)144 398.2 Q F1(day)2.5 E
F2(=)2.5 E F1 -.55('s)2.5 G(un').55 E F0(then)2.5 E F1 2.5(d:)2.5 G F2
(=)-2.5 E F1(1;)2.5 E F0(end;)2.5 E(if)144 410.2 Q F1(day)2.5 E F2(=)2.5
E F1('mon')2.5 E F0(then)2.5 E F1 2.5(d:)2.5 G F2(=)-2.5 E F1(2;)2.5 E
F0(end;)2.5 E(if)144 422.2 Q F1(day)2.5 E F2(=)2.5 E F1 -.18('t)2.5 G
(ue').18 E F0(then)2.5 E F1 2.5(d:)2.5 G F2(=)-2.5 E F1(3;)2.5 E F0
(end;)2.5 E(if)144 434.2 Q F1(day)2.5 E F2(=)2.5 E F1('wed')2.5 E F0
(then)2.5 E F1 2.5(d:)2.5 G F2(=)-2.5 E F1(4;)2.5 E F0(end;)2.5 E(if)144
446.2 Q F1(day)2.5 E F2(=)2.5 E F1 -.18('t)2.5 G(hu').18 E F0(then)2.5 E
F1 2.5(d:)2.5 G F2(=)-2.5 E F1(5;)2.5 E F0(end;)2.5 E(if)144 458.2 Q F1
(day)2.5 E F2(=)2.5 E F1('fri')2.5 E F0(then)2.5 E F1 2.5(d:)2.5 G F2(=)
-2.5 E F1(6;)2.5 E F0(end;)2.5 E(if)144 470.2 Q F1(day)2.5 E F2(=)2.5 E
F1 -.55('s)2.5 G(at').55 E F0(then)2.5 E F1 2.5(d:)2.5 G F2(=)-2.5 E F1
(7;)2.5 E F0(end)2.5 E F1(;)A .483(Furthermore, there are cases, unlik)
108 494.2 R 2.983(et)-.1 G .483(his e)-2.983 F .483
(xample, where it is not merely inef)-.15 F .482(\214cient, b)-.25 F
.482(ut de\214nitely)-.2 F
(wrong, to perform a test when an earlier test has succeeded.)108 506.2
Q 3.51(As)133 522.4 S 1.01(pecial k)-3.51 F -.15(ey)-.1 G -.1(wo).15 G
(rd).1 E F0(elseif)3.51 E F1(allo)3.51 E 1.01
(ws the sequence to be written in an ef)-.25 F 1.01
(\214cient manner without)-.25 F(ha)108 534.4 Q .818(ving to count)-.2 F
F0(end)3.318 E F1 3.318(statements. Whene)3.318 F -.15(ve)-.25 G(r).15 E
F0(else)3.318 E F1(and)3.318 E F0(if)3.318 E F1 -.1(ke)3.318 G(yw)-.05 E
.817(ords appear immediately adjacent to)-.1 F .382(one other)108 546.4
R 2.882(,t)-.4 G(he)-2.882 E 2.882(ym)-.15 G .383
(ay be replaced by the single k)-2.882 F -.15(ey)-.1 G -.1(wo).15 G(rd)
.1 E F0(elseif)2.883 E(,)-.15 E F1 .383(and the corresponding)2.883 F F0
(end)2.883 E F1(termina-)2.883 E(tor is omitted. Thus we can write:)108
558.4 Q F0(if)144 582.4 Q F1(day)2.5 E F2(=)2.5 E F1 -.55('s)2.5 G(un')
.55 E F0(then)2.5 E F1 2.5(d:)2.5 G F2(=)-2.5 E F1(1;)2.5 E F0(elseif)
144 594.4 Q F1(day)2.5 E F2(=)2.5 E F1('mon')2.5 E F0(then)2.5 E F1 2.5
(d:)2.5 G F2(=)-2.5 E F1(2;)2.5 E F0(elseif)144 606.4 Q F1(day)2.5 E F2
(=)2.5 E F1 -.18('t)2.5 G(ue').18 E F0(then)2.5 E F1 2.5(d:)2.5 G F2(=)
-2.5 E F1(3;)2.5 E F0(elseif)144 618.4 Q F1(day)2.5 E F2(=)2.5 E F1
('wed')2.5 E F0(then)2.5 E F1 2.5(d:)2.5 G F2(=)-2.5 E F1(4;)2.5 E F0
(elseif)144 630.4 Q F1(day)2.5 E F2(=)2.5 E F1 -.18('t)2.5 G(hu').18 E
F0(then)2.5 E F1 2.5(d:)2.5 G F2(=)-2.5 E F1(5;)2.5 E F0(elseif)144
642.4 Q F1(day)2.5 E F2(=)2.5 E F1('fri')2.5 E F0(then)2.5 E F1 2.5(d:)
2.5 G F2(=)-2.5 E F1(6;)2.5 E F0(elseif)144 654.4 Q F1 2.5(d:)2.5 G F2
(=)-2.5 E F1(7;)2.5 E F0(end)144 666.4 Q F1(;)A EP
%%Page: 78 79
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 78).1 E/F1 10/Times-Roman@0
SF .164
(In this form, the tests are in sequence and as soon as one test is TR)
108 130 R .164(UE and its corresponding block)-.4 F(is e)108 142 Q -.15
(xe)-.15 G(cuted, the remainder of the tests are abandoned.).15 E F0 2.5
(5.1.2. If)108 166 R(Expr)2.5 E(ession)-.18 E F1 3.599(As)133 182.2 S
1.099(pecial form of e)-3.599 F 1.099(xpression called a conditional e)
-.15 F 1.099(xpression or)-.15 F F0(if)3.599 E F1 -.15(ex)3.6 G 1.1
(pression is similar in).15 F(form to an)108 194.2 Q F0(if)2.5 E F1
(statement:)2.5 E F0(if)144 218.2 Q F1(test)2.5 E F0(then)2.5 E F1 -.15
(ex)2.5 G(pr1).15 E F0(else)2.5 E F1 -.15(ex)2.5 G(pr2).15 E F0(end)2.5
E F1 .2(This may be used an)108 242.2 R .2(ywhere that a e)-.15 F .2
(xpression is permitted. The ef)-.15 F .2(fect is to e)-.25 F -.25(va)
-.25 G .2(luate either e).25 F .2(xpr1 or)-.15 F -.15(ex)108 254.2 S
.377(pr2 depending on the result of the test. The result of the entire)
.15 F F0(if)2.878 E F1 -.15(ex)2.878 G .378(pression is then the v).15 F
.378(alue of)-.25 F .768(the single e)108 266.2 R .767(xpression e)-.15
F -.25(va)-.25 G .767(luated. The terminator must be).25 F F0(end)3.267
E F1 .767(as sho)3.267 F .767(wn \(not)-.25 F F0 .767(end if)3.267 F F1
(or)3.267 E F0 .767(end if)3.267 F F1(with)3.267 E -.15(ex)108 278.2 S
(tra tok).15 E(ens\). Some e)-.1 E(xamples of conditional e)-.15 E
(xpressions are:)-.15 E(print\()144 302.2 Q F0(if)A F1 2.5(a>5)2.5 G F0
(then)A F1(b)2.5 E F0(else)2.5 E F1(f\(a\))2.5 E F0(end)2.5 E F1(\);)A
(maxab :)144 314.2 Q/F2 10/Symbol SF(=)A F0(if)2.5 E F1 2.5(a>b)2.5 G F0
(then)A F1(a)2.5 E F0(else)2.5 E F1(b)2.5 E F0(end)2.5 E F1(;)A F0 2.5
(5.1.3. Case)108 350.2 R(Statement)2.5 E F1(The)133 366.4 Q F0(case)
5.202 E F1 2.703(statement is a generalization of the)5.202 F F0(if)
5.203 E F1 2.703(concept which allo)5.203 F 2.703(ws one of se)-.25 F
-.15(ve)-.25 G(ral).15 E(sequences of statements to be selected dependi\
ng on a set of associated tests. The general form is:)108 378.4 Q F0
(case of)158 402.4 Q F1(\(test1\): block1)158 414.4 Q(\(test2\): block2)
158 426.4 Q(\(test3\): block3)158 438.4 Q(\(testn\): blockn)158 450.4 Q
F0(else)158 462.4 Q F1(block)2.5 E(e)-.1 E F0(end case)158 474.4 Q F1
69.39(;$)C(or simply)-66.89 E F0(end)2.5 E F1(;)A .362
(Each of block1,block2,.. and block)108 498.4 R 2.862(ei)-.1 G 2.862
(sas)-2.862 G .362(equence of one or more statements.)-2.862 F .361
(Each of the e)5.362 F(xpres-)-.15 E .606(sions test1,test2,.. is e)108
510.4 R -.25(va)-.25 G .606(luated and must yield a v).25 F .606
(alue of TR)-.25 F .607(UE or F)-.4 F .607(ALSE. If none of the e)-.74 F
(xpres-)-.15 E 1.498(sions yields TR)108 522.4 R 1.498(UE, then the)-.4
F F0(else)3.998 E F1 1.498(block, block)3.998 F 1.498(e, is e)-.1 F -.15
(xe)-.15 G 1.497(cuted. If one or more of the tests yields).15 F(TR)108
534.4 Q .891(UE, then one of the associated blocks of statements is e)
-.4 F -.15(xe)-.15 G 3.391(cuted. If).15 F .892
(more than one test yields)3.391 F(TR)108 546.4 Q .806
(UE, the choice of which block to e)-.4 F -.15(xe)-.15 G .806
(cute is made in an arbitrary manner).15 F 3.305(.T)-.55 G(he)-3.305 E
F0(case)3.305 E F1(statement)3.305 E(thus dif)108 558.4 Q
(fers from a similar sequence of)-.25 E F0(if)2.5 E F1(and)2.5 E F0
(elseif)2.5 E F1(tests where the tests are made in sequence.)2.5 E
(It is possible to attach more than one test to a gi)108 574.6 Q -.15
(ve)-.25 G 2.5(nb).15 G(ranch of the case by:)-2.5 E
(\(test1,test2,.. testn\): blockn)144 598.6 Q 1.2
(In this case, blockn is a candidate for being e)108 622.6 R -.15(xe)
-.15 G 1.2(cuted if an).15 F 3.7(yo)-.15 G 1.2
(ne of the tests test1,test2,.. yields)-3.7 F(TR)108 634.6 Q(UE.)-.4 E
(The)133 650.8 Q F0(else)3.568 E F1 1.067(clause, together with its ass\
ociated block of statements can be omitted, in which)3.568 F(case, the)
108 662.8 Q F0(case)2.5 E F1(statement has no ef)2.5 E
(fect if none of the tests e)-.25 E -.25(va)-.25 G(luates to TR).25 E
(UE.)-.4 E EP
%%Page: 79 80
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 79).1 E/F1 10/Times-Roman@0
SF .22(If there is at least one test which e)108 130 R -.25(va)-.25 G
.22(luates to TR).25 F .221
(UE, then the other tests may or may not be e)-.4 F -.25(va)-.25 G(lu-)
.25 E .574(ated. Ef)108 142 R(fecti)-.25 E -.15(ve)-.25 G .573
(ly the separate tests are e).15 F -.25(va)-.25 G .573
(luated in some arbitrary order).25 F 3.073(,o)-.4 G 3.073(re)-3.073 G
-.15(ve)-3.323 G 3.073(na).15 G 3.073(tt)-3.073 G .573(he same time)
-3.073 F 1.004(in an unspeci\214ed sequence, and the program can mak)108
154 R 3.504(en)-.1 G 3.504(oa)-3.504 G 1.004
(ssumptions about the order or about)-3.504 F
(which tests are actually e)108 166 Q -.25(va)-.25 G(luated.).25 E 1.6
-.8(We c)133 182.2 T(an no).8 E 2.5(ww)-.25 G
(rite the days of the week e)-2.5 E(xample as a)-.15 E F0(case)2.5 E F1
(statement:)2.5 E F0(case of)158 206.2 Q F1(\(day)158 218.2 Q/F2 10
/Symbol SF(=)A F1 -.55('s)C(un'\): d :).55 E F2(=)A F1(1;)2.5 E(\(day)
158 230.2 Q F2(=)A F1('mon'\): d :)A F2(=)A F1(2;)2.5 E(\(day)158 242.2
Q F2(=)A F1 -.18('t)C(ue'\): d :).18 E F2(=)A F1(3;)2.5 E(\(day)158
254.2 Q F2(=)A F1('wed'\): d :)A F2(=)A F1(4;)2.5 E(\(day)158 266.2 Q F2
(=)A F1 -.18('t)C(hu'\): d :\(eq 5;).18 E(\(day)158 278.2 Q F2(=)A F1
('fri'\): d :)A F2(=)A F1(6)2.5 E(\(day)158 290.2 Q F2(=)A F1 -.55('s)C
(at'\): d :).55 E F2(=)A F1(7;)2.5 E F0(end case)158 302.2 Q F1(;)A .495
(In this particular case, at most one of the)108 326.2 R F0(case)2.995 E
F1 .495(branches could be true, so there is no dif)2.995 F .494
(ference in)-.25 F(ef)108 338.2 Q .198(fect between this)-.25 F F0(case)
2.698 E F1 .199(statement and the sequence of)2.699 F F0(if)2.699 E F1
(and)2.699 E F0(elseif)2.699 E F1 .199(tests gi)2.699 F -.15(ve)-.25 G
2.699(ni).15 G 2.699(nt)-2.699 G .199(he pre)-2.699 F .199(vious sec-)
-.25 F(tion. The follo)108 350.2 Q(wing e)-.25 E(xample sho)-.15 E
(ws a case in which there is a dif)-.25 E(ference:)-.25 E F0(if)158
374.2 Q F1(k>10)2.5 E F0(then)2.5 E(print)178 386.2 Q F1(\('k>10'\);)A
F0(elseif)158 398.2 Q F1(k<5)2.5 E F0(then)2.5 E(print)178 410.2 Q F1
(\('k<5'\);)A F0(elseif)158 422.2 Q F1(k<10)2.5 E F0(then)2.5 E(print)
178 434.2 Q F1(\('k<10'\);)A F0(else)158 446.2 Q(print)178 458.2 Q F1
(\('k)A F2(=)A F1(10'\);)A F0(end if;)158 470.2 Q(case of)158 494.2 Q F1
(\(k>10\):)158 506.2 Q F0(print)178 518.2 Q F1(\('k>10'\);)A(\(k<5\):)
158 530.2 Q F0(print)178 542.2 Q F1(\('k<5'\);)A(\(k<10\):)158 554.2 Q
F0(print)178 566.2 Q F1(\('k<10'\);)A F0(else)158 578.2 Q(print)178
590.2 Q F1(\('k)A F2(=)A F1(10'\);)A F0(end case)158 602.2 Q F1(;)A .656
(If these tw)108 626.2 R 3.156(os)-.1 G .656(equences are e)-3.156 F
-.15(xe)-.15 G .656(cuted with k ha).15 F .656(ving the v)-.2 F .655
(alue 4, then the top e)-.25 F .655(xample using)-.15 F F0(if)3.155 E F1
(and)3.155 E F0(elseif)108 638.2 Q F1 .24(will al)2.74 F -.1(wa)-.1 G
.24(ys print k<5 since this test is al).1 F -.1(wa)-.1 G .241
(ys made before the k<10 test. In the CASE state-).1 F 1.53(ment, eithe\
r k<5 or k<10 might be printed since both conditions are satis\214ed an\
d the order in)108 650.2 R .03(which these tw)108 662.2 R 2.53(ot)-.1 G
.03(ests are made is not speci\214ed.)-2.53 F 2.53(Ag)5.03 G .031
(eneral rule is to use)-2.53 F F0(if)2.531 E F1(and)2.531 E F0(elseif)
2.531 E F1 .031(only when the)2.531 F .402
(order is important. This serv)108 674.2 R .402(es to w)-.15 F .402
(arn the reader of the program that the order of test e)-.1 F -.25(va)
-.25 G(luations).25 E EP
%%Page: 80 81
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 80).1 E/F1 10/Times-Roman@0
SF(is important.)108 130 Q .657(One particular application of the unde\
\214ned order in which the tests are made is illustrated by the)108
146.2 R(follo)108 158.2 Q(wing:)-.25 E F0(case of)158 182.2 Q F1(\()158
194.2 Q F0(true)A F1(\):)A(\()158 206.2 Q F0(true)A F1(\):)A F0
(end case)158 218.2 Q F1(;)A .335(This construction can be used if tw)
108 242.2 R 2.835(op)-.1 G .335
(ossible sequences of statements can be e)-2.835 F -.15(xe)-.15 G .335
(cuted and it does).15 F 1.004(not matter which is e)108 254.2 R -.15
(xe)-.15 G 1.005(cuted, or in an).15 F 3.505(yc)-.15 G 1.005
(ase the programmer does not wish to indicate a choice)-3.505 F .971
(between the tw)108 266.2 R 3.471(op)-.1 G .971
(ossibilities. The implication is that the program will w)-3.471 F .97
(ork no matter which of)-.1 F 1.027(the tw)108 278.2 R 3.527(ob)-.1 G
1.027(ranches is e)-3.527 F -.15(xe)-.15 G 1.028(cuted. This gi).15 F
-.15(ve)-.25 G 3.528(sac).15 G 1.028(ontrol \215o)-3.528 F 3.528(wa)-.25
G 1.028(nalog to the use of the)-3.528 F F0(arb)3.528 E F1 1.028
(operator in)3.528 F -.15(ex)108 290.2 S .213(pressions and allo).15 F
.212(ws the programmer to a)-.25 F -.2(vo)-.2 G .212
(id specifying choices which are not important to the).2 F .253(algorit\
hm. A similar situation might arise in a sorting program where the equa\
l comparison condi-)108 302.2 R
(tion can be treated as either less than or greater than:)108 314.2 Q F0
(case of)158 338.2 Q F1(\(a\(i\) <)158 350.2 Q/F2 10/Symbol SF(=)A F1
(a\(i+1\)\):)2.5 E(\(a\(i\) >)158 362.2 Q F2(=)A F1(a\(i+1\)\):)2.5 E F0
(end case;)158 374.2 Q F1 1.158(It is quite common for the tests in a)
108 398.2 R F0(case)3.658 E F1 1.158(statement to ha)3.658 F 1.458 -.15
(ve t)-.2 H 1.157(he form of testing some particular).15 F -.25(va)108
410.2 S .343(riable or e).25 F .343(xpression v)-.15 F .344
(alue for equality with a series of constants. The days of the week e)
-.25 F(xample)-.15 E .993(is in this form. A special form of the)108
422.2 R F0(case)3.493 E F1 .993(statement is a)3.493 F -.25(va)-.2 G
.992(ilable to simplify the writing of such).25 F(cases:)108 434.2 Q F0
(case)158 458.2 Q F1 -.15(ex)2.5 G(pr).15 E F0(of)2.5 E F1
(\(constant1\): block1)158 470.2 Q(\(constant2\): block2)158 482.2 Q
(\(constant3\): block3)158 494.2 Q(\(constantn\): blockn)158 506.2 Q F0
(else)158 518.2 Q F1(block)2.5 E(e)-.1 E F0(end case;)158 530.2 Q F1 2.5
($o)68.84 G(r)-2.5 E F0(end)2.5 E F1 2.5(;o)C(r)-2.5 E F0(end case)2.5 E
F1(<tok)2.5 E(ens>;)-.1 E .12(The e)108 554.2 R .12
(xpression in the header e)-.15 F .12(xpr is e)-.15 F -.25(va)-.25 G .12
(luated \(once\) to gi).25 F .42 -.15(ve a t)-.25 H .12(est v).15 F .12
(alue. A block is e)-.25 F -.15(xe)-.15 G .12(cuted if its).15 F .233
(associated constanti e)108 566.2 R .233
(xpression is equal to the test v)-.15 F .232
(alue. As in the full form of the)-.25 F F0(case)2.732 E F1(statement,)
2.732 E .978(if more than one v)108 578.2 R .979(alue matches, then an \
arbitrary choice is made between the matching alterna-)-.25 F(ti)108
590.2 Q -.15(ve)-.25 G 2.884(s. The).15 F F0(else)2.884 E F1 .384
(block is e)2.884 F -.15(xe)-.15 G .384(cuted if no v).15 F .383
(alues match and can be omitted if no action is required in)-.25 F .459
(the case where no v)108 602.2 R .459(alues match.)-.25 F .46
(As in the full form, multiple tests can be attached to one branch)5.459
F(by:)108 614.2 Q(\(constant1,constant2,...constantn\): block)144 638.2
Q(in which case the block is a candidate for e)108 662.2 Q -.15(xe)-.15
G(cution if an).15 E 2.5(yo)-.15 G 2.5(ft)-2.5 G(he attached v)-2.5 E
(alues match.)-.25 E EP
%%Page: 81 82
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 81).1 E/F1 10/Times-Roman@0
SF .589(The actual rules for what can appear as constants here are the \
same as for)108 130 R F0(const)3.088 E F1 .588(declarations, i.e.)3.088
F(denotations, pre)108 142 Q(vious declared constant v)-.25 E
(alues, or sets or tuples of constant v)-.25 E(alues.)-.25 E 1.987 -.8
(We c)133 158.2 T .387(an no).8 F 2.887(ww)-.25 G .387
(rite the days of the week e)-2.887 F .388
(xample in a more compact form using this v)-.15 F(ersion)-.15 E(of the)
108 170.2 Q F0(case)2.5 E F1(statement:)2.5 E F0(case)144 194.2 Q F1
(day)2.5 E F0(of)2.5 E F1(\(')144 206.2 Q(sun'\): d :)-.55 E/F2 10
/Symbol SF(=)A F1(1;)2.5 E(\('mon'\): d :)144 218.2 Q F2(=)A F1(2;)2.5 E
(\(')144 230.2 Q(tue'\): d :)-.18 E F2(=)A F1(3;)2.5 E(\('wed'\): d :)
144 242.2 Q F2(=)A F1(4;)2.5 E(\(')144 254.2 Q(thu'\): d :)-.18 E F2(=)A
F1(5;)2.5 E(\('fri'\): d :)144 266.2 Q F2(=)A F1(6;)2.5 E(\(')144 278.2
Q(sat'\): d :)-.55 E F2(=)A F1(7;)2.5 E F0(end case)144 290.2 Q F1(day;)
2.5 E .295(Note that the e)108 314.2 R .295
(xpressions attached to the branches in this form are general e)-.15 F
.295(xpressions and are not)-.15 F .967
(required to be constants, although the use of constants in this conte)
108 326.2 R .968(xt is common. As in the full)-.15 F .559
(form of the case, no assumptions can be made about the order of e)108
338.2 R -.25(va)-.25 G .559(luation of these e).25 F(xpressions,)-.15 E
(or e)108 350.2 Q -.15(ve)-.25 G 2.5(na).15 G(bout whether or not the)
-2.5 E 2.5(yw)-.15 G(ill be e)-2.5 E -.25(va)-.25 G
(luated if there is a matching alternati).25 E -.15(ve)-.25 G(.).15 E F0
2.5(5.1.4. Case)108 374.2 R(Expr)2.5 E(ession)-.18 E F1 .588
(Just as there is an)133 390.4 R F0(if)3.089 E F1 -.15(ex)3.089 G .589
(pression corresponding to an).15 F F0(if)3.089 E F1 .589
(statement, there is a)3.089 F F0(case)3.089 E F1 -.15(ex)3.089 G
(pression).15 E(which corresponds to a)108 402.4 Q F0(case)2.5 E F1
(statement. The form is:)2.5 E F0(case)158 426.4 Q F1 -.15(ex)2.5 G
(pression).15 E F0(of)2.5 E F1(\(v)158 438.4 Q(alue1\): e)-.25 E
(xpression1,)-.15 E(\(v)158 450.4 Q(alue2\): e)-.25 E(xpression2,)-.15 E
(\(v)158 462.4 Q(alue3\): e)-.25 E(xpression3,)-.15 E(\(v)158 474.4 Q
(aluen\): e)-.25 E(xpressionn)-.15 E F0(else)158 486.4 Q F1 -.15(ex)2.5
G(pressione).15 E F0(end)158 498.4 Q F1 .937(The v)108 522.4 R .937
(alue of the)-.25 F F0(case)3.437 E F1 -.15(ex)3.437 G .937
(pression is the v).15 F .937(alue of the selected e)-.25 F .936
(xpression, or the v)-.15 F .936(alue of the)-.25 F F0(else)3.436 E F1
-.15(ex)108 534.4 S .469(pression if no e).15 F .469
(xpressions match. If the)-.15 F F0(else)2.969 E F1 .469(and its follo)
2.969 F .47(wing e)-.25 F .47(xpression are omitted, and there)-.15 F
.317(is no matching entry)108 546.4 R 2.817(,t)-.65 G .317
(hen the result of the)-2.817 F F0(case)2.817 E F1 -.15(ex)2.817 G .317
(pression is).15 F F0(om.)2.817 E F1 .317
(As in the case statement, a sin-)5.317 F .753(gle e)108 558.4 R .753(x\
pression branch may be labeled with more than one constant. Note that t\
here is no comma)-.15 F(follo)108 570.4 Q(wing the last branch of the)
-.25 E F0(case)2.5 E F1(\(whether or not an)2.5 E F0(else)2.5 E F1
(is present\).)2.5 E 2.067 -.8(We w)133 586.6 T .467
(ill complete this section by re).8 F .466
(writing the days of the week one \214nal time using a)-.25 F F0(case)
2.966 E F1 -.15(ex)108 598.6 S(pression:).15 E 2.5(d:)158 626.8 S F2(=)
-2.5 E F0(case)2.5 E F1(day)2.5 E F0(of)2.5 E F1(\(')236.81 638.8 Q
16.94(sun'\): 1,)-.55 F EP
%%Page: 82 83
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 82).1 E/F1 10/Times-Roman@0
SF 12.5(\('mon'\): 2,)236.81 130 R(\(')236.81 142 Q 18.24(tue'\): 3,)
-.18 F 13.62(\('wed'\): 4,)236.81 154 R(\(')236.81 166 Q 17.68
(thu'\): 5,)-.18 F 20.84(\('fri'\): 6,)236.81 178 R(\(')236.81 190 Q
19.72(sat'\): 7)-.55 F F0(end)158 202 Q F1(;)A F0 2.5(5.2. Loop)108
242.2 R(Statement)2.5 E F1 .032(The loop statement in SETL allo)133
258.4 R .032(ws a series of one or more statements to be e)-.25 F -.15
(xe)-.15 G .032(cuted repeat-).15 F(edly)108 270.4 Q 2.5(.T)-.65 G
(here are tw)-2.5 E 2.5(ob)-.1 G(asic forms.)-2.5 E
(The \214rst form uses an iterator:)5 E F0(loop f)128 298.6 Q(or)-.25 E
F1(iterator)2.5 E F0(do)2.5 E F1 92.115(... $)133 310.6 R(loop body)2.5
E 92.115(... $)133 322.6 R(zero or more statements)2.5 E F0(end loop)128
334.6 Q F1 67.935(;$)C(or)-65.435 E F0(end)2.5 E F1 2.5(;o)C(r)-2.5 E F0
(end loop)2.5 E F1(tok)2.5 E(ens;)-.1 E
(In addition, parentheses can be used to replace the)115.5 358.6 Q F0
(oop)2.5 E F1(and)2.5 E F0(do)2.5 E F1(:)A(\()128 382.6 Q F0 -.25(fo)C
(r).25 E F1(iterator\))2.5 E(...)133 394.6 Q(...)133 406.6 Q F0(end)128
418.6 Q F1 88.775(;$)C(or)-86.275 E F0(end)2.5 E F1(tok)2.5 E(ens;)-.1 E
.678(In this case, the tok)108 446.8 R .678(en sequence after)-.1 F F0
(end)3.178 E F1 .678(copies tok)3.178 F .678
(ens starting immediately after the left paren-)-.1 F
(thesis which opens the loop.)108 458.8 Q .365(The iterator)133 475 R
2.865(,w)-.4 G .365(hose possible forms are discussed in the follo)
-2.865 F .366(wing section, controls the num-)-.25 F
(ber of times the loop is e)108 487 Q -.15(xe)-.15 G
(cuted and also may assign v).15 E(alues to one or more iteration v)-.25
E(ariables.)-.25 E(The other form of loop is written:)108 511 Q F0(loop)
128 539.2 Q(init)133 551.2 Q F1 24.17(blocki $)2.5 F
(loop initialization statements)2.5 E F0(doing)133 563.2 Q F1 12.5
(blockd $)2.5 F(step statements at start of loop)2.5 E F0(while)133
575.2 Q F1 19.73(testw $)2.5 F(termination test at start of loop)2.5 E
F0(step)133 587.2 Q F1 20.29(blocks $)2.5 F
(step statements at end of loop)2.5 E F0(until;)133 599.2 Q F1 21.39
(testu $)2.5 F(termination test at end of loop)2.5 E F0(term)133 611.2 Q
F1 18.08(blockt $)2.5 F(loop termination statements)2.5 E F0(do)128
623.2 Q F1 38.9(blockb $)133 635.2 R(body of loop)2.5 E EP
%%Page: 83 84
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 83).1 E(end loop)128 130 Q
/F1 10/Times-Roman@0 SF 2.5($o)37.22 G(r)-2.5 E F0(end)2.5 E F1 2.5(;o)C
(r)-2.5 E F0(end loop)2.5 E F1(tok)2.5 E(ens;)-.1 E
(As with the iterator form of loops, the k)108 158.2 Q -.15(ey)-.1 G -.1
(wo).15 G(rds).1 E F0(loop)2.5 E F1(and)2.5 E F0(do)2.5 E F1
(can be replaced by parentheses:)2.5 E(\()158 182.2 Q F0(iniut)A F1(b)
2.5 E F0(doing)2.5 E F1(b)2.5 E F0(while)2.5 E F1(t)2.5 E F0(step)2.5 E
F1(b)2.5 E F0(until)2.5 E F1(t)2.5 E F0(term)2.5 E F1(b\))2.5 E F0(end)
158 194.2 Q F1 53.66(;$)C(or)-51.16 E F0(end)2.5 E F1(tok)2.5 E(ens;)-.1
E .79(The easiest w)108 218.2 R .79(ay of describing the precise ef)-.1
F .789(fect of this loop form is to write out the sequence of)-.25 F
(statements which are e)108 230.2 Q -.15(xe)-.15 G
(cuted when this form is used to construct a loop:).15 E 50.83(blocki $)
164.66 258.4 R F0(init)2.5 E F1(block)2.5 E(head:)128 270.4 Q 48.61
(blockd $)164.66 282.4 R F0(doing)2.5 E F1(block)2.5 E F0(if not)164.66
306.4 Q F1 23.06(\(testw\) $)2.5 F F0(while)2.5 E F1(test)2.5 E F0
(then goto)164.66 318.4 Q F1(term;)2.5 E F0(end if)164.66 330.4 Q F1(;)A
48.61(blockb $)164.66 354.4 R(body of loop)2.5 E(step:)128 378.4 Q 49.72
(blocks $)164.66 390.4 R F0(step)2.5 E F1(block)2.5 E F0(if)164.66 414.4
Q F1 41.67(\(testu\) $)2.5 F F0(until)2.5 E F1(test)2.5 E F0(then goto)
164.66 426.4 Q F1(term;)2.5 E F0(end if)164.66 438.4 Q F1(;)A F0(goto)
164.66 462.4 Q F1(head;)A(term:)128 486.4 Q 50.83(blockt $)164.66 498.4
R F0(term)2.5 E F1(block)2.5 E .624(If a)108 526.6 R F0(quit)3.124 E F1
.624(statement is e)3.124 F -.15(xe)-.15 G .625
(cuted within the loop \(i.e within the).15 F F0(doing)3.125 E F1(or)
3.125 E F0(step)3.125 E F1 .625(blocks or in the loop)3.125 F .322
(body\), then it is equi)108 538.6 R -.25(va)-.25 G .322(lent to).25 F
F0(goto)2.822 E F1 .322(term in the abo)2.822 F .622 -.15(ve t)-.15 H
.322(ranslation. A).15 F F0(continue)2.822 E F1 .321
(statement is similary)2.822 F(equi)108 550.6 Q -.25(va)-.25 G(lent to)
.25 E F0(goto)2.5 E F1(step.)2.5 E .585(If an)133 566.8 R 3.085(yo)-.15
G 3.086(ft)-3.085 G(he)-3.086 E F0 .586(init, doing, step)3.086 F F1(or)
3.086 E F0(term)3.086 E F1 .586(clauses are omitted from the iterator)
3.086 F 3.086(,t)-.4 G .586(hen the corre-)-3.086 F .185
(sponding block is simply remo)108 578.8 R -.15(ve)-.15 G 2.685(df).15 G
.185(rom the loop. Similarly with the)-2.685 F F0(while)2.685 E F1(and)
2.685 E F0(until)2.685 E F1 .185(tests, if either)2.685 F .515(of these\
 is omitted then the corresponding test is omitted from the loop.)108
590.8 R .515(Some common forms of)5.515 F
(loops using simple cases of the iterator construction are as follo)108
602.8 Q(ws:)-.25 E F0(loop while)128 631 Q F1(test)2.5 E F0(do)2.5 E F1
2.5($w)15 G(hile loop, test at start)-2.5 E F0(loop until)128 643 Q F1
(test)2.5 E F0(do)2.5 E F1 2.5($u)17.77 G(ntil loop, test at end)-2.5 E
EP
%%Page: 84 85
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 84).1 E(loop do)128 130 Q
/F1 10/Times-Roman@0 SF 2.5($i)56.67 G(nde\214nite loop)-2.5 E F0 2.5
(5.2.1. Quit)108 170.2 R 2.5(&C)2.5 G(ontinue Statements)-2.5 E F1 -.4
(Wi)133 186.4 S 1.185(thin a loop, tw).4 F 3.685(os)-.1 G 1.185
(pecial statements are a)-3.685 F -.25(va)-.2 G 1.185(ilable. The).25 F
F0(quit)3.685 E F1 1.185(statement causes immediate)3.685 F
(termination of e)108 198.4 Q -.15(xe)-.15 G
(cution of the loop, and is written:).15 E F0(quit;)158 222.4 Q
(quit loop;)158 234.4 Q(quit)158 246.4 Q F1(tok)2.5 E(ens;)-.1 E F0
(quit loop)158 258.4 Q F1(tok)2.5 E(ens;)-.1 E .746
(The last forms are useful in the case where loops are nested.)108 282.4
R .746(By cop)5.746 F .746(ying tok)-.1 F .746(ens from the corre-)-.1 F
.398(sponding iterator \(including the tok)108 294.4 R(en)-.1 E F0(loop)
2.898 E F1 .398(only if the loop w)2.898 F .397(as written in the)-.1 F
F0(loop-do)2.897 E F1 .397(form\), it is)2.897 F
(possible to specify which loop is to be terminated.)108 306.4 Q(The)133
322.6 Q F0(continue)3.746 E F1 1.246(statement causes the current itera\
tion of the loop to be abandoned, and the)3.746 F -.15(exe)108 334.6 S
(cution of the loop continues with the ne).15 E
(xt iteration \(if there is one left to go\). The form is:)-.15 E F0
(continue;)158 358.6 Q(continue loop;)158 370.6 Q(continue)158 382.6 Q
F1(tok)2.5 E(ens;)-.1 E F0(continue loop)158 394.6 Q F1(tok)2.5 E(ens;)
-.1 E 1.068(As in the case of the)108 418.6 R F0(quit)3.568 E F1 1.067
(statement, the forms which cop)3.568 F 3.567(yt)-.1 G(ok)-3.567 E 1.067
(ens from the corresponding loop)-.1 F(iterator can be used to specify \
which loop is to be continued in the case of nested loops.)108 430.6 Q
(Normally)108 446.8 Q F0(quit)2.5 E F1(and)2.5 E F0(continue)2.5 E F1
(statements appear within the body of the loop, b)2.5 E(ut the)-.2 E 2.5
(yc)-.15 G(an also occur)-2.5 E .619(in the)108 458.8 R F0(doing)3.119 E
F1(and)3.119 E F0(step)3.119 E F1 .618
(forms of the alternate loop form. Note that the)3.119 F 3.118(yc)-.15 G
.618(annot occur in the)-3.118 F F0(init)3.118 E F1(or)3.118 E F0(term)
108 470.8 Q F1(blocks \(unless referring to a surrounding loop\).)2.5 E
.4(The use of the)108 487 R F0(quit)2.9 E F1(or)2.9 E F0(continue)2.9 E
F1 .4
(statements other than statically inside a loop is erroneous. In par)2.9
F(-)-.2 E(ticular)108 499 Q 3.704(,i)-.4 G 3.704(ti)-3.704 G 3.703(sn)
-3.704 G 1.203(ot possible to e)-3.703 F -.15(xe)-.15 G 1.203(cute the)
.15 F F0(quit)3.703 E F1(or)3.703 E F0(continue)3.703 E F1 1.203
(from a procedure or re\214nement called)3.703 F(within the loop body)
108 511 Q(.)-.65 E F0 2.5(5.2.2. Iterator)108 535 R -.25(Fo)2.5 G(rms)
.25 E F1 .885(Iterators are used to control loops, in set and tuple for\
mers, and in quanti\214ed tests)133 551.2 R F0(\(exists,)3.385 E -.25
(fo)108 563.2 S(rall\).).25 E F1 1.053(The form of an iterator determin\
es the number of times the associated loop is e)6.053 F -.15(xe)-.15 G
(cuted).15 E(and also assigns v)108 575.2 Q
(alues to one of more identi\214ers called iteration v)-.25 E(ariables.)
-.25 E 1.058(The follo)133 591.4 R 1.058(wing section describes the bas\
ic iterator forms. More precise de\214nitions of these)-.25 F 1.162(ite\
rator forms can be found in Appendix nn, where translations into equi)
108 603.4 R -.25(va)-.25 G 1.162(lent loop forms with).25 F -.15(ex)108
615.4 S(plicit step statements and tests are gi).15 E -.15(ve)-.25 G(n.)
.15 E(lhs)108 631.6 Q F0(in)2.5 E F1 71.38(set The)2.5 F .648
(iteration v)3.148 F .648(ariable lhs is set to successi)-.25 F .948
-.15(ve v)-.25 H .649(alues from the set, cho-)-.1 F .574
(sen in arbitrary order)218 643.6 R 3.074(.T)-.55 G .573
(he number of iterations is equal to the number)-3.074 F .619(of elemen\
ts in the set. One particular form which is useful in iterating)218
655.6 R .604
(through a map uses a lhs of the form [a,b] which causes a and b to be)
218 667.6 R EP
%%Page: 85 86
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 85).1 E/F1 10/Times-Roman@0
SF(set to successi)218 130 Q .3 -.15(ve d)-.25 H(omain and range v).15 E
(alues.)-.25 E(lhs)108 146.2 Q F0(in)2.5 E F1 59.71(string The)2.5 F
.456(iteration v)2.956 F .456(ariable is set to successi)-.25 F .756
-.15(ve c)-.25 H .457(haracters of the string v).15 F(alue)-.25 E .062(\
starting with the \214rst and ending with the last. The number of itera\
tions)218 158.2 R .978(is equal to the length of the string. No iterati\
ons are performed if the)218 170.2 R(string is null.)218 182.2 Q(lhs)108
198.4 Q F0(in)2.5 E F1 62.49(tuple The)2.5 F 1.02(iteration v)3.52 F
1.02(ariable lhs is set to successi)-.25 F 1.32 -.15(ve e)-.25 H 1.02
(lements of the tuple in).15 F 1.977(order by increasing inde)218 210.4
R 1.977(x. The number of iterations is equal to the)-.15 F(inde)218
222.4 Q 3.09(xo)-.15 G 3.09(ft)-3.09 G .59
(he highest de\214ned element.)-3.09 F .59
(If there are no holes \(embedded)5.59 F .141(unde\214ned v)218 234.4 R
.142(alues\), then this is equal to the number of de\214ned elements.)
-.25 F .907(If there are holes, then the iteration v)218 246.4 R .907
(ariable will be set to)-.25 F F0(om)3.407 E F1 .907(for the)3.407 F
(unde\214ned inde)218 258.4 Q 2.5(xp)-.15 G(ositions.)-2.5 E(lhs1)108
274.6 Q/F2 10/Symbol SF(=)2.5 E F1 39.79(map\(lhs2\) This)2.5 F .25
(form is used to iterate through the elements of a map, which must)2.75
F .06(be single v)218 286.6 R .06(alued. The iteration v)-.25 F .06
(ariables lhs1 and lhs2 are set to succes-)-.25 F(si)218 298.6 Q .652
-.15(ve d)-.25 H .352(omain and range v).15 F .353(alues respecti)-.25 F
-.15(ve)-.25 G(ly).15 E 2.853(,t)-.65 G .353
(he order in which pairs are)-2.853 F(tak)218 310.6 Q .72
(en being arbitrary)-.1 F 3.219(.T)-.65 G .719
(he number of iterations is equal to the number)-3.219 F
(of elements in the map.)218 322.6 Q(lhs1)108 338.8 Q F2(=)2.5 E F1
36.85(map{lhs2} This)2.5 F .131
(form of map iterator can be used with multi-v)2.63 F .131
(alued maps. On suc-)-.25 F(cessi)218 350.8 Q .36 -.15(ve i)-.25 H .06
(terations, lhs1 is set to the v).15 F .06
(alues in the domain of the map and)-.25 F 1.081
(lhs is set to the corresponding image set. The number of iterations is)
218 362.8 R(thus equal to the cardinality of the domain.)218 374.8 Q
(lhs1)108 391 Q F2(=)2.5 E F1 34.23(string\(lhs2\) The)2.5 F .035
(iteration v)2.535 F .035(ariable lhs2 is set to successi)-.25 F .335
-.15(ve i)-.25 H(nte).15 E .035(ger v)-.15 F .035(alues 1,2... up to)
-.25 F .868(the length of the string. The iteration v)218 403 R .869
(ariable lhs1 is set to the corre-)-.25 F 1.576
(sponding character from the string. The number of iterations is thus)
218 415 R(equal to the length of the string.)218 427 Q(lhs1)108 443.2 Q
F2(=)2.5 E F1 37.01(tuple\(lhs2\) The)2.5 F .035(iteration v)2.535 F
.035(ariable lhs2 is set to successi)-.25 F .335 -.15(ve i)-.25 H(nte)
.15 E .035(ger v)-.15 F .035(alues 1,2,.. up to)-.25 F .47
(the highest inde)218 455.2 R 2.97(xf)-.15 G .47
(or which the tuple is de\214ned \(which is therefore the)-2.97 F 1.582
(number of iterations\). The iteration v)218 467.2 R 1.583
(ariable lhs1 is set to the corre-)-.25 F(sponding tuple v)218 479.2 Q
(alue.)-.25 E 1.013(In these iterator forms, the iteration v)108 495.4 R
1.013(ariables can be an)-.25 F 3.512(yv)-.15 G 1.012
(alid left hand side. F)-3.762 F 1.012(or e)-.15 F 1.012(xample [a,b])
-.15 F .193(can be used as an iteration v)108 507.4 R .194
(ariable if all the iteration v)-.25 F .194(alues are pairs, and the ef)
-.25 F .194(fect is to set a and)-.25 F 3.347(bt)108 519.4 S 3.347(os)
-3.347 G(uccessi)-3.347 E 1.146 -.15(ve v)-.25 H .846
(alues of the elements of the pairs.)-.1 F .846
(On normal completion of a loop \(b)5.846 F .846(ut not on)-.2 F .624
(premature termination from a)108 531.4 R F0(quit,)3.124 E F1
(satis\214ed)3.124 E F0(exists)3.125 E F1 .625(etc.\) the iteration v)
3.125 F .625(ariables are all set to unde-)-.25 F(\214ned)108 543.4 Q F0
(\(om\),)2.5 E F1(so the \214nal v)2.5 E(alues are not a)-.25 E -.25(va)
-.2 G(ilable outside the loop.).25 E 1.352
(The usual shorthand notation can be used in iterator conte)133 559.6 R
1.352(xts for iterating through multi-)-.15 F(ar)108 571.6 Q
(gument maps:)-.18 E(lhs)204.375 599.8 Q F2(=)2.5 E F1(map\(a,b)2.5 E
15.44(..n\) means)-.4 F(lhs)15 E F2(=)2.5 E F1(map\([a,b)2.5 E(..n]\))
-.4 E(lhs)204.375 611.8 Q F2(=)2.5 E F1(map{a,b)2.5 E 12.5
(..n} means lhs)-.4 F F2(=)2.5 E F1(map{[a,b)2.5 E(..n]})-.4 E .001
(It is permissible to modify the v)108 640 R .001(alues of an)-.25 F
2.501(yi)-.15 G .001(teration v)-2.501 F .002
(ariables or other identi\214ers mentioned in the)-.25 F(iterator)108
652 Q 4.082(,a)-.4 G 1.582
(lthough such usage is not recommended. Such modi\214cations do not af)
-4.082 F 1.581(fect the v)-.25 F(alues)-.25 E
(yielded by the iteration. F)108 664 Q(or e)-.15 E(xample, the follo)
-.15 E(wing iteration:)-.25 E EP
%%Page: 86 87
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 86).1 E/F1 10/Times-Roman@0
SF 2.5(a:)158 130 S/F2 10/Symbol SF(=)-2.5 E F1([1,2,3,4,5,6,7,8,9];)2.5
E(\()158 142 Q F0 -.25(fo)C(r).25 E F1(i)2.5 E F0(in)2.5 E F1(a\) a:)2.5
E F2(=)A F1(a+a; i+:)A F2(=)A F1(1;)A F0(end)2.5 E F1(;)A
(still iterates nine times with i being set to the successi)158 166 Q .3
-.15(ve v)-.25 H(alues 1 through 9.)-.1 E(An)133 182.2 Q 2.733(yc)-.15 G
(onte)-2.733 E .233(xt requiring an iterator \(loops, set formers, tupl\
e formers, quanti\214ed tests\) can use)-.15 F(an)108 194.2 Q 3.429(yo)
-.15 G 3.429(ft)-3.429 G .929(he iterator forms described.)-3.429 F .929
(More complicated iterator forms can be b)5.929 F .928
(uilt up from these)-.2 F(basic iterator forms gi)108 206.2 Q -.15(ve)
-.25 G(n:).15 E .768(Compound iterators are formed as a sequence of bas\
ic iterators separated by commas. The)133 222.4 R(ef)133 234.4 Q .088(f\
ect is that of a series of nested loops, in which the last iterator is \
stepped most rapidly and)-.25 F .053(the \214rst iterator least rapidly)
133 246.4 R 2.553(.N)-.65 G .053(ote that a)-2.553 F F0(quit)2.553 E F1
.054(statement will lea)2.554 F .354 -.15(ve a)-.2 H .054
(ll the nested loops in this).15 F .457(case and a)133 258.4 R F0
(continue)2.957 E F1 .457
(will continue the inner loop \(in this respect the ef)2.957 F .456
(fect is slightly dif)-.25 F(fer)-.25 E(-)-.2 E
(ent from actually writing nested loops\).)133 270.4 Q(An)133 294.4 Q
3.355(yi)-.15 G .856
(terator consisting of one or more basic iterator forms can be follo)
-3.355 F .856(wed by a such that)-.25 F(clause:)133 306.4 Q
(iterator | test)169 330.4 Q .838(The ef)133 354.4 R .838
(fect is that the iterator is stepped as usual, b)-.25 F .837
(ut on each iteration test is e)-.2 F -.25(va)-.25 G 3.337(luated. If)
.25 F .822(the result is F)133 366.4 R .822(ALSE, then the iteration is\
 skipped, i.e. the iterator is immediately mo)-.74 F -.15(ve)-.15 G
3.322(dt).15 G(o)-3.322 E 1.215(the ne)133 378.4 R 1.215
(xt step. If the test is TR)-.15 F 1.214
(UE, then the iteration is completed as usual. It is often the)-.4 F
(case, b)133 390.4 Q
(ut is not required, that the test will perform tests on the v)-.2 E
(alues of iteration v)-.25 E(ariables.)-.25 E(The follo)133 406.6 Q
(wing are e)-.25 E(xamples of loops constructed from iterator forms:)
-.15 E(\()158 430.6 Q F0 -.25(fo)C(r).25 E F1(i)2.5 E F0(in)2.5 E F1
([1..#a], j)2.5 E F0(in)2.5 E F1([i..#a]\))2.5 E 2.5(c:)178 442.6 S F2
(=)-2.5 E F1(a\(i\)*a\(j\);)2.5 E F0(end;)158 454.6 Q F1(\()158 466.6 Q
F0 -.25(fo)C(r).25 E F1(x)2.5 E F0(in)2.5 E F1 1.3 -.65(y, a)2.5 H F0
(in)3.15 E F1 2.5(b|x)2.5 G F2(=)A F1(a\))2.5 E F0(end;)158 478.6 Q F1
(\()158 502.6 Q F0 -.25(fo)C(r).25 E F1(x)2.5 E F2(=)2.5 E F1
(c\(i\) | x)2.5 E F2(=)2.5 E F1(',)2.5 E('\))-.7 E F0(end;)158 514.6 Q
2.5(5.2.3. Set)108 542.8 R 2.5(&T)2.5 G(uple F)-3.42 E(ormers)-.25 E F1
1.768(The ef)133 559 R 1.768
(fect of set and tuple formers can be described e)-.25 F 1.769
(xactly by writing equi)-.15 F -.25(va)-.25 G 1.769(lent loop).25 F 2.5
(forms. First)108 571 R(the set former:)2.5 E({e)144 595 Q
(xpression : iterator})-.15 E(is equi)108 619 Q -.25(va)-.25 G
(lent to the follo).25 E(wing)-.25 E F0(expr)2.5 E F1(block:)2.5 E F0
(expr)158 643 Q F1(t1 :)178 655 Q F2(=)A F1 1.666({})2.5 G(;)-1.666 E F0
(loop f)178 667 Q(or)-.25 E F1(iterator)2.5 E F0(do)2.5 E F1(t1)198 679
Q F0(with)2.5 E F1(:\(eq e)A(xpression;)-.15 E EP
%%Page: 87 88
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 87).1 E(end;)178 130 Q
(yields)178 142 Q/F1 10/Times-Roman@0 SF(t1;)2.5 E F0(end)158 154 Q F1
(The tuple former:)108 178 Q 2.5([e)144 202 S(xpression : iterator ])
-2.65 E(dif)108 226 Q(fers only in that a tuple is formed, and is equi)
-.25 E -.25(va)-.25 G(lent to the follo).25 E(wing)-.25 E F0(expr)2.5 E
F1(block:)2.5 E F0(expr)158 250 Q F1(t1 :)178 262 Q/F2 10/Symbol SF(=)A
F1 1.666([])2.5 G(;)-1.666 E F0(loop f)178 274 Q(or)-.25 E F1(iterator)
2.5 E F0(do)2.5 E F1(t1)198 286 Q F0(with)2.5 E F1(:)A F2(=)A F1 -.15
(ex)2.5 G(pression;).15 E F0(end;)198 298 Q(yield)198 310 Q F1(t1;)2.5 E
F0(end)158 322 Q F1 .609(As implied by the translations, the result is \
the null set or null tuple if the iterator does not cause)108 346 R(an)
108 358 Q 2.5(yi)-.15 G(terations of the loop.)-2.5 E
(Multiple iterators are permitted, as in the follo)108 374.2 Q(wing e)
-.25 E(xample:)-.15 E({x+y : x)144 398.2 Q F0(in)2.5 E F1(seta, y)2.5 E
F0(in)2.5 E F1(f\(x\) | x/)2.5 E F2(=)A F1(y})A .254(If the iterator is\
 a single \(non-compound\) iterator with a such that test, then the fol\
lo)108 422.2 R .254(wing abbre)-.25 F(vi-)-.25 E(ated forms are a)108
434.2 Q -.25(va)-.2 G(ilable:).25 E({a)144 458.2 Q F0(in)2.5 E F1 -.15
(ex)2.5 G(pr | t}).15 E 2.5($f)53.22 G(or {a : a)-2.5 E F0(in)2.5 E F1
-.15(ex)2.5 G(pr | t}).15 E([a)144 470.2 Q F0(in)2.5 E F1(... | t])2.5 E
2.5($f)66.28 G(or [a : a)-2.5 E F0(in)2.5 E F1 -.15(ex)2.5 G(pr | t]).15
E F0 2.5(5.3. Goto)108 506.2 R(Statement)2.5 E F1(An)133 522.4 Q 2.5(ys)
-.15 G(tatement in SETL can be labeled:)-2.5 E(label: statement;)144
546.4 Q .591(As sho)108 570.4 R .591(wn, a single statement can ha)-.25
F .891 -.15(ve o)-.2 H .59
(nly one label. The label names are local identi\214er names).15 F
(which are not e)108 582.4 Q
(xplicitly declared and which are not used for an)-.15 E 2.5(yo)-.15 G
(ther purpose.)-2.5 E(The)108 598.6 Q F0(goto)2.5 E F1
(statement, which has the form:)2.5 E F0(goto)144 622.6 Q F1(label;)2.5
E 1.087(has the ef)108 646.6 R 1.087
(fect of transferring control to the labeled statement.)-.25 F F0(Goto)
6.087 E F1 1.088(statements are forbidden to)3.587 F(mak)108 658.6 Q 2.5
(ea)-.1 G .3 -.15(ny o)-2.5 H 2.5(ft).15 G(he follo)-2.5 E
(wing types of transfer:)-.25 E EP
%%Page: 88 89
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 5)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 88).1 E/F1 10/Times-Roman@0
SF(>From outside the body of a loop into the body)133 130 Q(Into the)133
142 Q F0(then)2.5 E F1(block of an)2.5 E F0(if)2.5 E F1(from outside)2.5
E(Into the)133 154 Q F0(else)2.5 E F1(block of an)2.5 E F0(if)2.5 E F1
(from outside)2.5 E(Into the)133 166 Q F0(init, doing, step, until)2.5 E
F1(blocks from outside)2.5 E(Into the blocks in a)133 178 Q F0(case)2.5
E F1(or)2.5 E F0(if)2.5 E F1(statement from outside)2.5 E
(>From one block in a)133 190 Q F0(case)2.5 E F1(or)2.5 E F0(if)2.5 E F1
(statement into another)2.5 E(>From outside an)133 202 Q F0(expr)2.5 E
F1(block into its body)2.5 E .578(Since all labels are local, it is als\
o impossible to transfer from one procedure to another)133 218.2 R 3.077
(,o)-.4 G(r)-3.077 E(from a procedure body to the main program.)108
230.2 Q F0 2.5(5.4. Stop)108 254.2 R(Statement)2.5 E F1(The)133 270.4 Q
F0(stop)2.5 E F1(statement, written simply as:)2.5 E F0(stop;)158 294.4
Q F1 1.037(may appear an)108 318.4 R 1.038
(ywhere in a SETL program and causes immediate termination of program e)
-.15 F -.15(xe)-.15 G(cu-).15 E 3.674(tion. The)108 330.4 R(tw)3.674 E
3.674(ow)-.1 G 1.174
(ays of terminating a SETL program normally are by e)-3.774 F -.15(xe)
-.15 G 1.173(cution of a).15 F F0(stop)3.673 E F1(state-)3.673 E
(ment, or by e)108 342.4 Q -.15(xe)-.15 G(cuting "of).15 E 2.5(ft)-.25 G
(he end" of the main program block.)-2.5 E F0 2.5(5.5. P)108 366.4 R
(ass Statement)-.1 E F1(The)133 382.6 Q F0(pass)2.5 E F1
(statement, written as:)2.5 E F0(pass)158 406.6 Q F1(;)A .17(has no ef)
108 430.6 R .171(fect when it is e)-.25 F -.15(xe)-.15 G .171(cuted. It\
 is used for placing labels at the end of a block, for branches of).15 F
(a)108 442.6 Q F0(case)2.564 E F1 .064
(statement where no action is performed, for a)2.564 F F0(loop)2.563 E
F1 .063(body when the actual processing is com-)2.563 F
(pleted in the loop header)108 454.6 Q 2.5(,a)-.4 G(nd in an)-2.5 E 2.5
(yo)-.15 G(ther situation where a dummy statement is required.)-2.5 E F0
2.5(5.6. Assert)108 478.6 R(Statement)2.5 E F1(The)133 494.8 Q F0
(assert)2.5 E F1(statement, written as:)2.5 E F0(assert)158 518.8 Q F1
-.15(ex)2.5 G(pression;).15 E(signals an error if the v)108 542.8 Q
(alue of the e)-.25 E(xpression is not TR)-.15 E(UE.)-.4 E EP
%%Page: 89 90
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(CHAPTER 6)270.666 132.4 R(THE D)142.08 175.6 Q
-1.8 -1.14(AT A)-.42 H(STR)4.14 E(UCTURE SPECIFICA)-.36 E(TION SUBLANGU)
-1.14 E -.66(AG)-.72 G(E).66 E/F1 10/Times-Roman@0 SF(Unlik)133 307 Q
2.759(em)-.1 G .259(ost of the sections of this book so f)-2.759 F(ar)
-.1 E 2.759(,t)-.4 G .26(he title of this chapter probably seems mys-)
-2.759 F .778(terious. This is not surprising since it describes a feat\
ure of SETL which is unique and therefore)108 319 R(unf)108 331 Q
(amiliar from the use of other programming languages.)-.1 E .765
(The general idea is the follo)133 347.2 R .765(wing. SETL allo)-.25 F
.765(ws programs to be written without much con-)-.25 F .199
(cern for the detailed data structures required for ef)108 359.2 R .198
(\214cient e)-.25 F -.15(xe)-.15 G .198(cution. F).15 F .198(or e)-.15 F
.198(xample in the curriculum)-.15 F 1.004(planning problem in chapter \
2 \(the topological sort\), the basic data structure w)108 371.2 R 1.004
(as a graph which)-.1 F(sho)108 383.2 Q .635(wed the prerequisite struc\
ture. In most other programming languages, a program using such a)-.25 F
1.033(graph must decide e)108 395.2 R 1.033(xactly ho)-.15 F 3.533(wt)
-.25 G 3.533(or)-3.533 G 1.034
(epresent the graph in the memory of the computer)-3.533 F 3.534(.T)-.55
G 1.034(his is a)-3.534 F .246(rather complicated matter)108 407.2 R
2.746(,a)-.4 G .246(nd there are se)-2.746 F -.15(ve)-.25 G .245
(ral dif).15 F .245(ferent w)-.25 F .245
(ays of representing graphs \(link)-.1 F .245(ed lists,)-.1 F(adjacenc)
108 419.2 Q 3.333(yt)-.15 G .833(ables, bit matrices etc.\) Furthermore\
, once a decision is made on the e)-3.333 F .834(xact manner in)-.15 F
.3(which the data structure should be represented, then the details of \
this representation must be k)108 431.2 R(ept)-.1 E
(in mind throughout the program and the te)108 443.2 Q
(xt of the program re\215ects this choice throughout.)-.15 E .087
(In SETL, such detailed decisions do not ha)133 459.4 R .387 -.15(ve t)
-.2 H 2.588(ob).15 G 2.588(em)-2.588 G .088(ade by the programmer)-2.588
F 2.588(.I)-.55 G 2.588(nt)-2.588 G .088(his particu-)-2.588 F .085
(lar e)108 471.4 R .085(xample, the graph w)-.15 F .085(as simply a set\
 of pairs corresponding to the edges of the graph as read in.)-.1 F
1.636(The programmer did not need to ha)108 483.4 R 1.936 -.15(ve a)-.2
H 1.936 -.15(ny c).15 H 1.636(oncern with the e).15 F 1.637
(xact manner in which the graph)-.15 F -.1(wo)108 495.4 S .017
(uld be represented. This is highly con).1 F -.15(ve)-.4 G .017
(nient from the programmers point of vie).15 F 1.316 -.65(w, s)-.25 H
.016(ince it ob).65 F(vi-)-.15 E .179(ously reduces the amount of w)108
507.4 R .179(ork in writing the program. Ho)-.1 F(we)-.25 E -.15(ve)-.25
G .98 -.4(r, t).15 H .18(here is a penalty paid for this).4 F .467
(approach in terms of reduced e)108 519.4 R -.15(xe)-.15 G .467
(cution ef).15 F(\214cienc)-.25 E 4.267 -.65(y. T)-.15 H .467
(he choice of data structure representations is).65 F 2.992(ad)108 531.4
S .492(elicate task. The choice which leads to the most ef)-2.992 F .493
(\214cient program depends on the e)-.25 F .493(xact opera-)-.15 F 1.355
(tions which are performed and the frequenc)108 543.4 R 3.855(yw)-.15 G
1.354(ith which the v)-3.855 F 1.354(arious operations are performed.)
-.25 F .338(Since the SETL programmer omits this choice, it is left up \
to the compiler)108 555.4 R 2.838(.T)-.55 G .338(he SETL compiler is)
-2.838 F 1.111
(not capable of making the best possible choice since it does not ha)108
567.4 R 1.411 -.15(ve e)-.2 H 1.111(nough information, so it).15 F .592
(chooses rather general representations which ha)108 579.4 R .892 -.15
(ve t)-.2 H .592(he property that the).15 F 3.093(ya)-.15 G .593
(re not disastrously bad,)-3.093 F .444(no matter what operations are p\
erformed. On the other hand these general structures are often not)108
591.4 R(perfect for the particular case at hand and the result is longe\
r than necessary running time.)108 603.4 Q .69(In some cases, this inef)
133 619.6 R(\214cienc)-.25 E 3.19(ym)-.15 G .69(ay not be a problem.)
-3.19 F .691(If a program runs in one second, it)5.691 F .177
(may not matter that it could ha)108 631.6 R .477 -.15(ve r)-.2 H .177
(un in one tenth of a second if better data structure decisions had).15
F .912(been made. If all the programs you write are in this cate)108
643.6 R(gory)-.15 E 3.412(,t)-.65 G .912
(hen you can abandon reading the)-3.412 F .747(rest of this chapter)108
655.6 R 3.247(.O)-.55 G 3.247(nt)-3.247 G .747(he other hand, if you ha)
-3.247 F 1.047 -.15(ve p)-.2 H .747
(rograms which run for a long time, then the).15 F .47(subject matter o\
f this chapter will be of interest, particularly if you are paying for \
your o)108 667.6 R .47(wn com-)-.25 F(puter time!)108 679.6 Q/F2 10
/Times-Bold@0 SF(Chapter 6)108 756 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 89).1 E EP
%%Page: 90 91
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 6)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 90).1 E/F1 10/Times-Roman@0
SF .637(Suppose that we ha)133 130 R .937 -.15(ve a S)-.2 H .637
(ETL program which is running perfectly).15 F 3.136(,b)-.65 G .636
(ut slo)-3.336 F(wly)-.25 E 3.136(,a)-.65 G .636(nd the rea-)-3.136 F
1.39(son for the slo)108 142 R 1.39(wness can be traced t)-.25 F -.1(fa)
6.391 G 1.391(ilure to use ef).1 F 1.391
(\214cient data structure representations. One)-.25 F .993(approach w)
108 154 R .993(ould be to reprogram in some other lo)-.1 F .993(wer le)
-.25 F -.15(ve)-.25 G 3.493(ll).15 G .992
(anguage in which the data structure)-3.493 F .112(representation w)108
166 R .113(ould be under direct control of the programmer)-.1 F 2.613
(.T)-.55 G .113(his w)-2.613 F .113(ould ha)-.1 F .413 -.15(ve t)-.2 H
.313 -.1(wo o).15 H -.15(bv).1 G .113(ious dis-).15 F(adv)108 178 Q
3.606(antages. First)-.25 F 1.106(the sheer ef)3.606 F 1.106
(fort of dealing with another language and recoding the entire pro-)-.25
F .188(gram w)108 190 R .188(ould be a substantial ef)-.1 F .189
(fort. Second, this approach requires that once the data structure rep-)
-.25 F .565(resentation is chosen, it must be k)108 202 R .565
(ept in mind throughout the program and e)-.1 F -.15(ve)-.25 G .565
(ry operation on the).15 F
(structure must be thought out in terms of this representation.)108 214
Q 2.263(The data structure representation sublanguage of SETL pro)133
230.2 R 2.263(vides an alternate approach.)-.15 F .252(Instead of re)108
242.2 R .251(writing the entire program, statements are added which dir\
ect the compiler to use cer)-.25 F(-)-.2 E .51
(tain speci\214c \(and hopefully appropriate\) data structures. Gi)108
254.2 R -.15(ve)-.25 G 3.01(nt).15 G .51
(his information, SETL can gener)-3.01 F(-)-.2 E 1.009(ate a more ef)108
266.2 R 1.009(\214cient program and the compiler assumes the b)-.25 F
1.008(urden of going though the program)-.2 F .574(making the necessary\
 modi\214cations. Assuming that the programmer did indeed specify an ap\
pro-)108 278.2 R 1.148(priate choice, the desired impro)108 290.2 R -.15
(ve)-.15 G 1.148
(ment is thus obtained with a minimum amount of error prone).15 F .974
(clerical w)108 302.2 R .974
(ork on the part of the programmer and with no change to the te)-.1 F
.975(xt of the w)-.15 F .975(orking pro-)-.1 F .382(gram. The general d\
esign of the data structure speci\214cation language is that statements\
 specifying)108 314.2 R .893
(representations cannot change the meaning of the program, the w)108
326.2 R .894(orst that can happen is that the)-.1 F
(program actually runs slo)108 338.2 Q
(wer if an inappropriate choice is made.)-.25 E 1.665
(The concept is thus reasonably straightforw)133 354.4 R 1.665(ard, b)
-.1 F 1.665(ut the details of the representation lan-)-.2 F .98
(guage are technical and the rest of this chapter e)108 366.4 R .981
(xplains them. Ag)-.15 F .981(ain you are in)-.05 F .981
(vited to skip the)-.4 F .033(rest of this chapter if you can li)108
378.4 R .333 -.15(ve w)-.25 H .033(ith the ef).15 F(\214cienc)-.25 E
2.533(yy)-.15 G .032(ou are getting no)-2.533 F 2.532(wu)-.25 G .032
(sing "pure" SETL. If on)-2.532 F(the other hand, your monthly computer\
 bills are causing headaches, then read on!)108 390.4 Q
({to be supplied later})108 414.4 Q EP
%%Page: 91 92
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(CHAPTER 7)270.666 132.4 R(SEMANTIC DEFINITIONS)
232.494 175.6 Q/F1 10/Times-Roman@0 SF 1.014(This chapter contains a mo\
re formal de\214nition of most of the semantics of the SETL lan-)133 307
R .835(guage. As f)108 319 R .835
(ar as possible the de\214nitions are written in SETL.)-.1 F .834
(In those fe)5.834 F 3.334(wc)-.25 G .834(ases where it is not)-3.334 F
.531
(possible to use SETL, a construction called a pseudo-comment is used.)
108 331 R 3.031(Ap)5.531 G .531(seudo-comment is an)-3.031 F .593
(english language description enclosed in the brack)108 343 R .592
(ets /* and */. It may appear in place of a state-)-.1 F 2.211
(ment or e)108 355 R 2.211(xpression and is conceptually replaced by co\
de which carries out the intent of the)-.15 F(description.)108 367 Q
1.108(One pseudo-comment which appears frequently is /*error*/ which im\
plies that an error is)133 383.2 R 1.475(caused. The e)133 395.2 R 1.475
(xact ef)-.15 F 1.475
(fect of such an error depends on the implementation, in most cases,)
-.25 F -.15(exe)133 407.2 S .757
(cution is terminated with an error message.).15 F(Ho)5.756 E(we)-.25 E
-.15(ve)-.25 G 1.556 -.4(r, s).15 H .756(ome implementations may ha).4 F
-.15(ve)-.2 G(the capability of continuing e)133 419.2 Q -.15(xe)-.15 G
(cution after such an error has occured.).15 E/F2 10/Times-Bold@0 SF 2.5
(7.1. T)108 443.2 R(ype T)-.74 E(est Operators)-.92 E F1 .82(Since the \
type test operators are used throughout the de\214nitions of the remain\
ing operators, the)108 459.4 R(y)-.15 E(are de\214ned \214rst.)108 471.4
Q F2(op type)158 495.4 Q F1(\(a\);)2.5 E F2(if)178 507.4 Q F1(a)2.5 E/F3
10/Symbol SF(=)2.5 E F2(om then)2.5 E F1(/*error*/;)2.5 E F2(else)178
519.4 Q -.18(re)198 531.4 S(tur).18 E(n)-.15 E F1 34.72(/* one)108 547.6
R(of the follo)2.5 E(wing strings indicating the type of the operand a:)
-.25 E F2(\264atom' \264boolean' \264integer' \264r)238 559.6 Q
(eal' \264set' \264string' \264tuple')-.18 E(*/ ;)15.17 E(end if;)178
571.6 Q(end op type;)158 583.6 Q .4 LW 202.73 611.8 197.73 611.8 DL
(op is)178 611.8 Q(boolean)5 E F1 59.58(\(a\); $)2.5 F(test ar)2.5 E
(gument is type Boolean)-.18 E F2 -.18(re)190.5 623.8 S(tur).18 E 2.5
(nt)-.15 G(ype)-2.5 E F1(a)2.5 E F3(=)2.5 E F1(')2.5 E F2(boolean';)A
220.79 635.8 215.79 635.8 DL(end op is)178 635.8 Q(boolean;)5 E
(Chapter 7)108 756 Q(The SETL Pr)79.06 E(ogramming Language)-.18 E -.1
(Pa)89.16 G(ge 91).1 E EP
%%Page: 92 93
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 92).1 E .4 LW 202.73 142
197.73 142 DL(op is)178 142 Q(integer)7.5 E/F1 10/Times-Roman@0 SF 62.93
(\(a\); $)B(test ar)2.5 E(gument is type inte)-.18 E(ger)-.15 E F0 -.18
(re)190.5 154 S(tur).18 E 2.5(nt)-.15 G(ype)-2.5 E F1(a)2.5 E/F2 10
/Symbol SF(=)2.5 E F1(')2.5 E F0(integer';)A 220.79 166 215.79 166 DL
(end op is)178 166 Q(integer;)7.5 E 202.73 190 197.73 190 DL(op is)178
190 Q -.18(re)5 G(al).18 E F1 78.94(\(a\); $)B(test ar)2.5 E
(gument is type real)-.18 E F0 -.18(re)190.5 202 S(tur).18 E 2.5(nt)-.15
G(ype)-2.5 E F1(a)2.5 E F2(=)2.5 E F1(')2.5 E F0 -.18(re)C(al';).18 E
220.79 214 215.79 214 DL(end op is)178 214 Q -.18(re)5 G(al;).18 E
202.73 238 197.73 238 DL(op is)178 238 Q(string)5 E F1 70.42(\(a\); $)B
(test ar)2.5 E(gument is type string)-.18 E F0 -.18(re)190.5 250 S(tur)
.18 E 2.5(nt)-.15 G(ype)-2.5 E F1(a)2.5 E F2(=)2.5 E F1(')2.5 E F0
(string';)A 220.79 262 215.79 262 DL(end op is)178 262 Q(string;)5 E
202.73 286 197.73 286 DL(op is)178 286 Q(atom)5 E F1 73.76(\(a\); $)B
(test ar)2.5 E(gument is type atom)-.18 E F0 -.18(re)190.5 298 S(tur).18
E 2.5(nt)-.15 G(ype)-2.5 E F1(a)2.5 E F2(=)2.5 E F1(')2.5 E F0(atom';)A
220.79 310 215.79 310 DL(end op is)178 310 Q(atom;)5 E 202.73 334 197.73
334 DL(op is)178 334 Q(tuple)5 E F1 73.75(\(a\); $)B(test ar)2.5 E
(gument is type tuple)-.18 E F0 -.18(re)190.5 346 S(tur).18 E 2.5(nt)
-.15 G(ype)-2.5 E F1(a)2.5 E F2(=)2.5 E F1(')2.5 E F0(tuple';)A 220.79
358 215.79 358 DL(end op is)178 358 Q(tuple;)5 E 202.73 382 197.73 382
DL(op is)178 382 Q(set)5 E F1 83.76(\(a\); $)B(test ar)2.5 E
(gument is type set)-.18 E F0 -.18(re)190.5 394 S(tur).18 E 2.5(nt)-.15
G(ype)-2.5 E F1(a)2.5 E F2(=)2.5 E F1(')2.5 E F0(set';)A 220.79 406
215.79 406 DL(end op is)178 406 Q(set;)5 E 202.73 430 197.73 430 DL
(op is)178 430 Q(max)5 E F1 77.09(\(a\); $)B(test ar)2.5 E
(gument has form of map)-.18 E 210.78 442 205.78 442 DL F0(if is)190.5
442 Q(set)5 E F1(a)2.5 E F0(then)2.5 E -.18(re)178 454 S(tur).18 E 2.5
(nf)-.15 G(orall)-2.75 E F1(x)2.5 E F0(in)2.5 E F1 2.5(a|)2.5 G 212.17
466 207.17 466 DL F0 2.5(is tuple)200.5 466 R F1(x)2.5 E F0(and)2.5 E F1
(#x)2.5 E F2(=)2.5 E F1(2;)2.5 E F0(else)190.5 478 Q -.18(re)195.5 490 S
(tur).18 E 2.5(nf)-.15 G(alse;)-2.5 E(end if;)190.5 502 Q 220.79 514
215.79 514 DL(end op is)178 514 Q(map)5 E F1(;)A F0 2.5(7.2. Operator)
108 554.2 R(De\214nitions)2.5 E F1 .015
(This section contains SETL de\214nitions of the SETL operators.)133
570.4 R .014(The de\214nitions are written in)5.014 F
(standard SETL with three minor e)108 582.4 Q(xtensions as follo)-.15 E
(ws:)-.25 E .068(The names of the operators which appear in these OP de\
\214nitions are the actual operator names and)108 598.6 R
(do not meet the normal requirements for declared operator names.)108
610.6 Q .18(In some cases)108 626.8 R F0(\(fr)2.68 E .18(om, fr)-.18 F
.18(omb, fr)-.18 F(ome\),)-.18 E F1 .179(the ar)2.679 F .179
(guments are speci\214ed as)-.18 F F0(wr)2.679 E F1 .179(\(write\) or)
2.679 F F0(rw)2.679 E F1(\(read/write\).)2.679 E .348(In a fe)133 643 R
2.848(wc)-.25 G .348(ases \(e.g. real multiplication\), the semantics o\
f the operator cannot be speci\214ed in)-2.848 F(SETL. In such cases, a\
 pseudo-comment is used to specify the intended result.)108 655 Q EP
%%Page: 93 94
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 93).1 E(op)120.5 130 Q/F1
10/Times-Roman@0 SF(+\(a\);)2.5 E F0(case of)125.5 142 Q .4 LW 140.5 154
135.5 154 DL 2.5(\(is integer)125.5 154 R F1 121.65(a\): $)2.5 F(inte)
2.5 E(ger af)-.15 E(\214rmation)-.25 E F0 -.18(re)135.5 166 S(tur).18 E
(n)-.15 E F1(a;)2.5 E(\()125.5 178 Q 140.5 178 135.5 178 DL F0 2.5(is r)
128.83 178 R(eal)-.18 E F1 135.16(a\): $)2.5 F(real af)2.5 E
(\214rmation)-.25 E F0 -.18(re)135.5 190 S(tur).18 E(n)-.15 E F1(a;)2.5
E F0(else)125.5 202 Q F1(/*error*/;)2.5 E F0(end case;)125.5 214 Q
(end op)120.5 226 Q F1(+;)2.5 E F0(op)120.5 250 Q F1(+\(a,b\);)2.5 E F0
(case of)125.5 262 Q 140.5 274 135.5 274 DL 2.5(\(is integer)125.5 274 R
F1(a)2.5 E 210.22 274 205.22 274 DL F0(and is)179.93 274 Q(integer)5 E
F1 51.37(b\): $)2.5 F(inte)2.5 E(ger addition)-.15 E F0 -.18(re)135.5
286 S(tur).18 E(n)-.15 E F1 2.5(a--)2.5 G(b;)-2.5 E(\()125.5 298 Q 140.5
298 135.5 298 DL F0 2.5(is r)128.83 298 R(eal)-.18 E F1(a)2.5 E 196.71
298 191.71 298 DL F0(and is)166.42 298 Q -.18(re)5 G(al).18 E F1 78.39
(b\): $)2.5 F(real addition)2.5 E F0 -.18(re)135.5 310 S(tur).18 E(n)
-.15 E F1 2.5(a--)2.5 G(b;)-2.5 E(\()125.5 322 Q 140.5 322 135.5 322 DL
F0 2.5(is string)128.83 322 R F1(a)2.5 E 205.23 322 200.23 322 DL F0
(and is)174.94 322 Q(string)5 E F1 61.35(b\): $)2.5 F
(string concatenation)2.5 E F0 -.18(re)135.5 334 S(tur).18 E(n)-.15 E F1
(/* concatenation of a and b */;)2.5 E(\()125.5 346 Q 140.5 346 135.5
346 DL F0 2.5(is tuple)128.83 346 R F1(a)2.5 E 201.9 346 196.9 346 DL F0
(and is)171.61 346 Q(tuple)5 E F1 68.01(b\): $)2.5 F
(tuple concatenation)2.5 E 2.5(x:)135.5 358 S/F2 10/Symbol SF(=)-2.5 E
F1(a;)2.5 E(\()135.5 370 Q F0 -.25(fo)C(r).25 E F1(i)2.5 E F0(in)2.5 E
F1([1..#b]\))2.5 E(x\(#a + i\) :)143 382 Q F2(=)A F1(b\(i\);)2.5 E F0
(end f)135.5 394 Q(or)-.25 E F1(i;)2.5 E F0 -.18(re)135.5 406 S(tur).18
E(n)-.15 E F1(x;)2.5 E(\()125.5 418 Q 140.5 418 135.5 418 DL F0 2.5
(is set)128.83 418 R F1(a)2.5 E 191.89 418 186.89 418 DL F0(and is)161.6
418 Q(set)5 E F1 88.03(b\): $)2.5 F(set union)2.5 E F0 -.18(re)135.5 430
S(tur).18 E(n)-.15 E F1(\(a)2.5 E F0(with)2.5 E F1 2.5(/{)C 2.5(x:x)-2.5
G F0(in)A F1(b}\);)2.5 E F0(else)125.5 442 Q F1(/*error*/;)2.5 E F0
(end case;)125.5 454 Q(end op)120.5 466 Q F1(+;)2.5 E F0(op)120.5 490 Q
F1(-\(a\);)2.5 E F0(case of)125.5 502 Q 140.5 514 135.5 514 DL 2.5
(\(is integer)125.5 514 R F1 121.65(a\): $)2.5 F(inte)2.5 E(ger ne)-.15
E -.05(ga)-.15 G(tion).05 E F0 -.18(re)135.5 526 S(tur).18 E(n)-.15 E F1
2.5(0-a)2.5 G(;)-2.5 E(\()125.5 538 Q 140.5 538 135.5 538 DL F0 2.5
(is r)128.83 538 R(eal)-.18 E F1 135.16(a\): $)2.5 F(real ne)2.5 E -.05
(ga)-.15 G(tion).05 E F0 -.18(re)135.5 550 S(tur).18 E(n)-.15 E F1
(0.0 - a;)2.5 E F0(else)125.5 562 Q F1(/*error*/;)2.5 E F0(end case;)
125.5 574 Q(end op)120.5 586 Q F1(-;)2.5 E F0(op)120.5 610 Q F1
(-\(a,b\);)2.5 E F0(case of)125.5 622 Q 140.5 634 135.5 634 DL 2.5
(\(is integer)125.5 634 R F1(a)2.5 E 210.22 634 205.22 634 DL F0(and is)
179.93 634 Q(integer)5 E F1 51.37(b\): $)2.5 F(inte)2.5 E
(ger subtraction)-.15 E EP
%%Page: 94 95
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 94).1 E -.18(re)135.5 130 S
(tur).18 E(n)-.15 E/F1 10/Times-Roman@0 SF(/* inte)2.5 E(ger dif)-.15 E
(ference a-b */;)-.25 E(\()125.5 142 Q .4 LW 140.5 142 135.5 142 DL F0
2.5(is r)128.83 142 R(eal)-.18 E F1(a)2.5 E 196.71 142 191.71 142 DL F0
(and is)166.42 142 Q -.18(re)5 G(al).18 E F1 78.39(b\): $)2.5 F
(real subtraction)2.5 E F0 -.18(re)135.5 154 S(tur).18 E(n)-.15 E F1
(/* real dif)2.5 E(ference a-b */;)-.25 E(\()125.5 166 Q 140.5 166 135.5
166 DL F0 2.5(is set)128.83 166 R F1(a)2.5 E 191.89 166 186.89 166 DL F0
(and is)161.6 166 Q(set)5 E F1 88.03(b\): $)2.5 F(set dif)2.5 E(ference)
-.25 E F0 -.18(re)135.5 178 S(tur).18 E(n)-.15 E F1(\(a)2.5 E F0(less)
2.5 E F1 2.5(/x:x)C F0(in)A F1(b\);)2.5 E F0(else)125.5 190 Q F1
(/*error*/;)2.5 E F0(end case;)125.5 202 Q(end op)120.5 214 Q F1(-;)2.5
E F0(op)120.5 238 Q F1(*\(a,b\);)2.5 E F0(case of)125.5 250 Q 140.5 262
135.5 262 DL 2.5(\(is integer)125.5 262 R F1(a)2.5 E 210.22 262 205.22
262 DL F0(and is)179.93 262 Q(integer)5 E F1 51.37(b\): $)2.5 F(inte)2.5
E(ger multiplication)-.15 E 2.5(x:)125.5 274 S/F2 10/Symbol SF(=)-2.5 E
F1(\(0 +/ a : 1..)2.5 E F0(abs)A F1(b\);)2.5 E F0 -.18(re)135.5 286 S
(tur).18 E 2.5(ni)-.15 G(f)-2.5 E F1(b>)2.5 E F2(=)A F1(0)A F0(then)2.5
E F1(x)2.5 E F0(else)2.5 E F1(-x)2.5 E F0(end;)2.5 E 140.5 298 135.5 298
DL 2.5(\(is r)125.5 298 R(eal)-.18 E F1(a)2.5 E 196.71 298 191.71 298 DL
F0(and is)166.42 298 Q -.18(re)5 G(al).18 E F1 78.39(b\): $)2.5 F
(real multiplication)2.5 E F0 -.18(re)135.5 310 S(tur).18 E(n)-.15 E F1
(/* real product a*b */;)2.5 E(\()125.5 322 Q 140.5 322 135.5 322 DL F0
2.5(is set)128.83 322 R F1(a)2.5 E 191.89 322 186.89 322 DL F0(and is)
161.6 322 Q(set)5 E F1 88.03(b\): $)2.5 F(set intersection)2.5 E F0 -.18
(re)135.5 334 S(tur).18 E(n)-.15 E F1({x : x)2.5 E F0(in)2.5 E F1 2.5
(a|x)2.5 G F0(in)A F1(b};)2.5 E(\()125.5 346 Q 140.5 346 135.5 346 DL F0
2.5(is string)128.83 346 R F1(a)2.5 E 205.23 346 200.23 346 DL F0
(and is)174.94 346 Q(integer)5 E F1 56.36(b\): $)2.5 F
(string duplication)2.5 E F0(if)135.5 358 Q F1 2.5(b<0)2.5 G F0(then)A
F1(/*error*/;)2.5 E F0(end if;)2.5 E -.18(re)135.5 370 S(tur).18 E(n)
-.15 E F1 1.48 -.74('' +)2.5 H 2.5(/[).74 G 2.5(a:i)-2.5 G F0(in)A F1
({1..b}];)2.5 E(\()125.5 382 Q 140.5 382 135.5 382 DL F0 2.5(is integer)
128.83 382 R F1(a)2.5 E 210.22 382 205.22 382 DL F0(and is)179.93 382 Q
(string)5 E F1 56.36(b\): $)2.5 F(string duplication)2.5 E F0(if)135.5
394 Q F1 2.5(a<0)2.5 G F0(then)A F1(/*error*/;)2.5 E F0(end if;)2.5 E
-.18(re)135.5 406 S(tur).18 E(n)-.15 E F1 1.48 -.74('' +)2.5 H 2.5(/[)
.74 G 2.5(b:i)-2.5 G F0(in)A F1({1..a}];)2.5 E(\()125.5 418 Q 140.5 418
135.5 418 DL F0 2.5(is tuple)128.83 418 R F1(a)2.5 E 201.9 418 196.9 418
DL F0(and is)171.61 418 Q(integer)5 E F1 59.69(b\): $)2.5 F
(tuple duplication)2.5 E F0(if)135.5 430 Q F1 2.5(b<0)2.5 G F0(then)A F1
(/*error*/;)2.5 E F0(end if;)2.5 E F1 2.5(x:)135.5 442 S F2(=)-2.5 E F1
1.666([])2.5 G(;)-1.666 E(\()125.5 454 Q F0 -.25(fo)C(r).25 E F1(i)2.5 E
F0(in)2.5 E F1([1..#b]\))2.5 E 2.5(j:)143 466 S F2(=)-2.5 E F1(#x;)2.5 E
(\()143 478 Q F0 -.25(fo)C(r).25 E F1(k)2.5 E F0(in)2.5 E F1([1..#a]\))
2.5 E(x\(j + k\) :)148 490 Q F2(=)A F1(a\(k\);)2.5 E F0(end f)143 502 Q
(or)-.25 E F1(k;)2.5 E F0(end f)135.5 514 Q(or)-.25 E F1(i;)2.5 E F0
-.18(re)135.5 526 S(tur).18 E(n)-.15 E F1(x;)2.5 E(\()125.5 538 Q 140.5
538 135.5 538 DL F0 2.5(is integer)128.83 538 R F1(a)2.5 E 210.22 538
205.22 538 DL F0(and is)179.93 538 Q(tuple)5 E F1 59.69(b\): $)2.5 F
(tuple duplication)2.5 E F0 -.18(re)135.5 550 S(tur).18 E(n)-.15 E F1
2.5(b*a)2.5 G(;)-2.5 E F0(else)125.5 562 Q F1(/*error*/;)2.5 E F0
(end case;)125.5 574 Q(end op)120.5 586 Q F1(*;)2.5 E F0(op)120.5 610 Q
F1(/\(a,b\);)2.5 E F0(case of)125.5 622 Q 140.5 634 135.5 634 DL 2.5
(\(is integer)125.5 634 R F1(a)2.5 E 210.22 634 205.22 634 DL F0(and is)
179.93 634 Q(integer)5 E F1 51.37(b\): $)2.5 F(inte)2.5 E(ger di)-.15 E
(vision, real quotient)-.25 E F0 -.18(re)135.5 646 S(tur).18 E 2.5<6e8d>
-.15 G(oat)-2.5 E F1 2.5(a/)2.5 G F0(\215oat)A F1(b;)2.5 E(\()125.5 658
Q 140.5 658 135.5 658 DL F0 2.5(is r)128.83 658 R(eal)-.18 E F1(a)2.5 E
196.71 658 191.71 658 DL F0(and is)166.42 658 Q -.18(re)5 G(al).18 E F1
78.39(b\): $)2.5 F(real di)2.5 E(vision)-.25 E EP
%%Page: 95 96
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 95).1 E -.18(re)135.5 130 S
(tur).18 E(n)-.15 E/F1 10/Times-Roman@0 SF(/* quotient a/b */;)2.5 E F0
(else)125.5 142 Q F1(/*error*/;)2.5 E F0(end op)120.5 154 Q F1(/;)2.5 E
F0(op)120.5 178 Q F1(**\(a,b\);)2.5 E F0(case of)125.5 190 Q .4 LW 140.5
202 135.5 202 DL 2.5(\(is integer)125.5 202 R F1(a)2.5 E 210.22 202
205.22 202 DL F0(and is)179.93 202 Q(integer)5 E F1 51.37(b\): $)2.5 F
(inte)2.5 E(ger e)-.15 E(xponentiation)-.15 E F0(if)135.5 214 Q F1 2.5
(b<0)2.5 G F0(then)A F1(/*error*/;)2.5 E F0(end if;)2.5 E -.18(re)135.5
226 S(tur).18 E(n)-.15 E F1(\(1 */ a : 1..b\);)2.5 E(\()125.5 238 Q
140.5 238 135.5 238 DL F0 2.5(is r)128.83 238 R(eal)-.18 E F1(a)2.5 E
196.71 238 191.71 238 DL F0(and is)166.42 238 Q(integer)5 E F1 64.88
(b\): $)2.5 F(real to po)2.5 E(wer of inte)-.25 E(ger)-.15 E F0(if)135.5
250 Q F1 2.5(b<0)2.5 G F0(then)A F1(/*error*/;)2.5 E F0(end if;)2.5 E
-.18(re)135.5 262 S(tur).18 E(n)-.15 E F1(\(1.0 */ a : 1..b\);)2.5 E F0
(else)125.5 274 Q F1(/*error*/;)2.5 E F0(end case;)125.5 286 Q(end op)
120.5 298 Q F1(**;)2.5 E F0(op)120.5 322 Q F1 145.81(?\(a,b\); $)2.5 F
(unde\214ned interrog)2.5 E(ation)-.05 E F0(case of)125.5 334 Q F1
(\(a /)125.5 346 Q/F2 10/Symbol SF(=)A F0(om)2.5 E F1(\):)A F0 -.18(re)
135.5 358 S(tur).18 E(n)-.15 E F1(a;)2.5 E(\(a)125.5 370 Q F2(=)2.5 E F0
(om)2.5 E F1(\):)A F0 -.18(re)135.5 382 S(tur).18 E(n)-.15 E F1(b;)2.5 E
F0(end case;)125.5 394 Q(end op)120.5 406 Q F1(?;)2.5 E F0(op)120.5 430
Q F1(#\(a\);)2.5 E F0(case of)125.5 442 Q 140.5 454 135.5 454 DL 2.5
(\(is string)125.5 454 R F1 126.64(a\): $)2.5 F(length of string)2.5 E
2.5(x:)135.5 466 S F2(=)-2.5 E F1(0;)2.5 E(\()135.5 478 Q F0 -.25(fo)C
(r).25 E F1(y)2.5 E F0(in)2.5 E F1(a\) x +:)2.5 E F2(=)A F1(1;)2.5 E F0
(end;)2.5 E -.18(re)135.5 490 S(tur).18 E(n)-.15 E F1(x;)2.5 E(\()125.5
502 Q 140.5 502 135.5 502 DL F0 2.5(is set)128.83 502 R F1 139.98
(a\): $)2.5 F(cardinality of set)2.5 E 2.5(x:)135.5 514 S F2(=)-2.5 E F1
(0;)2.5 E(\()135.5 526 Q F0 -.25(fo)C(r).25 E F1(y)2.5 E F0(in)2.5 E F1
(a\) x +:)2.5 E F2(=)A F1(1;)2.5 E F0(end;)2.5 E -.18(re)135.5 538 S
(tur).18 E(n)-.15 E F1(x;)2.5 E(\()125.5 550 Q 140.5 550 135.5 550 DL F0
2.5(is tuple)128.83 550 R F1 129.97(a\): $)2.5 F(length of tuple)2.5 E
2.5(x:)135.5 562 S F2(=)-2.5 E F1(0;)2.5 E(\()135.5 574 Q F0 -.25(fo)C
(r).25 E F1(y)2.5 E F0(in)2.5 E F1(a\) x +:)2.5 E F2(=)A F1(1;)2.5 E F0
(end;)2.5 E -.18(re)135.5 586 S(tur).18 E(n)-.15 E F1(x;)2.5 E F0(else)
125.5 598 Q F1(/*error*/;)2.5 E F0(end case;)125.5 610 Q(end op)120.5
622 Q F1(#;)2.5 E F0(op)120.5 646 Q F2(=)2.5 E F1 144.76(\(a,b\); $)B
(equality test)2.5 E F0(case)125.5 658 Q F1(a)2.5 E F0(of)2.5 E EP
%%Page: 96 97
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 96).1 E/F1 10/Times-Roman@0
SF(\(b\):)125.5 130 Q F0 -.18(re)135.5 142 S(tur).18 E(n)-.15 E F1(TR)
2.5 E(UE;)-.4 E F0(else)125.5 154 Q -.18(re)135.5 166 S(tur).18 E(n)-.15
E F1 -.74(FA)2.5 G(LSE;).74 E F0(end case;)125.5 178 Q(end op)120.5 190
Q/F2 10/Symbol SF(=)2.5 E F1(;)A F0(op)120.5 214 Q F1(/)2.5 E F2(=)A F1
(\(a,b\);)A F0 -.18(re)125.5 226 S(tur).18 E 2.5(ni)-.15 G(f)-2.5 E F1
(a)2.5 E F2(=)2.5 E F1(b)2.5 E F0(then)2.5 E F1 -.74(FA)2.5 G(LSE).74 E
F0(else)2.5 E F1(TR)2.5 E(UE)-.4 E F0(end;)2.5 E(end op)120.5 238 Q F1
(/)2.5 E F2(=)A F1(;)A F0(op)120.5 262 Q F1(<\(a,b\);)2.5 E F0(case of)
125.5 274 Q .4 LW 140.5 286 135.5 286 DL 2.5(\(is integer)125.5 286 R F1
(a)2.5 E 210.22 286 205.22 286 DL F0(and is)179.93 286 Q(integer)5 E F1
51.37(b\): $)2.5 F(inte)2.5 E(ger less than)-.15 E F0(if)138 298 Q F1
(/* a less)2.5 E F0(then)2.5 E F1 2.5(b*)2.5 G(/)-2.5 E F0(then)2.5 E
-.18(re)150.5 310 S(tur).18 E(n)-.15 E F1(TR)2.5 E(UE;)-.4 E F0(else)138
322 Q -.18(re)150.5 334 S(tur).18 E(n)-.15 E F1 -.74(FA)2.5 G(LSE;).74 E
F0(end if;)138 346 Q 140.5 358 135.5 358 DL 2.5(\(is r)125.5 358 R(eal)
-.18 E F1(a)2.5 E 196.71 358 191.71 358 DL F0(and is)166.42 358 Q -.18
(re)5 G(al).18 E F1 78.39(b\): $)2.5 F(real less than)2.5 E F0(if)138
370 Q F1(/* a less than b */)2.5 E F0(then)2.5 E -.18(re)150.5 382 S
(tur).18 E(n)-.15 E F1(TR)2.5 E(UE;)-.4 E F0(else)138 394 Q -.18(re)
150.5 406 S(tur).18 E(n)-.15 E F1 -.74(FA)2.5 G(LSE;).74 E F0(end if;)
138 418 Q 140.5 430 135.5 430 DL 2.5(\(is string)125.5 430 R F1(a)2.5 E
F0(and)2.5 E 205.23 430 200.23 430 DL F1 2.5(is string)193.56 430 R
63.57(b\): $)2.5 F(string less than)2.5 E F0(if)138 442 Q F1(a)2.5 E F2
(=)2.5 E F1 -.74('')2.5 G F0(then)3.24 E -.18(re)150.5 454 S(tur).18 E
(n)-.15 E F1 2.5(b/)2.5 G F2(=)-2.5 E F1 -.74('')2.5 G(;).74 E F0
(elseif)138 466 Q F1(b)2.5 E F2(=)2.5 E F1 -.74('')2.5 G F0(then)3.24 E
-.18(re)150.5 478 S(tur).18 E(n)-.15 E F1 -.74(FA)2.5 G(LSE;).74 E F0
(else)145.5 490 Q(case of)143 502 Q F1(\(a\(1\))143 514 Q F2(=)2.5 E F1
(b\(1\)\):)2.5 E F0 -.18(re)150.5 526 S(tur).18 E(n)-.15 E F1
(a\(2..\) < b\(2..\);)2.5 E(\(/* a\(1\) precedes b\(1\) in order */\):)
143 538 Q F0 -.18(re)150.5 550 S(tur).18 E(n)-.15 E F1(TR)2.5 E(UE;)-.4
E F0(else)145.5 562 Q -.18(re)150.5 574 S(tur).18 E(n)-.15 E F1 -.74(FA)
2.5 G(LSE;).74 E F0(end case;)143 586 Q(end if;)138 598 Q(else)125.5 610
Q F1(/*error*/;)2.5 E F0(end case;)125.5 622 Q(end op)120.5 634 Q F1(<;)
2.5 E F0(op)120.5 658 Q F1(<)2.5 E F2(=)A F1(\(a,b\);)A EP
%%Page: 97 98
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 97).1 E(case of)125.5 130 Q
.4 LW 140.5 142 135.5 142 DL 2.5(\(is integer)125.5 142 R/F1 10
/Times-Roman@0 SF(a)2.5 E 210.22 142 205.22 142 DL F0(and is)179.93 142
Q(integer)5 E F1 51.37(b\): $)2.5 F(inte)2.5 E(ger less or equals)-.15 E
F0 -.18(re)138 154 S(tur).18 E(n)-.15 E F1(a<b)2.5 E F0(or)2.5 E F1(a)
2.5 E/F2 10/Symbol SF(=)A F1(b;)A(\()125.5 166 Q 140.5 166 135.5 166 DL
F0 2.5(is r)128.83 166 R(eal)-.18 E F1(a)2.5 E 196.71 166 191.71 166 DL
F0(and is)166.42 166 Q -.18(re)5 G(al).18 E F1 78.39(b\): $)2.5 F
(real less than or equals)2.5 E F0 -.18(re)138 178 S(tur).18 E(n)-.15 E
F1(a<b)2.5 E F0(or)2.5 E F1(a)2.5 E F2(=)A F1(b;)A(\()125.5 190 Q 140.5
190 135.5 190 DL F0 2.5(is string)128.83 190 R F1(a)2.5 E 205.23 190
200.23 190 DL F0(and is)174.94 190 Q(string)5 E F1 61.35(b\): $)2.5 F
(string less than or equals)2.5 E F0 -.18(re)138 202 S(tur).18 E(n)-.15
E F1(a<b)2.5 E F0(or)2.5 E F1(a)2.5 E F2(=)A F1(b;)A F0(end case;)125.5
214 Q(end op)120.5 226 Q F1(<)2.5 E F2(=)A F1(;)A F0(op)120.5 250 Q F1
(>\(a,b\):)2.5 E F0(case of)125.5 262 Q 140.5 274 135.5 274 DL 2.5
(\(is integer)125.5 274 R F1(a)2.5 E 210.22 274 205.22 274 DL F0(and is)
179.93 274 Q(integer)5 E F1 51.37(b\): $)2.5 F(inte)2.5 E
(ger greater than)-.15 E F0 -.18(re)138 286 S(tur).18 E(n)-.15 E F1 2.5
(b<a)2.5 G(;)-2.5 E(\()125.5 298 Q 140.5 298 135.5 298 DL F0 2.5(is r)
128.83 298 R(eal)-.18 E F1(a)2.5 E 196.71 298 191.71 298 DL F0(and is)
166.42 298 Q -.18(re)5 G(al).18 E F1 78.39(b\): $)2.5 F
(real greater than)2.5 E F0 -.18(re)138 310 S(tur).18 E(n)-.15 E F1 2.5
(b<a)2.5 G(;)-2.5 E(\()125.5 322 Q 140.5 322 135.5 322 DL F0 2.5
(is string)128.83 322 R F1(a)2.5 E 205.23 322 200.23 322 DL F0(and is)
174.94 322 Q(string)5 E F1 61.35(b\): $)2.5 F(string greater than)2.5 E
F0 -.18(re)138 334 S(tur).18 E(n)-.15 E F1 2.5(b<a)2.5 G(;)-2.5 E F0
(else)125.5 346 Q F1(/*error*/;)2.5 E F0(end case;)125.5 358 Q(end op)
120.5 370 Q F1(>;)2.5 E F0(op)120.5 394 Q F1(>)2.5 E F2(=)A F1(\(a,b\):)
A F0(case of)125.5 406 Q 140.5 418 135.5 418 DL 2.5(\(is integer)125.5
418 R F1(a)2.5 E 210.22 418 205.22 418 DL F0(and is)179.93 418 Q
(integer)5 E F1 51.37(b\): $)2.5 F(inte)2.5 E(ger greater or equals)-.15
E F0 -.18(re)138 430 S(tur).18 E(n)-.15 E F1(a>b)2.5 E F0(or)2.5 E F1(a)
2.5 E F2(=)A F1(b;)A(\()125.5 442 Q 140.5 442 135.5 442 DL F0 2.5(is r)
128.83 442 R(eal)-.18 E F1(a)2.5 E 196.71 442 191.71 442 DL F0(and is)
166.42 442 Q -.18(re)5 G(al).18 E F1 78.39(b\): $)2.5 F
(real greater or equals)2.5 E F0 -.18(re)138 454 S(tur).18 E(n)-.15 E F1
(a>b)2.5 E F0(or)2.5 E F1(a)2.5 E F2(=)A F1(b;)A(\()125.5 466 Q 140.5
466 135.5 466 DL F0 2.5(is string)128.83 466 R F1(a)2.5 E 205.23 466
200.23 466 DL F0(and is)174.94 466 Q(string)5 E F1 61.35(b\): $)2.5 F
(string greater or equals)2.5 E F0 -.18(re)138 478 S(tur).18 E(n)-.15 E
F1(a>b)2.5 E F0(or)2.5 E F1(a)2.5 E F2(=)A F1(b;)A F0(else)125.5 490 Q
F1(/*error*/;)2.5 E F0(end case;)125.5 502 Q(end op)120.5 514 Q F1(>)2.5
E F2(=)A F1(;)A F0(op abs)120.5 538 Q F1(\(a\);)A F0(case of)125.5 550 Q
140.5 562 135.5 562 DL 2.5(\(is integer)125.5 562 R F1 121.65(a\): $)2.5
F(absolute v)2.5 E(alue of inte)-.25 E(ger)-.15 E F0(case of)138 574 Q
F1(\(a < 0\):)138 586 Q F0 -.18(re)138 598 S(tur).18 E(n)-.15 E F1(-a;)
2.5 E(\(a >)138 610 Q F2(=)A F1(0\):)2.5 E F0 -.18(re)145.5 622 S(tur)
.18 E(n)-.15 E F1(a;)2.5 E F0(end case;)138 634 Q 140.5 646 135.5 646 DL
2.5(\(is r)125.5 646 R(eal)-.18 E F1 135.16(a\): $)2.5 F(absolute v)2.5
E(alue of real)-.25 E F0(case of)138 658 Q EP
%%Page: 98 99
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 98).1 E/F1 10/Times-Roman@0
SF(\(a < 0.0\):)138 130 Q F0 -.18(re)145.5 142 S(tur).18 E(n)-.15 E F1
(-a;)2.5 E(\(a >)138 154 Q/F2 10/Symbol SF(=)A F1(0.0\):)2.5 E F0 -.18
(re)145.5 166 S(tur).18 E(n)-.15 E F1(a;)2.5 E F0(end case;)138 178 Q .4
LW 140.5 190 135.5 190 DL 2.5(\(is string)125.5 190 R F1 126.64(a\): $)
2.5 F(absolute v)2.5 E(alue of string)-.25 E F0(if)138 202 Q F1(#a /)2.5
E F2(=)A F1(1)2.5 E F0(then)2.5 E F1(/*error*/;)145.5 214 Q F0(else)138
226 Q F1(return /* inte)145.5 238 Q(ger code for a */;)-.15 E F0
(end if;)138 250 Q(else)125.5 262 Q F1(/*error*/;)2.5 E F0(end case;)
125.5 274 Q(end op abs;)120.5 286 Q(op and)120.5 310 Q F1 134.13
(\(a,b\): $)B(logical and)2.5 E F0(case of)125.5 322 Q F1(\(a)125.5 334
Q F2(=)2.5 E F1 -.74(FA)2.5 G(LSE\);).74 E 2.5($s)307.69 346 S(kip e)
-2.5 E -.25(va)-.25 G(luation of b and).25 E F0 -.18(re)138 358 S(tur)
.18 E(n)-.15 E F1 -.74(FA)2.5 G(LSE;).74 E(\(a)125.5 370 Q F2(=)2.5 E F1
(TR)2.5 E(UE\):)-.4 E 2.5($e)307.69 382 S -.25(va)-2.75 G
(luate b and do).25 E F0(case of)138 394 Q F1(\(b)138 406 Q F2(=)2.5 E
F1(TR)2.5 E(UE\):)-.4 E F0 -.18(re)145.5 418 S(tur).18 E(n)-.15 E F1(TR)
2.5 E(UE;)-.4 E(\(b)138 430 Q F2(=)2.5 E F1 -.74(FA)2.5 G(LSE\):).74 E
F0 -.18(re)145.5 442 S(tur).18 E(n)-.15 E F1 -.74(FA)2.5 G(LSE;).74 E F0
(else)138 454 Q F1(/*error*/;)2.5 E F0(end case;)138 466 Q(else)135.5
478 Q F1(/*error*/;)2.5 E F0(end case;)128 490 Q(end op and;)120.5 502 Q
(op arb)120.5 526 Q F1(\(a\);)A F0(case of)128 538 Q 143 550 138 550 DL
2.5(\(is set)128 550 R F1 137.48(a\): $)2.5 F(arbitrary element of set)
2.5 E F0(if)138 562 Q F1(a)2.5 E F2(=)2.5 E F1 1.666({})2.5 G F0(then)
.834 E -.18(re)145.5 574 S(tur).18 E 2.5(no)-.15 G(m;)-2.5 E(else)138
586 Q -.18(re)145.5 598 S(tur).18 E(n)-.15 E F1
(/* arbitrary element from a */;)2.5 E F0(end if;)138 610 Q(else)128 622
Q F1(/*error*/;)2.5 E F0(end case;)128 634 Q(end op arb;)120.5 646 Q EP
%%Page: 99 100
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)89.16 G(ge 99).1 E/F1 10/Times-Roman@0
SF(op ceil\(a\);)120.5 130 Q F0(case of)128 142 Q .4 LW 143 154 138 154
DL 2.5(\(is r)128 154 R(eal)-.18 E F1 98.18(a\): $)2.5 F
(ceiling of real)2.5 E F0(case of)138 166 Q F1(\(a < 0.0\):)138 178 Q F0
(loop init)145.5 190 Q F1 2.5(x:)2.5 G/F2 10/Symbol SF(=)-2.5 E F1(0;)
2.5 E F0(doing)2.5 E F1 2.5(x-)2.5 G(:)-2.5 E F2(=)A F1(1;)2.5 E F0(do)
2.5 E(if \215oat)150.5 202 Q F1 2.5(x<a)2.5 G F0(then r)A(etur)-.18 E(n)
-.15 E F1 2.5(x+1)2.5 G(;)-2.5 E F0(end loop)145.5 214 Q F1(;)A(\(a >)
138 226 Q F2(=)A F1(0.0\):)2.5 E F0(loop init)145.5 238 Q F1 2.5(x:)2.5
G F2(=)-2.5 E F1(0;)2.5 E F0(doing)2.5 E F1 2.5(x+)2.5 G(:)-2.5 E F2(=)A
F1(1;)2.5 E F0(do)2.5 E(if \215oat)150.5 250 Q F1 2.5(x>)2.5 G F2(=)-2.5
E F1(a)2.5 E F0(then r)2.5 E(etur)-.18 E(n)-.15 E F1(x;)2.5 E F0
(end loop;)145.5 262 Q(end case;)138 274 Q(else)128 286 Q F1(/*error*/;)
2.5 E F0(end case;)128 298 Q(end op ceil;)120.5 310 Q(op di)120.5 334 Q
(v)-.1 E F1(\(a,b\);)A F0(case of)128 346 Q 143 358 138 358 DL 2.5
(\(is integer)128 358 R F1(a)2.5 E 212.72 358 207.72 358 DL F0(and is)
182.43 358 Q(integer)5 E F1 14.39(b\): $)2.5 F(inte)2.5 E(ger di)-.15 E
(vision)-.25 E F0(if)138 370 Q F1(b)2.5 E F2(=)2.5 E F1(0)2.5 E F0(then)
2.5 E F1(/*error*/;)2.5 E F0(end if)2.5 E F1(;)A 2.5(x:)138 382 S F2(=)
-2.5 E F0(abs)2.5 E F1(a;)2.5 E 2.5(y:)138 394 S F2(=)-2.5 E F1(0;)2.5 E
(\()138 406 Q F0(while)A F1 2.5(x>)2.5 G F2(=)-2.5 E F0(abs)2.5 E F1
(b\))2.5 E 2.5(x-)145.5 418 S(:)-2.5 E F2(=)A F0(abs)2.5 E F1(b;)2.5 E
2.5(y+)145.5 430 S(:)-2.5 E F2(=)A F1(1;)2.5 E F0(end while;)138 442 Q
-.18(re)138 454 S(tur).18 E(n)-.15 E F1 2.5(y*)2.5 G F0(sign)A F1 2.5
(a*)2.5 G F0(sign)A F1(b;)2.5 E F0(else)128 466 Q F1(/*error*/;)2.5 E F0
(end case;)128 478 Q(end op di)120.5 490 Q(v;)-.1 E(op domain)120.5 514
Q F1(\(a\);)A F0(case of)128 526 Q 143 538 138 538 DL 2.5(\(is map)128
538 R F1 95.77(a\): $)2.5 F(domain of map)2.5 E F0 -.18(re)138 550 S
(tur).18 E(n)-.15 E F1({x : [x,y])2.5 E F0(in)2.5 E F1(a};)2.5 E F0
(else)128 562 Q F1(/*error*/;)2.5 E F0(end case;)128 574 Q
(end op domain;)120.5 586 Q(op e)120.5 610 Q -.1(ve)-.15 G(n).1 E F1
(\(a\);)A F0(case of)128 622 Q 143 634 138 634 DL 2.5(\(is integer)128
634 R F1 84.67(a\): $)2.5 F(test e)2.5 E -.15(ve)-.25 G 2.5(ni).15 G
(nte)-2.5 E(ger)-.15 E EP
%%Page: 100 101
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 100).1 E -.18(re)138 130 S
(tur).18 E(n)-.15 E/F1 10/Times-Roman@0 SF(a)2.5 E F0(mod)2.5 E F1(2)2.5
E/F2 10/Symbol SF(=)2.5 E F1(0;)2.5 E F0(else)128 142 Q F1(/*error*/;)
2.5 E F0(end case;)128 154 Q(end op e)120.5 166 Q -.1(ve)-.15 G(n;).1 E
(op \214x)120.5 190 Q F1(\(a\);)A F0(case of)128 202 Q .4 LW 143 214 138
214 DL 2.5(\(is r)128 214 R(eal)-.18 E F1 98.18(a\): $)2.5 F(con)2.5 E
-.15(ve)-.4 G(rt real to inte).15 E(ger)-.15 E F0(assert exists)138 226
Q F1(x:)2.5 E F2(=)A F1(1,2.. |)A F0(\215oat)2.5 E F1 2.5(x>)2.5 G F0
(abs)A F1(a;)2.5 E F0 -.18(re)138 238 S(tur).18 E(n)-.15 E F1
(\(x - 1\) *)2.5 E F0(sign)2.5 E F1(a;)2.5 E F0(else)128 250 Q F1
(/*error*/;)2.5 E F0(end case;)128 262 Q(end op \214x;)120.5 274 Q
(op \215oat)120.5 298 Q F1(\(a\);)A F0(case of)128 310 Q 143 322 138 322
DL 2.5(\(is integer)128 322 R F1 84.67(a\): $)2.5 F(con)2.5 E -.15(ve)
-.4 G(rt inte).15 E(ger to real)-.15 E F0 -.18(re)138 334 S(tur).18 E(n)
-.15 E F1(/* result of con)2.5 E -.15(ve)-.4 G(rting a to real */;).15 E
F0(else)128 346 Q F1(/*error*/;)2.5 E F0(end case;)128 358 Q
(end op \215oat;)120.5 370 Q(op \215oor)120.5 394 Q F1(\(a\);)A F0
(case of)128 406 Q 143 418 138 418 DL 2.5(\(is r)128 418 R(eal)-.18 E F1
98.18(a\): $)2.5 F(\215oor of real)2.5 E F0(case of)138 430 Q
(\(a < 0.0\):)138 442 Q(loop init)148 454 Q F1 2.5(x:)2.5 G F2(=)-2.5 E
F1(0;)2.5 E F0(doing)2.5 E F1 2.5(x-)2.5 G(:)-2.5 E F2(=)A F1(1;)2.5 E
F0(do)2.5 E(if \215oat y <)153 466 Q F2(=)A F0 2.5(at)2.5 G(hen r)-2.5 E
(etur)-.18 E(n)-.15 E F1(x;)2.5 E F0(end loop)148 478 Q F1(;)A(\(a >)138
490 Q F2(=)A F1(0.0\):)2.5 E F0(loop init)148 502 Q F1 2.5(i:)2.5 G F2
(=)-2.5 E F1(0;)2.5 E F0(doing)2.5 E F1 2.5(i+)2.5 G(:)-2.5 E F2(=)A F1
(1;)2.5 E F0(do)2.5 E(if \215oat)153 514 Q F1 2.5(i>a)2.5 G F0(then r)A
(etur)-.18 E(n)-.15 E F1 2.5(i-1)2.5 G(;)-2.5 E F0(end loop;)148 526 Q
(end case;)138 538 Q(else)128 550 Q F1(/*error*/;)2.5 E F0(end case;)128
562 Q(end op \215oor;)120.5 574 Q(op fr)120.5 598 Q(om\(wr)-.18 E F1(a,)
2.5 E F0(rw)2.5 E F1(b\);)2.5 E F0(case of)128 610 Q 143 622 138 622 DL
2.5(\(is set)128 622 R F1 102.44(b\): $)2.5 F(tak)2.5 E 2.5(ef)-.1 G
(rom set)-2.5 E 2.5(a:)138 634 S F2(=)-2.5 E F0(arb)2.5 E F1(b;)2.5 E F0
(if)138 646 Q F1 2.5(a/)2.5 G F2(=)-2.5 E F0(om then)2.5 E F1(b)2.5 E F0
(less)2.5 E F1(:)A F2(=)A F1(a;)2.5 E F0(end;)2.5 E -.18(re)138 658 S
(tur).18 E(n)-.15 E F1(a;)2.5 E EP
%%Page: 101 102
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 101).1 E(else)128 130 Q/F1
10/Times-Roman@0 SF(/*error*/;)2.5 E F0(end case;)128 142 Q(end op fr)
120.5 154 Q(om;)-.18 E F1(op fromb\(wr a,)120.5 186.4 Q F0(rw)2.5 E F1
(b\);)2.5 E F0(case of)128 198.4 Q .4 LW 143 210.4 138 210.4 DL 2.5
(\(is string)128 210.4 R F1 99.3(b\): $)2.5 F(tak)2.5 E 2.5(ef)-.1 G
(rom start of string)-2.5 E F0(if)138 222.4 Q F1(b)2.5 E/F2 10/Symbol SF
(=)2.5 E F1 -.74('')2.5 G F0(then)3.24 E F1 2.5(a:)145.5 234.4 S F2(=)
-2.5 E F0(om;)2.5 E(else)138 246.4 Q F1 2.5(a:)145.5 258.4 S F2(=)-2.5 E
F1(b\(1\);)2.5 E 2.5(b:)145.5 270.4 S F2(=)-2.5 E F1(b\(2..\);)2.5 E F0
(end if;)138 282.4 Q 140.5 294.4 135.5 294.4 DL 2.5(\(is tuple)125.5
294.4 R F1 105.13(b\): $)2.5 F(tak)2.5 E 2.5(ef)-.1 G
(rom start of tuple)-2.5 E F0(if)138 306.4 Q F1(b)2.5 E F2(=)2.5 E F1
1.666([])2.5 G F0(then).834 E F1 2.5(a:)145.5 318.4 S F2(=)-2.5 E F0
(om;)2.5 E(else)138 330.4 Q F1 2.5(a:)145.5 342.4 S F2(=)-2.5 E F1
(b\(1\);)2.5 E 2.5(b:)145.5 354.4 S F2(=)-2.5 E F1(b\(2..\);)2.5 E F0
(end if;)138 366.4 Q(else)128 378.4 Q F1(/*error*/;)2.5 E F0(end op fr)
120.5 390.4 Q(omb;)-.18 E(op fr)120.5 414.4 Q(ome\(wr)-.18 E F1(a,)2.5 E
F0(rw)2.5 E F1(b\);)2.5 E F0(case of)128 426.4 Q 143 438.4 138 438.4 DL
2.5(\(is tuple)128 438.4 R F1 102.63(b\): $)2.5 F(tak)2.5 E 2.5(ef)-.1 G
(rom end of tuple)-2.5 E F0(if)138 450.4 Q F1(b)2.5 E F2(=)2.5 E F1
1.666([])2.5 G F0(then).834 E F1 2.5(a:)145.5 462.4 S F2(=)-2.5 E F0
(om;)2.5 E(else)138 474.4 Q F1 2.5(a:)145.5 486.4 S F2(=)-2.5 E F1
(b\(#b\);)2.5 E 2.5(b:)145.5 498.4 S F2(=)-2.5 E F1(b\(1..#b-1\);)2.5 E
F0(end if;)138 510.4 Q 143 522.4 138 522.4 DL 2.5(\(is string)128 522.4
R F1 99.3(b\): $)2.5 F(tak)2.5 E 2.5(ef)-.1 G(rom end of string)-2.5 E
F0(if)138 534.4 Q F1(b)2.5 E F2(=)2.5 E F1 -.74('')2.5 G F0(then)3.24 E
F1 2.5(a:)145.5 546.4 S F2(=)-2.5 E F0(om;)2.5 E(else)138 558.4 Q F1 2.5
(a:)138 570.4 S F2(=)-2.5 E F1(b\(#b\);)2.5 E 2.5(b:)138 582.4 S F2(=)
-2.5 E F1(b\(1..#b-1\);)2.5 E F0(end if;)138 594.4 Q -.18(re)138 606.4 S
(tur).18 E(n)-.15 E F1(a;)2.5 E F0(else)128 618.4 Q F1(/*error*/;)2.5 E
F0(end case;)128 630.4 Q(end op fr)120.5 642.4 Q(ome;)-.18 E EP
%%Page: 102 103
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 102).1 E(op impl)120.5 142
Q/F1 10/Times-Roman@0 SF(\(a,b\);)A F0(case of)128 154 Q .4 LW 143 166
138 166 DL 2.5(\(is boolean)128 166 R F1(a)2.5 E 216.07 166 211.07 166
DL F0(and is)185.78 166 Q(boolean)5 E F1(b\):)2.5 E F0 -.18(re)138 178 S
(tur).18 E 2.5(n\()-.15 G(not)-2.5 E F1(a\))2.5 E F0(or)2.5 E F1(b;)2.5
E F0(else)128 190 Q F1(/*error*/;)2.5 E F0(end case;)128 202 Q
(end op impl;)120.5 214 Q(op in)120.5 250 Q F1(\(a,b\);)A F0(if)128 262
Q F1(a)2.5 E/F2 10/Symbol SF(=)2.5 E F0(om then)2.5 E F1(/*error*/;)2.5
E F0(end if;)2.5 E(case of)128 274 Q 143 286 138 286 DL 2.5(\(is set)128
286 R F1 112.64(b\): $)2.5 F(test element in set)2.5 E F0 -.18(re)138
298 S(tur).18 E 2.5(ne)-.15 G(xists)-2.5 E F1(x)2.5 E F0(in)2.5 E F1 2.5
(b|x)2.5 G F2(=)A F1(a;)2.5 E(\()135.5 310 Q 150.5 310 145.5 310 DL F0
2.5(is string)138.83 310 R F1(a)2.5 E 215.23 310 210.23 310 DL F0
(and is)184.94 310 Q(string)5 E F1 27.07(b\): $)2.5 F
(test character in string)2.5 E F0(if)138 322 Q F1(#a /)2.5 E F2(=)A F1
(1)2.5 E F0(then)2.5 E F1(/*error*/; end;)2.5 E(return e)138 334 Q
(xists x:)-.15 E F2(=)A F1(1..#b | a)A F2(=)2.5 E F1(b\(x\);)2.5 E(\()
128 346 Q 143 346 138 346 DL F0 2.5(is tuple)131.33 346 R F1 102.63
(b\): $)2.5 F(test element in tuple)2.5 E F0 -.18(re)138 358 S(tur).18 E
2.5(ne)-.15 G(xists)-2.5 E F1(x:)2.5 E F2(=)A F1(1..#b | a)A F2(=)2.5 E
F1(b\(x\);)2.5 E F0(else)128 370 Q F1(/*error*/;)2.5 E F0(end case;)128
382 Q(op incs)120.5 406 Q F1(\(a,b\);)A F0(case of)128 418 Q 143 430 138
430 DL 2.5(\(is set)128 430 R F1(a)2.5 E 194.39 430 189.39 430 DL F0
(and is)164.1 430 Q(set)5 E F1 61.25(b\): $)2.5 F(set inclusion test)2.5
E F0 -.18(re)138 442 S(tur).18 E 2.5(nf)-.15 G(orall)-2.75 E F1(x)2.5 E
F0(in)2.5 E F1 2.5(b|x)2.5 G F0(in)A F1(a;)2.5 E F0(else)128 454 Q F1
(/*error*/;)2.5 E F0(end case;)128 466 Q(end op incs;)120.5 478 Q
(op less)120.5 502 Q F1(\(a,b\);)A F0(case of)128 514 Q 143 526 138 526
DL 2.5(\(is set)128 526 R F1 113.2(a\): $)2.5 F(remo)2.5 E .3 -.15(ve s)
-.15 H(et element).15 E F0 -.18(re)138 538 S(tur).18 E(n)-.15 E F1({x)
2.5 E F0(in)2.5 E F1 2.5(a|x/)2.5 G F2(=)-2.5 E F1(b};)2.5 E F0(else)128
550 Q F1(/*error*/;)2.5 E F0(end op less;)140.5 562 Q F1
(op lessf\(a,b\);)120.5 594.4 Q F0(case of)128 606.4 Q 143 618.4 138
618.4 DL 2.5(\(is map)128 618.4 R F1 91.51(a\): $)2.5 F(remo)2.5 E .3
-.15(ve m)-.15 H(ap element).15 E F0 -.18(re)138 630.4 S(tur).18 E(n)
-.15 E F1({[x,y])2.5 E F0(in)2.5 E F1 2.5(a|x/)2.5 G F2(=)-2.5 E F1(b};)
2.5 E F0(else)128 642.4 Q F1(/*error*/;)2.5 E EP
%%Page: 103 104
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 103).1 E(end case;)128 130
Q(end op lessf;)120.5 142 Q(op max)120.5 166 Q/F1 10/Times-Roman@0 SF
(\(a,b\);)A F0(case of)128 178 Q .4 LW 143 190 138 190 DL 2.5
(\(is integer)128 190 R F1(a)2.5 E 212.72 190 207.72 190 DL F0(and is)
182.43 190 Q(integer)5 E F1 10.13(b\): $)2.5 F(inte)2.5 E(ger maximum)
-.15 E F0(case of)138 202 Q F1(\(a>)138 214 Q/F2 10/Symbol SF(=)A F1
(b\):)A F0 -.18(re)2.5 G(tur).18 E(n)-.15 E F1(a;)2.5 E(\(a<)138 226 Q
F2(=)A F1(b\):)A F0 -.18(re)2.5 G(tur).18 E(n)-.15 E F1(b;)2.5 E F0
(end case;)138 238 Q 140.5 250 135.5 250 DL 2.5(\(is r)125.5 250 R(eal)
-.18 E F1(a)2.5 E 196.71 250 191.71 250 DL F0(and is)166.42 250 Q -.18
(re)5 G(al).18 E F1 39.65(b\): $)2.5 F(real maximum)2.5 E F0(case of)138
262 Q F1(\(a>)138 274 Q F2(=)A F1(b\):)A F0 -.18(re)2.5 G(tur).18 E(n)
-.15 E F1(a;)2.5 E(\(a<)138 286 Q F2(=)A F1(b\):)A F0 -.18(re)2.5 G(tur)
.18 E(n)-.15 E F1(b;)2.5 E F0(end case;)138 298 Q(else)128 310 Q F1
(/*error*/;)2.5 E F0(end case;)128 322 Q(end op max;)120.5 334 Q(op min)
120.5 358 Q F1(\(a,b\);)A F0(case of)128 370 Q 143 382 138 382 DL 2.5
(\(is integer)128 382 R F1(a)2.5 E 212.72 382 207.72 382 DL F0(and is)
182.43 382 Q(integer)5 E F1 10.13(b\): $)2.5 F(inte)2.5 E(ger minimum)
-.15 E F0(case of)138 394 Q F1(\(a<)138 406 Q F2(=)A F1(b\):)A F0 -.18
(re)2.5 G(tur).18 E(n)-.15 E F1(a;)2.5 E(\(a>)138 418 Q F2(=)A F1(b\):)A
F0 -.18(re)2.5 G(tur).18 E(n)-.15 E F1(b;)2.5 E F0(end case;)138 430 Q
143 442 138 442 DL 2.5(\(is r)128 442 R(eal)-.18 E F1(a)2.5 E 199.21 442
194.21 442 DL F0(and is)168.92 442 Q -.18(re)5 G(al).18 E F1 37.15
(b\): $)2.5 F(real minimum)2.5 E F0(case of)138 454 Q F1(\(a<)138 466 Q
F2(=)A F1(b\):)A F0 -.18(re)2.5 G(tur).18 E(n)-.15 E F1(a;)2.5 E(\(a>)
138 478 Q F2(=)A F1(b\):)A F0 -.18(re)2.5 G(tur).18 E(n)-.15 E F1(b;)2.5
E F0(end case;)138 490 Q(else)128 502 Q F1(/*error*/;)2.5 E F0
(end case;)128 514 Q(end op min;)120.5 526 Q(op mod)120.5 550 Q F1
(\(a,b\);)A F0(case of)128 562 Q 143 574 138 574 DL 2.5(\(is integer)128
574 R F1(a)2.5 E 212.72 574 207.72 574 DL F0(and is)182.43 574 Q
(integer)5 E F1 10.13(b\): $)2.5 F(inte)2.5 E(ger modulus)-.15 E F0 -.18
(re)138 586 S(tur).18 E(n)-.15 E F1 2.5(a-b*\()2.5 G(a)-2.5 E F0(di)2.5
E(v)-.1 E F1(b\);)2.5 E F0(else)128 598 Q F1(/*error*/;)2.5 E F0
(end case;)128 610 Q(end op mod;)120.5 622 Q(op not)120.5 646 Q F1
105.12(\(a\); $)B(logical not)2.5 E F0(case of)128 658 Q EP
%%Page: 104 105
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 104).1 E/F1 10
/Times-Roman@0 SF(\(a)128 130 Q/F2 10/Symbol SF(=)A F1(TR)A(UE\):)-.4 E
F0 -.18(re)138 142 S(tur).18 E(n)-.15 E F1 -.74(FA)2.5 G(LSE;).74 E(\(a)
128 154 Q F2(=)A F1 -.74(FA)C(LSE\):).74 E F0 -.18(re)138 166 S(tur).18
E(n)-.15 E F1(TR)2.5 E(UE;)-.4 E F0(else)128 178 Q F1(/*error*/;)2.5 E
F0(end case;)128 190 Q(end op not;)120.5 202 Q(op notin)120.5 226 Q F1
(\(a,b\):)A F0(case of)128 238 Q .4 LW 143 250 138 250 DL 2.5(\(is set)
128 250 R F1 98.18(b\): $)2.5 F(test element not in set)2.5 E F0 -.18
(re)138 262 S(tur).18 E 2.5(nn)-.15 G(ot)-2.5 E F1(a)2.5 E F0(in)2.5 E
F1(b;)2.5 E(\()128 274 Q 143 274 138 274 DL F0 2.5(is string)131.33 274
R F1(a)2.5 E 207.73 274 202.73 274 DL F0(and is)177.44 274 Q(string)5 E
F1 20.11(b\): $)2.5 F(test character not in string)2.5 E F0 -.18(re)138
286 S(tur).18 E 2.5(nn)-.15 G(ot)-2.5 E F1(a)2.5 E F0(in)2.5 E F1(b;)2.5
E(\()128 298 Q 143 298 138 298 DL F0 2.5(is tuple)131.33 298 R F1 88.17
(b\): $)2.5 F(test element not in tuple)2.5 E F0 -.18(re)138 310 S(tur)
.18 E 2.5(nn)-.15 G(ot)-2.5 E F1(a)2.5 E F0(in)2.5 E F1(b;)2.5 E F0
(else)128 322 Q F1(/*error*/;)2.5 E F0(end case;)128 334 Q
(end op notin;)120.5 346 Q(op npo)120.5 370 Q(w)-.1 E F1(\(a,b\);)A F0
(case of)128 382 Q 143 394 138 394 DL 2.5(\(is integer)128 394 R F1(a)
2.5 E 212.72 394 207.72 394 DL F0(and is)182.43 394 Q(set)5 E F1 28.46
(b\): $)2.5 F(subsets of gi)2.5 E -.15(ve)-.25 G 2.5(ns).15 G(ize)-2.5 E
F0(if)138 406 Q F1(a<0)2.5 E F0(then)2.5 E F1(/*error*/;)2.5 E F0(end;)
2.5 E -.18(re)138 418 S(tur).18 E(n)-.15 E F1({x)2.5 E F0(in po)2.5 E(w)
-.1 E F1 2.5(b|#)2.5 G(x)-2.5 E F2(=)2.5 E F1(a};)2.5 E(\()128 430 Q 143
430 138 430 DL F0 2.5(is set)131.33 430 R F1(a)2.5 E 194.39 430 189.39
430 DL F0(and is)164.1 430 Q(integer)5 E F1 28.46(b\): $)2.5 F
(subsets of gi)2.5 E -.15(ve)-.25 G 2.5(ns).15 G(ize)-2.5 E F0(if)130.5
442 Q F1(b<0)2.5 E F0(then)2.5 E F1(/*error*/;)2.5 E F0(end;)2.5 E -.18
(re)138 454 S(tur).18 E(n)-.15 E F1({x)2.5 E F0(in po)2.5 E(w)-.1 E F1
2.5(a|#)2.5 G(x)-2.5 E F2(=)2.5 E F1(b};)2.5 E F0(else)128 466 Q F1
(/*error*/;)2.5 E F0(end case;)128 478 Q(end op npo)120.5 490 Q(w;)-.1 E
F1(op odd\(a\);)120.5 522.4 Q F0(case of)128 534.4 Q 143 546.4 138 546.4
DL 2.5(\(is integer)128 546.4 R F1 89.25(a\): $)2.5 F(test odd inte)2.5
E(ger)-.15 E F0 -.18(re)138 558.4 S(tur).18 E(n)-.15 E F1(a)2.5 E F0
(mod)2.5 E F1 2.5(2/)2.5 G F2(=)-2.5 E F1(0;)2.5 E F0(else)128 570.4 Q
F1(/*error*/;)2.5 E F0(end case;)128 582.4 Q(end op odd;)120.5 594.4 Q
(op or)120.5 618.4 Q F1 110.91(\(a,b\); $)B(logical inclusi)2.5 E .3
-.15(ve o)-.25 H(r).15 E F0(case of)128 630.4 Q F1(\(a)128 642.4 Q F2(=)
2.5 E F1(TR)2.5 E(UE\):)-.4 E EP
%%Page: 105 106
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 105).1 E/F1 10
/Times-Roman@0 SF 2.5($s)277.79 130 S(kip e)-2.5 E -.25(va)-.25 G
(luation of b and).25 E F0 -.18(re)138 142 S(tur).18 E(n)-.15 E F1(TR)
2.5 E(UE;)-.4 E(\(a)128 154 Q/F2 10/Symbol SF(=)2.5 E F1 -.74(FA)2.5 G
(LSE\):).74 E 2.5($e)277.79 166 S -.25(va)-2.75 G(luate b and do).25 E
F0(case of)138 178 Q F1(\(b)138 190 Q F2(=)2.5 E F1(TR)2.5 E(UE\):)-.4 E
F0 -.18(re)145.5 202 S(tur).18 E(n)-.15 E F1(TR)2.5 E(UE;)-.4 E(\(b)138
214 Q F2(=)2.5 E F1 -.74(FA)2.5 G(LSE\):).74 E(\\)113 226 Q F0 -.18(re)
40 G(tur).18 E(n)-.15 E F1 -.74(FA)2.5 G(LSE;).74 E F0(else)138 238 Q F1
(/*error*/;)2.5 E F0(end case;)138 250 Q(else)125.5 262 Q F1(/*error*/;)
2.5 E F0(end case;)125.5 274 Q(end op or;)120.5 286 Q(op po)120.5 310 Q
(w)-.1 E F1(\(a\);)A F0(case of)125.5 322 Q .4 LW 140.5 334 135.5 334 DL
2.5(\(is set)125.5 334 R F1 110.08(a\): $)2.5 F(po)2.5 E(wer set of set)
-.25 E F0(if)138 346 Q F1(a)2.5 E F2(=)A F1 1.666({})C F0(then).834 E
-.18(re)145.5 358 S(tur).18 E(n)-.15 E F1 -.834({{ }};)2.5 F F0(else)138
370 Q F1 2.5(x:)145.5 382 S F2(=)-2.5 E F0(arb)2.5 E F1(a;)2.5 E 2.5(y:)
145.5 394 S F2(=)-2.5 E F0(po)2.5 E(w)-.1 E F1(\(A)2.5 E F0(less)2.5 E
F1(x\);)2.5 E F0 -.18(re)138 406 S(tur).18 E(n)-.15 E F1 2.5(y+{)2.5 G
(z)-2.5 E F0(with)2.5 E F1 2.5(x:z)2.5 G F0(in)A F1(y};)2.5 E F0(end;)
138 418 Q(else)125.5 430 Q F1(/*error*/;)2.5 E F0(end case;)125.5 442 Q
(end op po)120.5 454 Q(w;)-.1 E(op random)120.5 478 Q F1(\(a\);)A F0
(case of)125.5 490 Q 140.5 502 135.5 502 DL 2.5(\(is integer)125.5 502 R
F1 91.75(a\): $)2.5 F(random inte)2.5 E(ger)-.15 E F0(if)138 514 Q F1
2.5(a>)2.5 G F2(=)-2.5 E F1(0)2.5 E F0(then)2.5 E -.18(re)145.5 526 S
(tur).18 E 2.5<6e8c>-.15 G 2.5(xr)-2.5 G(andom \215oat)-2.5 E F1
(\(a+1\);)2.5 E F0(else)130.5 538 Q -.18(re)145.5 550 S(tur).18 E 2.5
<6e8c>-.15 G 2.5(xr)-2.5 G(andom \215oat)-2.5 E F1(\(a-1\);)2.5 E F0
(end if;)138 562 Q 140.5 574 135.5 574 DL 2.5(\(is r)125.5 574 R(eal)
-.18 E F1 105.26(a\): $)2.5 F(random real)2.5 E F0(if)138 586 Q F1(a)2.5
E F2(=)2.5 E F1(0.0)2.5 E F0(then)2.5 E -.18(re)145.5 598 S(tur).18 E(n)
-.15 E F1(0.0;)2.5 E F0(elseif)138 610 Q F1 2.5(a<0)2.5 G(.0)-2.5 E F0
(then)2.5 E -.18(re)145.5 622 S(tur).18 E 2.5(n-r)-.15 G(andom)-2.5 E F1
(-a;)2.5 E F0(else)138 634 Q -.18(re)145.5 646 S(tur).18 E(n)-.15 E F1
(/* random real in the)2.5 E(half open interv)153 658 Q(al [0,a\) */;)
-.25 E EP
%%Page: 106 107
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 106).1 E/F1 10
/Times-Roman@0 SF(\()125.5 130 Q .4 LW 140.5 130 135.5 130 DL F0 2.5
(is tuple)128.83 130 R F1 100.07(a\): $)2.5 F(random element from tuple)
2.5 E F0(if)138 142 Q F1(#a)2.5 E/F2 10/Symbol SF(=)2.5 E F1(0)2.5 E F0
(then)2.5 E -.18(re)145.5 154 S(tur).18 E 2.5(no)-.15 G(m;)-2.5 E(else)
138 166 Q -.18(re)145.5 178 S(tur).18 E(n)-.15 E F1(a\(1 +)2.5 E F0
(random)2.5 E F1(\(#a-1\)\);)2.5 E F0(end if;)138 190 Q 140.5 202 135.5
202 DL 2.5(\(is set)125.5 202 R F1 110.08(a\): $)2.5 F
(random element from set)2.5 E F0(if)138 214 Q F1(a)2.5 E F2(=)2.5 E F1
1.666({})2.5 G F0(then).834 E -.18(re)145.5 226 S(tur).18 E 2.5(no)-.15
G(m;)-2.5 E(else)138 238 Q -.18(re)145.5 250 S(tur).18 E 2.5(nr)-.15 G
(andom)-2.5 E F1([x: x)2.5 E F0(in)2.5 E F1(a];)2.5 E F0(end if;)138 262
Q(else)125.5 274 Q F1(/*error*/;)2.5 E F0(end case;)125.5 286 Q
(end op random;)120.5 298 Q(op range)120.5 322 Q F1(\(a\);)A F0(case of)
125.5 334 Q 140.5 346 135.5 346 DL 2.5(\(is map)125.5 346 R F1 102.85
(a\): $)2.5 F(range of map)2.5 E F0 -.18(re)138 358 S(tur).18 E(n)-.15 E
F1({y : [x,y])2.5 E F0(in)2.5 E F1(a};)2.5 E F0(else)125.5 370 Q F1
(/*error*/;)2.5 E F0(end case;)125.5 382 Q(end op range;)120.5 394 Q F1
(op sign\(a\);)120.5 426.4 Q F0(case of)125.5 438.4 Q 140.5 450.4 135.5
450.4 DL 2.5(\(is integer)125.5 450.4 R F1 179.64(a\): $)2.5 F(inte)2.5
E(ger sign)-.15 E F0(case of)138 462.4 Q F1(\(a<0\):)138 474.4 Q F0 -.18
(re)2.5 G(tur).18 E(n)-.15 E F1(-1;)2.5 E(\(a)138 486.4 Q F2(=)A F1
(0\):)A F0 -.18(re)2.5 G(tur).18 E(n)-.15 E F1(0;)2.5 E(\(a>0\):)138
498.4 Q F0 -.18(re)2.5 G(tur).18 E(n)-.15 E F1(+1;)2.5 E F0(end case;)
138 510.4 Q 140.5 522.4 135.5 522.4 DL 2.5(\(is r)125.5 522.4 R(eal)-.18
E F1 193.15(a\): $)2.5 F(real sign)2.5 E F0(case of)138 534.4 Q F1
(\(a<0.0\):)138 546.4 Q F0 -.18(re)2.5 G(tur).18 E(n)-.15 E F1(-1;)2.5 E
(\(a)138 558.4 Q F2(=)A F1(0.0\):)A F0 -.18(re)2.5 G(tur).18 E(n)-.15 E
F1(0;)2.5 E(\(a>0.0\):)138 570.4 Q F0 -.18(re)2.5 G(tur).18 E(n)-.15 E
F1(+1;)2.5 E F0(end case;)138 582.4 Q(else)125.5 594.4 Q F1(/*error*/;)
2.5 E F0(end case;)125.5 606.4 Q(end op sign;)120.5 618.4 Q(op str)120.5
642.4 Q F1(\(a\);)A EP
%%Page: 107 108
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 107).1 E(const)125.5 130 Q
/F1 10/Times-Roman@0 SF(dg)2.5 E/F2 10/Symbol SF(=)2.5 E F1
('0123456789',)2.5 E(uc)140.5 142 Q F2(=)2.5 E F1
('ABCDEFGHIJKLMNOPQRSTUVWXYZ',)2.5 E(lc)140.5 154 Q F2(=)2.5 E F1
('abcdefghijklmnopqrstuvwxyz',)2.5 E(q)143 166 Q F2(=)2.5 E F1 -.74
('''')2.5 G(;).74 E F0(case of)125.5 178 Q .4 LW 140.5 190 135.5 190 DL
2.5(\(is boolean)125.5 190 R F1 176.29(a\): $)2.5 F(boolean to string)
2.5 E F0(case)138 202 Q F1(a)2.5 E F0(of)2.5 E F1(\('TR)143 214 Q
(UE'\):)-.4 E F0 -.18(re)5 G(tur).18 E(n)-.15 E F1('#T';)2.5 E(\('F)143
226 Q(ALSE'\):)-.74 E F0 -.18(re)2.5 G(tur).18 E(n)-.15 E F1('#F';)2.5 E
F0(end case;)138 238 Q 140.5 250 135.5 250 DL 2.5(\(is integer)125.5 250
R F1 179.64(a\): $)2.5 F(inte)2.5 E(ger to string)-.15 E 2.5(y:)138 262
S F2(=)-2.5 E F0(abs)2.5 E F1(a;)2.5 E(\()138 274 Q F0(until)A F1(y)2.5
E F2(=)A F1(0\))A 2.5(x+)143 286 S(:)-2.5 E F2(=)A F1(dg\(y)2.5 E F0
(mod)2.5 E F1(10\);)2.5 E 2.5(y:)143 298 S F2(=)-2.5 E F1(y)2.5 E F0(di)
2.5 E(v)-.1 E F1(10;)2.5 E F0(end;)138 310 Q -.18(re)138 322 S(tur).18 E
2.5(ni)-.15 G(f)-2.5 E F1 2.5(a<0)2.5 G F0(then)A F1('-' + x)2.5 E F0
(else)2.5 E F1(x)2.5 E F0(end;)2.5 E 140.5 334 135.5 334 DL 2.5
(\(is string)125.5 334 R F1 184.63(a\): $)2.5 F(string to string)2.5 E
F0(if)138 346 Q F1 2.5(a/)2.5 G F2(=)-2.5 E F1 -.74('')2.5 G F0(and)3.24
E F1(a\(1\))2.5 E F0(in)2.5 E F1(uc + lc)2.5 E F0(and)2.5 E -.25(fo)153
358 S(rall).25 E F1(x)2.5 E F0(in)2.5 E F1(a\(2..\) | x)2.5 E F0(in)2.5
E F1(uc+lc+dg+'_')2.5 E F0(then)2.5 E -.18(re)143 370 S(tur).18 E(n)-.15
E F1(a;)2.5 E F0(else)138 382 Q -.18(re)143 394 S(tur).18 E(n)-.15 E F1
2.5(q+)2.5 G 2.5(/[)-2.5 G F0(if)-2.5 E F1(y)2.5 E F2(=)A F1(q)A F0
(then)2.5 E F1(q+q)2.5 E F0(else)2.5 E F1(y)2.5 E F0(end)2.5 E F1 2.5
(:y)2.5 G F0(in)A F1(a] + q;)2.5 E F0(end if)138 406 Q F1(;)A(\(a)133
418 Q F2(=)A F0(om)A F1 197.48(\): $)B(unde\214ned to string)2.5 E F0
-.18(re)138 430 S(tur).18 E(n)-.15 E F1('*';)2.5 E(\()125.5 442 Q 140.5
442 135.5 442 DL F0 2.5(is tuple)128.83 442 R F1 187.96(a\): $)2.5 F
(tuple to string)2.5 E 2.5(x:)138 454 S F2(=)-2.5 E F1 -.74('')2.5 G(;)
.74 E(\()138 466 Q F0 -.25(fo)C(r).25 E F1(y)2.5 E F0(in)2.5 E F1(a\))
2.5 E 2.5(x+)143 478 S(:)-2.5 E F2(=)A F1 2.5(''+)2.5 G F0(str)A F1(y;)
2.5 E F0(end;)138 490 Q -.18(re)138 502 S(tur).18 E(n)-.15 E F1
('[' + x\(2..\) + ']';)2.5 E(\()125.5 514 Q 140.5 514 135.5 514 DL F0
2.5(is set)128.83 514 R F1 197.97(a\): $)2.5 F(set to string)2.5 E(\()
138 526 Q F0 -.25(fo)C(r).25 E F1(y)2.5 E F0(in)2.5 E F1(a\))2.5 E 2.5
(x+)143 538 S(:)-2.5 E F2(=)A F1 2.5(''+)2.5 G F0(str)A F1(y;)2.5 E F0
(end;)138 550 Q -.18(re)138 562 S(tur).18 E(n)-.15 E F1
('{' + X\(2..\) + '}';)2.5 E F0(end op str;)120.5 574 Q(op susbset)120.5
598 Q F1(\(a,b\);)A F0(case of)125.5 610 Q 140.5 622 135.5 622 DL 2.5
(\(is set)125.5 622 R F1(a)2.5 E 191.89 622 186.89 622 DL F0(and is)
161.6 622 Q(set)5 E F1 146.02(b\): $)2.5 F(subset test)2.5 E F0 -.18(re)
138 634 S(tur).18 E 2.5(nf)-.15 G(orall x in)-2.75 E F1 2.5(a|x)2.5 G F0
(in)A F1(b;)2.5 E F0(else)125.5 646 Q F1(/*error*/;)2.5 E F0(end case;)
125.5 658 Q EP
%%Page: 108 109
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 7)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 108).1 E(end op subset;)
120.5 130 Q(op with)120.5 154 Q/F1 10/Times-Roman@0 SF(\(a,b\);)A F0
(case of)125.5 166 Q .4 LW 140.5 178 135.5 178 DL 2.5(\(is set)125.5 178
R F1 197.97(a\): $)2.5 F(add element to set)2.5 E F0 -.18(re)138 190 S
(tur).18 E(n)-.15 E F1({x : x)2.5 E F0(in)2.5 E F1([y : y)2.5 E F0(in)
2.5 E F1(a])2.5 E F0(with)2.5 E F1(b};)2.5 E 197.14(\(tuple\(a\)\): $)
125.5 202 R(add element to tuple)2.5 E 2.5(x:)138 214 S/F2 10/Symbol SF
(=)-2.5 E F1(a;)2.5 E(x\(#x+1\) :)138 226 Q F2(=)A F1(b;)2.5 E F0 -.18
(re)138 238 S(tur).18 E(n)-.15 E F1(x;)2.5 E F0(else)125.5 250 Q F1
(/*error*/;)2.5 E F0(end case;)125.5 262 Q(end op with)120.5 274 Q F1(;)
A EP
%%Page: 109 110
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(CHAPTER 8)270.666 132.4 R(SYNT)281.874 175.6 Q
(AX)-1.08 E/F1 10/Times-Roman@0 SF(This chapter contains a formal de\
\214nition of the permitted syntax of SETL programs.)133 307 Q/F2 10
/Times-Bold@0 SF 2.5(8.1. Syntax)108 323.2 R(Rules)2.5 E F1 .606
(This section contains the syntax rules. A modi\214ed form of)133 339.4
R F2(bnf)3.105 E F1 .605(is used. The syntactic types)3.105 F .737(\(or\
 non-terminals\) are strings of small letters, possibly including a und\
erline.)108 351.4 R .737(The possible alter)5.737 F(-)-.2 E(nati)108
363.4 Q -.15(ve)-.25 G .397
(s, if there is more than one, are separated by the | character).15 F
5.397(.T)-.55 G .397(erminals are e)-6.097 F .397(xpressed in one)-.15 F
(of the follo)108 375.4 Q(wing possible notations:)-.25 E 3.28(As)133
391.6 S .78(tring of upper case letters represents a reserv)-3.28 F .78
(ed w)-.15 F .78(ord and can appear in either upper or)-.1 F(lo)133
403.6 Q(wer case letters, or a mixture, in the \214nal program.)-.25 E
2.66(As)133 419.8 S .16(pecial character)-2.66 F 2.66(,o)-.4 G 2.659(rs)
-2.66 G .159
(equence of special characters, represents itself as a terminal symbol.)
-2.659 F .992(In the case of the characters [)133 431.8 R -.834(]{ } |,)
1.666 F .992(enclosing quotes are used to a)3.492 F -.2(vo)-.2 G .993
(id confusion with the).2 F
(meta-syntactic use of these characters in the description.)133 443.8 Q
.702(Special non-terminal types whose names be)133 460 R .4 LW 366.354
460 361.354 460 DL .702(gin with tok)311.61 460 R .701
(represent sets of terminals which)8.202 F(are described in the follo)
133 472 Q(wing section.)-.25 E(The follo)108 488.2 Q
(wing notations are used to e)-.25 E(xtend the normal)-.15 E F2(bnf)2.5
E F1(con)2.5 E -.15(ve)-.4 G(ntions:).15 E 2.642(As)133 504.4 S .142
(equence of items surrounded by brack)-2.642 F .143(ets [)-.1 F 2.643
(]i)1.666 G 2.643(su)-2.643 G .143
(sed to indicate that the sequence of items)-2.643 F(is optional.)133
516.4 Q 2.939(As)133 532.6 S .439
(equence of items surrounded by braces {)-2.939 F 2.939(}i)1.666 G 2.939
(su)-2.939 G .439(sed to indicate that the sequence of items)-2.939 F
(may be repeated an)133 544.6 Q 2.5(yn)-.15 G
(umber of times, or entirely omitted.)-2.5 E .377
(The sequence [...] is used to represent the tok)133 560.8 R .377
(en sequences in an ender where the tok)-.1 F .377(ens are)-.1 F
(copied from the corresponding start construction.)133 572.8 Q .412
(In some cases, the)108 589 R F2(bnf)2.912 E F1 .411(notation gi)2.912 F
-.15(ve)-.25 G 2.911(ni).15 G 2.911(si)-2.911 G .411
(nadequate to state certain restrictions or additional rules.)-2.911 F
1.42(Special comments preceded by a dollar sign are gi)108 601 R -.15
(ve)-.25 G 3.921(na).15 G 1.421(fter the rule in question to pro)-3.921
F 1.421(vide the)-.15 F(needed additional information.)108 613 Q 4.155
(AS)108 629.2 S 359.524 629.2 354.524 629.2 DL 1.654
(ETL program consists of a terminal string of type setl)124.935 629.2 R
1.654(prog, together with an)5 F 4.154(yr)-.15 G(eferenced)-4.154 E
346.3 641.2 341.3 641.2 DL
(libraries, which are obtained as terminal strings of type lib)108 641.2
Q(unit.)5 E F2(Chapter 8)108 756 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 109).1 E EP
%%Page: 110 111
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 8)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 110).1 E .4 LW 161.565 130
156.565 130 DL/F1 10/Times-Roman@0 SF 2.5(setl prog)142.675 130 R
242.685 130 237.685 130 DL 2.5(simple prog)211.015 130 R 2.5(|m)2.5 G
303.015 130 298.015 130 DL 2.5(odule prog)275.795 130 R 174.345 154
169.345 154 DL 2.5(simple prog)142.675 154 R F0(pr)18.34 E(ogram)-.18 E
268.885 154 263.885 154 DL F1 2.5(tok nam;)251.105 154 R 238.875 166
233.875 166 DL 2.5({lib item})218.515 166 R({decl})218.515 178 Q({stmt})
218.515 190 Q({re\214ne})218.515 202 Q({routine})218.515 214 Q F0(end)
211.015 226 Q F1([)2.5 E F0(pr)A(ogram)-.18 E F1([...] ] ;)2.5 E 177.675
250 172.675 250 DL 2.5(module prog)142.675 250 R 236.005 250 231.005 250
DL 2.5(direc unit)211.015 250 R 277.395 250 272.395 250 DL 2.5
(prog unit)254.065 250 R 335.255 250 330.255 250 DL 2.5({module unit})
295.455 250 R 167.665 274 162.665 274 DL 2.5(direc unit)142.675 274 R F0
(dir)27.79 E(ectory)-.18 E 270.545 274 265.545 274 DL F1 2.5(tok nam)
252.765 274 R(;)2.5 E 238.875 286 233.875 286 DL 2.5({lib item})218.515
286 R({decl})218.515 298 Q F0(pr)218.515 310 Q(ogram)-.18 E 276.385 310
271.385 310 DL F1 2.5(tok nam)258.605 310 R 2.5(-t)2.5 G 319.715 310
314.715 310 DL 2.5(ok nam)304.715 310 R 2.5(:d)2.5 G 360.825 310 355.825
310 DL 2.5(ir spec)349.715 310 R({)218.515 322 Q F0(module)A 275.265 322
270.265 322 DL F1 2.5(tok nam)257.485 322 R 2.5(-t)2.5 G 318.595 322
313.595 322 DL 2.5(ok nam)303.595 322 R 2.5(:d)2.5 G 359.705 322 354.705
322 DL 2.5(ir spec)348.595 322 R(})2.5 E F0(end)211.015 334 Q F1([)2.5 E
F0(dir)A(ectory)-.18 E F1([...] ] ;)2.5 E 158.235 358 153.235 358 DL 2.5
(lib unit)142.675 358 R F0(library)37.22 E 261.295 358 256.295 358 DL F1
2.5(tok nam)243.515 358 R(;)2.5 E 238.875 370 233.875 370 DL 2.5
({lib item})218.515 370 R({e)218.515 382 Q 253.715 382 248.715 382 DL
2.5(xport item})227.605 382 R({decl})218.515 394 Q(routine)218.515 406 Q
({routine})218.515 418 Q F0(end)211.015 430 Q F1([)2.5 E F0(library)A F1
([...] ] ;)2.5 E 158.785 454 153.785 454 DL 2.5(dir spec)142.675 454 R
231.925 454 226.925 454 DL 2.5({dir item})211.015 454 R 283.465 454
278.465 454 DL 2.5({decl repr})257.005 454 R 158.785 478 153.785 478 DL
2.5(dir item)142.675 478 R 233.225 478 228.225 478 DL 2.5(read item)
211.015 478 R 2.5(|w)2.5 G 283.555 478 278.555 478 DL 2.5(rite item)
265.225 478 R(|)2.5 E 246.575 490 241.575 490 DL 2.5(imports item)
211.015 490 R 2.5(|e)2.5 G 305.645 490 300.645 490 DL 2.5(xports item)
275.645 490 R 164.885 514 159.885 514 DL 2.5(read item)142.675 514 R F0
-.18(re)28.35 G(ads).18 E 254.445 514 249.445 514 DL F1 2.5(tok nam)
236.665 514 R 301.745 514 296.745 514 DL({, tok)274.165 514 Q(nam} ;)5 E
168.225 538 163.225 538 DL 2.5(write item)142.675 538 R F0(writes)25.01
E 257.395 538 252.395 538 DL F1 2.5(tok nam)239.615 538 R 304.695 538
299.695 538 DL({, tok)277.115 538 Q(nam} ;)5 E 178.235 562 173.235 562
DL 2.5(imports item)142.675 562 R F0(imports)15 E F1(pspec {, pspec} ;)
2.5 E -.15(ex)142.675 586 S 176.965 586 171.965 586 DL 2.5(ports item)
151.965 586 R F0(exports)16.27 E F1(pspec {, pspec} ;)2.5 E 158.235 610
153.235 610 DL 2.5(lib item)142.675 610 R F0(libraries)35 E 267.405 610
262.405 610 DL F1 2.5(tok nam)249.625 610 R 314.705 610 309.705 610 DL
({, tok)287.125 610 Q(nam} ;)5 E 228.795 634 223.795 634 DL 43.07
(pspec tok)142.675 634 R(nam [ \( pspeca {, pspeca} \) ])5 E(|)5 E
228.795 646 223.795 646 DL 2.5(tok nam)211.015 646 R 2.5([\({)2.5 G
(pspeca ,} pspeca \( * \) ])-2.5 E EP
%%Page: 111 112
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 8)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 111).1 E/F1 10
/Times-Roman@0 SF(pspeca)142.675 130 Q F0(rd)41.13 E .4 LW 244.625 130
239.625 130 DL F1 2.5([tok nam])223.515 130 R F0(wr)211.015 142 Q
246.285 142 241.285 142 DL F1 2.5([tok nam])225.175 142 R F0(rw)211.015
154 Q 246.285 154 241.285 154 DL F1 2.5([tok nam])225.175 154 R 232.125
166 227.125 166 DL 2.5([tok nam])211.015 166 R 166.005 190 161.005 190
DL 2.5(prog unit)142.675 190 R F0(pr)29.45 E(ogram)-.18 E 268.885 190
263.885 190 DL F1 2.5(tok nam)251.105 190 R 2.5(-t)2.5 G 312.215 190
307.215 190 DL 2.5(ok nam)297.215 190 R(;)2.5 E 238.875 202 233.875 202
DL 2.5({lib item})218.515 202 R 227.125 214 222.125 214 DL 2.5(dir spec)
211.015 214 R({decl})218.515 226 Q({stmt})218.515 238 Q({re\214ne})
218.515 250 Q({routine})218.515 262 Q F0(end)211.015 274 Q F1([)2.5 E F0
(pr)A(ogram)-.18 E F1([...] ] ;)2.5 E 177.675 298 172.675 298 DL 2.5
(module unit)142.675 298 R F0(module)17.78 E 262.965 298 257.965 298 DL
F1 2.5(tok nam)245.185 298 R 2.5(-t)2.5 G 306.295 298 301.295 298 DL 2.5
(ok nam)291.295 298 R(;)2.5 E 238.875 310 233.875 310 DL 2.5({lib item})
218.515 310 R 227.125 327 222.125 327 DL 2.5(ir spec)216.015 327 R
({decl})218.515 334 Q(routine)218.515 346 Q({routine})218.515 358 Q F0
(end)211.015 370 Q F1([)2.5 E F0(module)A F1([...] ] ;)2.5 E(decl)
142.675 394 Q F0 -.1(va)51.68 G(r).1 E 245.635 394 240.635 394 DL F1 2.5
(tok nam)227.855 394 R 292.935 394 287.935 394 DL({, tok)265.355 394 Q
(nam} [: B)5 E -.4(AC)-.35 G(K] ; |).4 E F0(const)211.015 406 Q F1
(declcon {, declcon} ; |)2.5 E F0(init)211.015 418 Q 245.745 418 240.745
418 DL F1 2.5(tok nam)227.965 418 R(:)2.5 E/F2 10/Symbol SF(=)A 339.645
418 334.645 418 DL F1(constant {, tok)276.235 418 Q(nam :)5 E F2(=)A F1
(constant} ;)2.5 E 232.675 430 227.675 430 DL 2.5(decl repr)211.015 430
R 228.795 454 223.795 454 DL 34.74(declcon tok)142.675 454 R(nam [)5 E
F2(=)2.5 E F1(constant ])2.5 E 32.51(constant [sign])142.675 478 R
254.625 478 249.625 478 DL 2.5(tok int)236.845 478 R 2.5(|[)2.5 G
315.795 478 310.795 478 DL(sign] tok)275.515 478 Q(rea |)5 E 228.795 490
223.795 490 DL 2.5(tok str)211.015 490 R 2.5(|t)2.5 G 263.575 490
258.575 490 DL 2.5(ok rea)248.575 490 R(|)2.5 E
("{" [constant {, constant}] "}" |)211.015 502 Q
("[" [constant {, constant}] "]" |)211.015 514 Q
("{" constant [, constant] .. constant "}" |)211.015 526 Q
("[" constant [, constant] .. constant "]")211.015 538 Q 49.17(sign +)
142.675 562 R F2(-)211.015 574 Q 164.335 598 159.335 598 DL F1 2.5
(decl repr)142.675 598 R F0 -.18(re)30.58 G(pr).18 E F1(repr {repr})2.5
E F0(end)2.5 E F1([)2.5 E F0 -.18(re)C(pr).18 E F1([...]] ;)2.5 E
228.795 622 223.795 622 DL 49.74(repr tok)142.675 622 R 276.095 622
271.095 622 DL(nam {, tok)228.795 622 Q(nam} : mode ; |)5 E F0(mode)
211.015 634 Q 254.625 634 249.625 634 DL F1 2.5(tok nam)236.845 634 R
2.5(:m)2.5 G(ode ; |)-2.5 E F0(base)211.015 646 Q 250.185 646 245.185
646 DL F1 2.5(tok nam)232.405 646 R 297.485 646 292.485 646 DL({, tok)
269.905 646 Q(nam} : mode ; |)5 E F0(plex base)211.015 658 Q 270.465 658
265.465 658 DL F1 2.5(tok nam)252.685 658 R 317.765 658 312.765 658 DL
({, tok)290.185 658 Q(nam} ;)5 E EP
%%Page: 112 113
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 8)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 112).1 E/F1 10
/Times-Roman@0 SF(mode)142.675 142 Q F0(atom)46.12 E F1(|)2.5 E F0
(boolean)2.5 E F1(|)2.5 E F0 -.18(re)2.5 G(al).18 E F1(|)2.5 E F0
(string)2.5 E F1(|)2.5 E F0(integer)211.015 154 Q F1 2.5([\(t)2.5 G .4
LW 272.945 154 267.945 154 DL 2.5(ok int)257.945 154 R 311.285 154
306.285 154 DL(.. tok)286.005 154 Q(int \) ] |)5 E F0(tuple)211.015 166
Q F1 2.5([\(m)2.5 G 306.835 166 301.835 166 DL(ode \) [ \( tok)254.625
166 Q(int \) ] ] |)5 E F0(tuple)211.015 178 Q F1 2.5(\(m)2.5 G
(ode , mode {, mode} \) |)-2.5 E F0(set)211.015 190 Q F1 2.5([\(m)2.5 G
(ode \) ] |)-2.5 E(basetype)211.015 202 Q F0(set)2.5 E F1 2.5(\(e)2.5 G
(mode \) |)-2.5 E(maptype \( mode \) [ mode ] |)211.015 214 Q
(basetype maptype \( emode \) [ mode ] |)211.015 226 Q F0(pr)211.015 238
Q(ocedur)-.18 E(e)-.18 E F1 2.5([\([m)2.5 G
(ode {, mode} ] \) ] [ mode ] |)-2.5 E F0(op)211.015 250 Q F1 2.5(\(m)
2.5 G(ode [, mode] \) mode |)-2.5 E 2.5(*|e)211.015 262 S 274.455 262
269.455 262 DL(mode | tok)227.455 262 Q(nam)5 E(emode)142.675 286 Q F0
(elmt)41.68 E 250.175 286 245.175 286 DL F1 2.5(tok nam)232.395 286 R
2.5(|t)2.5 G 292.175 286 287.175 286 DL 2.5(ok nam)277.175 286 R
(basetype)142.675 310 Q F0(local)33.35 E F1(|)2.5 E F0 -.18(re)2.5 G
(mote).18 E F1(|)2.5 E F0(sparse)2.5 E F1(maptype)142.675 334 Q F0(map)
33.9 E F1(|)2.5 E F0(mmap)2.5 E F1(|)2.5 E F0(smapa)2.5 E F1 37.51
(routine procedure)142.675 358 R 2.5(|o)2.5 G(pdef)-2.5 E(procedure)
142.675 382 Q F0(pr)28.36 E(oc)-.18 E 250.555 382 245.555 382 DL F1 2.5
(tok nam)232.775 382 R([ar)2.5 E(glist] ;)-.18 E(body)218.515 394 Q F0
(end)211.015 406 Q F1([)2.5 E F0(pr)A(oc)-.18 E F1([...] ] ;)2.5 E(ar)
142.675 430 Q 41.02(glist \()-.18 F(formal {, formal} \) |)2.5 E 2.5
(\({)211.015 442 S(formal ,} formal \( * \) \))-2.5 E 39.18
(formal [formtype])142.675 466 R 274.615 466 269.615 466 DL 2.5(tok nam)
256.835 466 R(formtype)142.675 490 Q F0(rd)31.68 E F1(|)2.5 E F0(rw)2.5
E F1(|)2.5 E F0(wr)2.5 E F1(opdef)142.675 514 Q F0(op)45.57 E 241.855
514 236.855 514 DL F1 2.5(tok ubo)224.075 514 R 2.5(\(t)2.5 G 282.965
514 277.965 514 DL 2.5(ok nam)267.965 514 R 2.5(,t)2.5 G 325.465 514
320.465 514 DL 2.5(ok nam)310.465 514 R 2.5(\);)2.5 G(body)218.515 526 Q
F0(end [op)211.015 538 Q F1([...] ] ; |)2.5 E F0(op)211.015 550 Q
241.855 550 236.855 550 DL F1 2.5(tok uuo)224.075 550 R 2.5(\(t)2.5 G
282.965 550 277.965 550 DL 2.5(ok nam)267.965 550 R 2.5(\);)2.5 G(body)
218.515 562 Q F0(end)211.015 574 Q F1([)2.5 E F0(op)A F1([...] ] ;)2.5 E
45.84(body {decl})142.675 598 R({stmt})211.015 610 Q({re\214ne})211.015
622 Q 228.795 646 223.795 646 DL 43.07(re\214ne tok)142.675 646 R
(nam :: {stmt})5 E EP
%%Page: 113 114
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 8)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 113).1 E .4 LW 233.595 130
228.595 130 DL/F1 10/Times-Roman@0 SF 48.61(stmt {tok)142.675 130 R
285.625 130 280.625 130 DL(nam :} stmt)233.595 130 Q(body)5 E 164.905
154 159.905 154 DL 2.5(stmt body)142.675 154 R 238.785 154 233.785 154
DL 2.5(assert stm)211.015 154 R(|)2.5 E 241.015 166 236.015 166 DL 2.5
(assign stm)211.015 166 R(|)2.5 E 230.455 178 225.455 178 DL 2.5
(call stm)211.015 178 R(|)2.5 E 233.225 190 228.225 190 DL 2.5(case stm)
211.015 190 R(|)2.5 E 233.235 202 228.235 202 DL 2.5(cont stm)211.015
202 R(|)2.5 E -.15(ex)211.015 214 S 230.865 214 225.865 214 DL 2.5
(it stm)220.305 214 R(|)2.5 E -.1(fa)211.015 226 S 229.245 226 224.245
226 DL 2.5(il stm)218.685 226 R(|)2.5 E 233.795 238 228.795 238 DL 2.5
(goto stm)211.015 238 R(|)2.5 E 222.125 250 217.125 250 DL 2.5(if stm)
211.015 250 R(|)2.5 E 233.795 262 228.795 262 DL 2.5(loop stm)211.015
262 R(|)2.5 E 233.235 274 228.235 274 DL 2.5(pass stm)211.015 274 R(|)
2.5 E 231.575 286 226.575 286 DL 2.5(quit stm)211.015 286 R(|)2.5 E
239.895 298 234.895 298 DL 2.5(return stm)211.015 298 R(|)2.5 E 232.685
310 227.685 310 DL 2.5(stop stm)211.015 310 R(|)2.5 E 247.665 322
242.665 322 DL 2.5(succeed stm)211.015 322 R(|)2.5 E 236.015 334 231.015
334 DL 2.5(yield stm)211.015 334 R 170.445 358 165.445 358 DL 2.5
(assert stm)142.675 358 R F0(assert)26.12 E F1 -.15(ex)2.5 G(pr;).15 E
172.675 382 167.675 382 DL 2.5(assign stm)142.675 382 R 246.295 382
241.295 382 DL(lhs [tok)211.015 382 Q(bop] :)5 E/F2 10/Symbol SF(=)A F1
-.15(ex)2.5 G(pr ;).15 E 162.115 406 157.115 406 DL 2.5(call stm)142.675
406 R(toknam [ \( [ e)34.45 E(xpr {, e)-.15 E(xpr} ] \) ] ;)-.15 E
164.885 430 159.885 430 DL 2.5(case stm)142.675 430 R 233.225 430
228.225 430 DL 252.675 430 247.675 430 DL 2.5(case stm t)211.015 430 R
2.5(|c)2.5 G 284.665 430 279.665 430 DL 304.115 430 299.115 430 DL 2.5
(ase stm c)266.895 430 R 233.225 442 228.225 442 DL 252.675 442 247.675
442 DL 2.5(case stm c)211.015 442 R 164.885 466 159.885 466 DL 2.5
(case stmt)142.675 466 R F0(case of)28.9 E F1 2.5({\()218.515 478 S F0
(expr)A F1({,)2.5 E F0(expr)2.5 E F1 2.5(}\):{)C(stmt} })-2.5 E([)
218.515 490 Q F0(else)A F1({stmt} ])2.5 E F0(end)211.015 502 Q F1([)2.5
E F0(case)A F1 2.5(];)C 164.885 526 159.885 526 DL 184.335 526 179.335
526 DL 2.5(case stm c)142.675 526 R F0(case)22.24 E F1 -.15(ex)2.5 G(pr)
.15 E F0(of)2.5 E F1 2.5({\(c)218.515 538 S
(onstant {, constant} \) : {stmt} })-2.5 E([)218.515 550 Q F0(else)A F1
({stmt} ])2.5 E F0(end)211.015 562 Q F1([)2.5 E F0(case)A F1([...] ];)
2.5 E 164.895 586 159.895 586 DL 2.5(cont stm)142.675 586 R F0(continue)
31.67 E F1([...] ;)2.5 E -.15(ex)142.675 610 S 162.525 610 157.525 610
DL 2.5(it stm)151.965 610 R F0(exit)34.04 E F1(;)2.5 E -.1(fa)142.675
634 S 160.905 634 155.905 634 DL 2.5(il stm)150.345 634 R F0(fail)35.66
E F1(;)2.5 E 165.455 658 160.455 658 DL 2.5(goto stm)142.675 658 R F0
(goto)31.11 E 249.625 658 244.625 658 DL F1 2.5(tok nam)231.845 658 R(;)
2.5 E EP
%%Page: 114 115
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 8)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 114).1 E .4 LW 153.785 142
148.785 142 DL/F1 10/Times-Roman@0 SF 2.5(if stm)142.675 142 R F0(if)
42.78 E F1 -.15(ex)2.5 G(pr).15 E F0(then)2.5 E({stmt})218.515 154 Q
({elseif)218.515 166 Q F1 -.15(ex)2.5 G(pr).15 E F0(then)2.5 E F1
({stmt}})2.5 E([)218.515 178 Q F0(else)A F1({stmt}])2.5 E F0(end)211.015
190 Q F1([)2.5 E F0(if)A F1([...] ] ;)2.5 E 165.455 214 160.455 214 DL
2.5(loop stm)142.675 214 R F0(loop)31.11 E F1(loopiter)2.5 E F0(do)2.5 E
F1({stmt})2.5 E F0(end)2.5 E F1([)2.5 E F0(loop)A F1([...] ] ;)2.5 E 2.5
(\(l)211.015 226 S(oopiter \) {stmt})-2.5 E F0(end)2.5 E F1([...] ;)2.5
E(loopiter)142.675 250 Q F0 -.25(fo)37.23 G(r).25 E F1(iterator |)2.5 E
([init] [doing] [while] [step] [until] [term])211.015 262 Q(init)142.675
286 Q F0(init)55 E F1({stmt})2.5 E(doing)142.675 310 Q F0(doing)45.56 E
F1({stmt})2.5 E(while)142.675 334 Q F0(while)46.12 E F1 -.15(ex)2.5 G
(pr).15 E(step)142.675 358 Q F0(step)52.23 E F1({stmt})2.5 E(until)
142.675 382 Q F0(until)50 E F1 -.15(ex)2.5 G(pr).15 E(term)142.675 406 Q
F0(term)50.01 E F1({stmt})2.5 E 164.895 430 159.895 430 DL 2.5(pass stm)
142.675 430 R F0(pass)31.67 E F1(;)2.5 E 163.235 454 158.235 454 DL 2.5
(quit stm)142.675 454 R F0(quit)33.33 E F1([...] ;)2.5 E 171.555 478
166.555 478 DL 2.5(return stm)142.675 478 R F0 -.18(re)25.01 G(tur).18 E
(n)-.15 E F1([e)2.5 E(xpr] ;)-.15 E 164.345 502 159.345 502 DL 2.5
(stop stm)142.675 502 R F0(stop)32.22 E F1(;)2.5 E 179.325 526 174.325
526 DL 2.5(succeed stm)142.675 526 R F0(succeed)17.24 E F1(;)2.5 E
167.675 550 162.675 550 DL 2.5(yield stm)142.675 550 R F0(yield)28.89 E
F1 -.15(ex)2.5 G(pr ;).15 E 36.96(iterator iterelmt)142.675 574 R
({, iterelmt} [ "|" e)2.5 E(xpr ])-.15 E 34.73(iterelmt lhs)142.675 598
R F0(in)2.5 E F1 -.15(ex)2.5 G(pr |).15 E(lhs)211.015 610 Q/F2 10/Symbol
SF(=)2.5 E 250.955 610 245.955 610 DL F1 2.5(tok nam)233.175 610 R 2.5
(\(l)2.5 G(hs {, lhs} \) |)-2.5 E(lhs)211.015 622 Q F2(=)2.5 E 250.955
622 245.955 622 DL F1 2.5(tok nam)233.175 622 R 2.5({l)2.5 G
(hs {, lhs} })-2.5 E 228.795 646 223.795 646 DL 54.17(lhs tok)142.675
646 R(nam |)5 E([" lhst [, lhst} "]" |)211.015 658 Q EP
%%Page: 115 116
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 8)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 115).1 E/F1 10
/Times-Roman@0 SF(lhs \( e)211.015 130 Q(xpr {, e)-.15 E(xpr} \) |)-.15
E(lhs { e)211.015 142 Q(xpr {, e)-.15 E(xpr} })-.15 E 51.39(lhst lhs)
142.675 166 R 2.5(|-)2.5 G -.15(ex)142.675 190 S .4 LW 228.795 190
223.795 190 DL 48.22(pr tok)151.965 190 R(uop e)5 E(xpr |)-.15 E 228.795
202 223.795 202 DL 2.5(tok bop)211.015 202 R 2.5(/e)2.5 G(xpr |)-2.65 E
-.15(ex)211.015 214 S 248.915 214 243.915 214 DL(pr tok)220.305 214 Q
(bop e)5 E(xpr |)-.15 E -.15(ex)211.015 226 S(pr [tok.bop] :\\\(eq e).15
E(xpr |)-.15 E -.15(ex)211.015 238 S 248.915 238 243.915 238 DL(pr tok)
220.305 238 Q(bop / e)5 E(xpr |)-.15 E(bopnd |)211.015 250 Q(lhs)211.015
262 Q F0(fr)2.5 E(om)-.18 E F1(lhs |)2.5 E(lhs)211.015 274 Q F0(fr)2.5 E
(omb)-.18 E F1(lhs |)2.5 E(lhs)211.015 286 Q F0(fr)2.5 E(ome)-.18 E F1
(lhs |)2.5 E F0(exists)211.015 298 Q F1(iterelmt {, iterelmt} "|" e)2.5
E(xpr |)-.15 E F0(notexists)211.015 310 Q F1
(iterelmt {, iterelmt} "|" e)2.5 E(xpr |)-.15 E F0 -.25(fo)211.015 322 S
(rall).25 E F1(iterelmt {, iterelmt} "|" e)2.5 E(xpr |)-.15 E 228.795
346 223.795 346 DL 40.84(bopnd tok)142.675 346 R 264.135 346 259.135 346
DL(int | tok)228.795 346 Q 301.125 346 296.125 346 DL(rea | tok)264.135
346 Q 335.905 346 330.905 346 DL(str | tok)301.125 346 Q(nam |)5 E(TR)
211.015 358 Q(UE | F)-.4 E(ALSE |)-.74 E F0(om)2.5 E F1(|)2.5 E F0
(newat)2.5 E F1(|)2.5 E F0(eof)2.5 E F1(|)2.5 E F0(nar)2.5 E(gs)-.1 E F1
(|)2.5 E F0(le)2.5 E(v)-.15 E F1(|)2.5 E F0(ok)2.5 E F1(|)2.5 E F0(date)
2.5 E F1(|)2.5 E F0(time)2.5 E F1(|)2.5 E 2.5(\(e)211.015 370 S 269.505
370 264.505 370 DL(xpr \) | case)221.135 370 Q -.15(ex)5 G 305.235 370
300.235 370 DL(pr | if)278.795 370 Q -.15(ex)5 G(pr |).15 E("[" [ e)
211.015 382 Q(xpr {, e)-.15 E(xpr} ] "]" |)-.15 E("[" former "]" |)
211.015 394 Q("{" [ e)211.015 406 Q(xpr {, e)-.15 E(xpr} ] "}" |)-.15 E
("{" former "}" |)211.015 418 Q(bopnd \( e)211.015 430 Q(xpr {, e)-.15 E
(xpr} \) |)-.15 E(bopnd \( e)211.015 442 Q(xpr .. [ e)-.15 E(xpr ] \) |)
-.15 E(bopnd "{" e)211.015 454 Q(xpr {, e)-.15 E(xpr} "}" |)-.15 E F0
(expr)211.015 466 Q F1({stmt})2.5 E F0(end)2.5 E F1 38.63(former e)
142.675 490 R(xpr : iterator |)-.15 E -.15(ex)211.015 502 S(pr [, e).15
E(xpr] .. e)-.15 E(xpr |)-.15 E(lhs)211.015 514 Q F0(in)2.5 E F1 -.15
(ex)2.5 G(pr "|" e).15 E(xpr)-.15 E 164.885 538 159.885 538 DL 2.5
(case e)142.675 538 R 233.225 538 228.225 538 DL 26.01(xpr case)169.175
538 R -.15(ex)5 G 255.845 538 250.845 538 DL 2.5(pr t)242.515 538 R 2.5
(|c)2.5 G 287.835 538 282.835 538 DL 2.5(ase e)270.065 538 R 310.455 538
305.455 538 DL 2.5(xpr c)292.125 538 R 164.885 562 159.885 562 DL 2.5
(case e)142.675 562 R 187.505 562 182.505 562 DL 2.5(xpr t)169.175 562 R
F0(case of)20.73 E F1(casetb {, casetb})218.515 574 Q F0(else)2.5 E F1
-.15(ex)2.5 G(pr).15 E F0(end)211.015 586 Q F1 40.85(casetb \()142.675
610 R -.15(ex)2.5 G(pr {, e).15 E(xpr} \) : e)-.15 E(xpr)-.15 E 164.885
634 159.885 634 DL 2.5(case e)142.675 634 R 187.505 634 182.505 634 DL
2.5(xpr e)169.175 634 R F0(case)19.07 E F1 -.15(ex)2.5 G(pr).15 E F0(of)
2.5 E F1(caseeb {, caseeb})218.515 646 Q F0(else)2.5 E F1 -.15(ex)2.5 G
(pr).15 E F0(end)211.015 658 Q EP
%%Page: 116 117
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 8)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 116).1 E/F1 10
/Times-Roman@0 SF 39.19(caseeb \()142.675 142 R
(constant {, constant} \) : e)2.5 E(xpr)-.15 E .4 LW 153.785 166 148.785
166 DL 2.5(if e)142.675 166 R(xpr)-.15 E F0(if)39.61 E F1 -.15(ex)2.5 G
(pr).15 E F0(then)2.5 E F1 -.15(ex)218.515 178 S(pr).15 E({)211.015 190
Q F0(elseif)A F1 -.15(ex)2.5 G(pr).15 E F0(then)2.5 E F1 -.15(ex)2.5 G
(pr}).15 E F0(else)211.015 202 Q F1 -.15(ex)2.5 G(pr).15 E F0(end)
211.015 214 Q F1 .159(In these rules, there are certain tok)108 242.2 R
.159(en substitutions which are allo)-.1 F .16(wed. The follo)-.25 F .16
(wing rules indicate)-.25 F 1.323(the possible substitutions. The only \
reason that these are stated as separate rules is to a)108 254.2 R -.2
(vo)-.2 G 1.323(id an).2 F(unnecessary duplication of man)108 266.2 Q
2.5(yr)-.15 G(ules which w)-2.5 E(ould otherwise be required.)-.1 E .811
(In an)133 282.4 R 3.311(yr)-.15 G .811(ule where the set brack)-3.311 F
.811(ets "{" and "}" appear)-.1 F 3.311(,t)-.4 G .811
(he substitutions << and >> may be)-3.311 F(made, to ef)108 294.4 Q
(fecti)-.25 E -.15(ve)-.25 G(ly generate an e).15 E(xtra alternati)-.15
E -.15(ve)-.25 G(.).15 E .436(In an)133 310.6 R 2.936(yr)-.15 G .436
(ule where the tuple brack)-2.936 F .436(ets [ and ] appear)-.1 F 2.935
(,t)-.4 G .435(he substitutions \(/ and /\) may be made,)-2.935 F(to ef)
108 322.6 Q(fecti)-.25 E -.15(ve)-.25 G(ly generate an e).15 E
(xtra alternati)-.15 E -.15(ve)-.25 G(.).15 E 1.941(The sequence of tw)
133 338.8 R 4.441(od)-.1 G 1.941(ots .. which is used for v)-4.441 F
1.942(arious range constructs may al)-.25 F -.1(wa)-.1 G 1.942(ys be).1
F(replaced by ... instead, a sequence of three dots.)108 350.8 Q
(The character ")133 367 Q -3.332 1.666(|" m)1.666 H
(ay be replaced by the k)-1.666 E -.15(ey)-.1 G -.1(wo).15 G(rd).1 E F0
(st)2.5 E F1(where)2.5 E -.15(ve)-.25 G 2.5(ri).15 G 2.5(to)-2.5 G
(ccurs.)-2.5 E F0 2.5(8.2. T)108 391 R(ok)-.92 E(en T)-.1 E(ypes)-.74 E
F1(This section describes the tok)133 407.2 Q
(en types which were referenced in the pre)-.1 E(vious section.)-.25 E
125.22 431.2 120.22 431.2 DL/F2 10/Times-Italic@0 SF 2.5(tok p)108 431.2
R(binary oper)13.78 E(ator)-.15 E F1
(All de\214ned binary operator names, including those de\214ned using)
108 443.2 Q F0(op)2.5 E F1(de\214nitions.)2.5 E 125.22 467.2 120.22
467.2 DL F2 2.5(tok int)108 467.2 R(inte)8.22 E -.1(ge)-.4 G 2.5(rd).1 G
(enotation)-2.5 E F1 .963(An inte)108 479.2 R .962
(ger denotation is a string of digits 0-9 of an)-.15 F 3.462(yl)-.15 G
.962(ength which \214ts on one line of the source)-3.462 F
(program. It does not include an)108 491.2 Q 2.5(ys)-.15 G
(ign characters.)-2.5 E 125.22 515.2 120.22 515.2 DL F2 2.5(tok nam)108
515.2 R(identifer name)1.56 E F1 -.15(Fo)108 527.2 S .05
(rmed as a sequence of letters, digits and the underline character).15 F
2.55(,s)-.4 G .05(tarting with a letter)-2.55 F 2.55(.U)-.55 G .05
(pper and)-2.55 F(lo)108 539.2 Q .279(wer case are equi)-.25 F -.25(va)
-.25 G .279(lent. Excludes an).25 F 2.779(yo)-.15 G 2.778(ft)-2.779 G
.278(he reserv)-2.778 F .278(ed names corresponding to standard k)-.15 F
-.15(ey)-.1 G -.1(wo).15 G(rd).1 E
(and operator names, as listed in Appendix nn.)108 551.2 Q 125.22 575.2
120.22 575.2 DL F2 2.5(tok r)108 575.2 R 3.32(ea r)-.37 F
(eal denotation)-.37 E F1 3.498(Ar)108 587.2 S .999
(eal denotation is an optional string of digits, follo)-3.498 F .999
(wed by a period, follo)-.25 F .999(wed by a non-empty)-.25 F 1.401(str\
ing of digits \(note that there must be at least one digit after the de\
cimal point\). An optional)108 599.2 R -.15(ex)108 611.2 S .539
(ponent may follo).15 F 3.039(wc)-.25 G .539
(onsisting of the letter e \(upper or lo)-3.039 F .54(wer case\) follo)
-.25 F .54(wed by an optional sign)-.25 F(\(+ or)108 623.2 Q/F3 10
/Symbol SF(-)2.5 E F1 2.5(\)f)C(ollo)-2.5 E
(wed by a non-empty digit string.)-.25 E 125.22 647.2 120.22 647.2 DL F2
2.5(tok str)108 647.2 R(string denotation)8.22 E F1 3.69(As)108 659.2 S
1.19(tring denotation is an arbitrary sequence of characters enclosed u\
sing the character ' \(single)-3.69 F EP
%%Page: 117 118
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF(Chapter 8)108 84 Q(The SETL Pr)79.06 E
(ogramming Language)-.18 E -.1(Pa)84.16 G(ge 117).1 E/F1 10
/Times-Roman@0 SF .528(quote mark or apostrophe\). If this character is\
 to appear inside the string, it is written as tw)108 130 R 3.028(os)-.1
G(uc-)-3.028 E(cessi)108 142 Q .465 -.15(ve a)-.25 H .165
(postrophe characters. Note that a string denotation, lik).15 F 2.665
(ea)-.1 G .465 -.15(ny o)-2.665 H .165(ther tok).15 F .165
(en, must \214t on a sin-)-.1 F 1.267
(gle line. If a longer string is required, the ef)108 154 R 1.267
(fect is obtained by writing tw)-.25 F 3.767(oo)-.1 G 3.767(rm)-3.767 G
1.268(ore successi)-3.767 F -.15(ve)-.25 G .534
(string denotations on successi)108 166 R .834 -.15(ve l)-.25 H .534
(ines. Since the SETL language ne).15 F -.15(ve)-.25 G 3.033(ra).15 G
(llo)-3.033 E .533(ws tw)-.25 F 3.033(os)-.1 G .533(trings in adja-)
-3.033 F(cent positions, this can be unambiguously interpreted as a sin\
gle long string constant.)108 178 Q .4 LW 125.22 202 120.22 202 DL/F2 10
/Times-Italic@0 SF 2.5(tok ubo)108 202 R(user binary oper)3.78 E
(ator name)-.15 E F1 .908(Consists of a period, immediately follo)108
214 R .908(wed by a sequence of characters which meets the normal)-.25 F
215.812 226 210.812 226 DL .013(rules for an identi\214er \(tok)108 226
R .013(nam\). It is permissible for the name to be the same as an ident\
i\214er name)5 F(used else)108 238 Q
(where, the period serving to distinguish the uses.)-.25 E 125.22 262
120.22 262 DL F2 2.5(tok uop)108 262 R(unary oper)3.78 E(ator)-.15 E F1
.226(Includes all standard unary operator names, together with an)108
274 R 2.727(yu)-.15 G .227(nary operators de\214ned using an)-2.727 F F0
(op)2.727 E F1(de\214nition.)108 286 Q 125.22 310 120.22 310 DL F2 2.5
(tok uuo)108 310 R(user unary oper)3.78 E(ator name)-.15 E F1
(An identi\214er preceded by a period, e)108 322 Q
(xactly as for a binary operator)-.15 E(.)-.55 E EP
%%Page: 118 119
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF -.92(Ta)108 84 S(ble of Contents).92 E
(The SETL Pr)46.92 E(ogramming Language)-.18 E EP
%%Page: 1 120
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF -1.08(TA)241.86 161.2 S(BLE OF CONTENTS)1.08 E .4
LW 113 228.4 108 228.4 DL 114 228.4 109 228.4 DL 119 228.4 114 228.4 DL
124 228.4 119 228.4 DL 129 228.4 124 228.4 DL 134 228.4 129 228.4 DL 139
228.4 134 228.4 DL 144 228.4 139 228.4 DL 149 228.4 144 228.4 DL 154
228.4 149 228.4 DL 159 228.4 154 228.4 DL 164 228.4 159 228.4 DL 169
228.4 164 228.4 DL 174 228.4 169 228.4 DL 179 228.4 174 228.4 DL 184
228.4 179 228.4 DL 189 228.4 184 228.4 DL 194 228.4 189 228.4 DL 199
228.4 194 228.4 DL 204 228.4 199 228.4 DL 209 228.4 204 228.4 DL 214
228.4 209 228.4 DL 219 228.4 214 228.4 DL 224 228.4 219 228.4 DL 229
228.4 224 228.4 DL 234 228.4 229 228.4 DL 239 228.4 234 228.4 DL 244
228.4 239 228.4 DL 249 228.4 244 228.4 DL 254 228.4 249 228.4 DL 259
228.4 254 228.4 DL 264 228.4 259 228.4 DL 269 228.4 264 228.4 DL 274
228.4 269 228.4 DL 279 228.4 274 228.4 DL 284 228.4 279 228.4 DL 289
228.4 284 228.4 DL 294 228.4 289 228.4 DL 299 228.4 294 228.4 DL 304
228.4 299 228.4 DL 309 228.4 304 228.4 DL 314 228.4 309 228.4 DL 319
228.4 314 228.4 DL 324 228.4 319 228.4 DL 329 228.4 324 228.4 DL 334
228.4 329 228.4 DL 339 228.4 334 228.4 DL 344 228.4 339 228.4 DL 349
228.4 344 228.4 DL 354 228.4 349 228.4 DL 359 228.4 354 228.4 DL 364
228.4 359 228.4 DL 369 228.4 364 228.4 DL 374 228.4 369 228.4 DL 379
228.4 374 228.4 DL 384 228.4 379 228.4 DL 389 228.4 384 228.4 DL 394
228.4 389 228.4 DL 399 228.4 394 228.4 DL 404 228.4 399 228.4 DL 409
228.4 404 228.4 DL 414 228.4 409 228.4 DL 419 228.4 414 228.4 DL 424
228.4 419 228.4 DL 429 228.4 424 228.4 DL 434 228.4 429 228.4 DL 439
228.4 434 228.4 DL 444 228.4 439 228.4 DL 449 228.4 444 228.4 DL 454
228.4 449 228.4 DL 459 228.4 454 228.4 DL 464 228.4 459 228.4 DL 469
228.4 464 228.4 DL 474 228.4 469 228.4 DL 479 228.4 474 228.4 DL 484
228.4 479 228.4 DL 489 228.4 484 228.4 DL 494 228.4 489 228.4 DL 499
228.4 494 228.4 DL 504 228.4 499 228.4 DL/F1 10/Times-Roman@0 SF
(1.1 An Introductory Example)120.5 266.8 Q 28.5(.......................\
................................................................... 2)
4.74 F(1.2 Assignment Statements & Expressions)120.5 281.2 Q 28.5(.....\
................................................................ 3)4.72
F(1.3 Errors & Ome)120.5 295.6 Q 1.15 -.05(ga .)-.15 H 28.5(...........\
.......................................................................\
...................... 7).05 F(1.4 T)120.5 310 Q .73(uples ............\
.......................................................................\
......................................)-.45 F(7)31 E(1.5 Sets)120.5
324.4 Q 23.5(..........................................................\
................................................................... 11)
3.33 F(1.6 Maps)120.5 338.8 Q 23.5(....................................\
.......................................................................\
................ 13)2.78 F(1.7 Conditional Statements)120.5 353.2 Q 23.5
(......................................................................\
........................ 15)3.88 F(1.7.1 If Statements)128 367.6 Q 23.5
(......................................................................\
.................................. 15)4.45 F(1.7.2 Boolean V)128 382 Q
(alues & Operators)-1.11 E 23.5(.......................................\
......................................... 16)2.8 F(1.7.3 Case Statement)
128 396.4 Q 23.5(......................................................\
............................................... 18)3.06 F(1.8 Loops ...\
.......................................................................\
................................................)120.5 410.8 Q(19)26 E
(1.8.1 Set & T)128 425.2 Q(uple F)-.45 E .88(ormers ...................\
.......................................................................\
..)-.15 F(22)26 E(1.8.2 Quanti\214ed T)128 439.6 Q 2.37(ests ..........\
.......................................................................\
..................)-.7 F(23)26 E(1.8.3 Compound Operators)128 454 Q 23.5
(......................................................................\
..................... 24)3.62 F(1.9 Input/Output)120.5 468.4 Q 23.5(...\
.......................................................................\
..................................... 24)3.33 F
(1.10 Labels and the Goto Statements)120.5 482.8 Q 23.5(...............\
................................................................ 28)2.79
F(1.11 Stop Statement)120.5 497.2 Q 23.5(..............................\
.......................................................................\
.... 28)4.16 F(1.12 P)120.5 511.6 Q(ass Statement)-.15 E 23.5(.........\
.......................................................................\
......................... 28)4.87 F(1.13 Program F)120.5 526 Q 1.54(orm\
 ......................................................................\
....................................)-.15 F(29)26 E(1.13.1 Declarations)
128 540.4 Q 23.5(......................................................\
................................................. 29)4.46 F
(1.13.2 Main Program Block)128 554.8 Q 23.5(...........................\
............................................................... 29)3.06
F(1.13.3 Procedure De\214nitions)128 569.2 Q 23.5(.....................\
.................................................................... 31)
2.51 F(1.13.4 Operator De\214nitions)128 583.6 Q 23.5(.................\
.......................................................................\
... 33)2.51 F(2.1 A Curriculum Planning Problem)120.5 598 Q 23.5(......\
.......................................................................\
.. 35)4.72 F(3.1 Character Set)120.5 612.4 Q 23.5(.....................\
.......................................................................\
.................. 43)3.35 F(3.2 Syntactical T)120.5 626.8 Q(ok)-.8 E
2.02(ens ..............................................................\
.......................................)-.1 F(45)26 E(3.3 Datatypes)
120.5 641.2 Q 23.5(....................................................\
................................................................ 47)2.51
F(3.4 Denotations)120.5 655.6 Q 23.5(..................................\
.......................................................................\
....... 48)4.17 F(3.4.1 Inte)128 670 Q(ger Denotations)-.15 E 23.5(....\
.......................................................................\
................... 48)3.5 F/F2 10/Times-Bold@0 SF -.92(Ta)108 756 S
(ble of Contents).92 E(The SETL Pr)46.92 E(ogramming Language)-.18 E EP
%%Page: 2 121
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF -.92(Ta)108 84 S(ble of Contents).92 E
(The SETL Pr)46.92 E(ogramming Language)-.18 E/F1 10/Times-Roman@0 SF
(3.4.2 Real Denotations)128 130 Q 23.5(................................\
.................................................................. 48)
3.34 F(3.4.3 String Denotations)128 144.4 Q 23.5(......................\
.......................................................................\
.. 49)4.72 F(3.4.4 Boolean Denotations)128 158.8 Q 23.5(...............\
.......................................................................\
...... 49)3.34 F(3.4.5 Other Denotations)128 173.2 Q 23.5(.............\
.......................................................................\
............ 50)3.9 F(4.1 Basic Operands and Special System V)120.5
187.6 Q 1.97
(alues ..............................................................)
-1.11 F(51)26 E(4.2 Operators)120.5 202 Q 23.5(........................\
.......................................................................\
..................... 56)3.07 F(4.2.1 Unary Operators)128 216.4 Q 23.5(\
.......................................................................\
............................ 56)3.08 F(4.2.2 Binary Operators)128 230.8
Q 23.5(................................................................\
.................................. 60)3.35 F(4.2.3 Compound Operators)
128 245.2 Q 23.5(......................................................\
..................................... 64)3.62 F
(4.3 Assignment Statements)120.5 259.6 Q 23.5(.........................\
..................................................................... 6\
5)3.33 F(4.3.1 Assigning Operatoss)128 274 Q 23.5(.....................\
.......................................................................\
 69)4.45 F(4.3.2 Quanti\214ed T)128 288.4 Q 2.37(ests .................\
.......................................................................\
...........)-.7 F(71)26 E(4.3.3 Operator Precedence Rules)128 302.8 Q
23.5(..................................................................\
................ 72)3.65 F(4.3.4 Side Ef)128 317.2 Q 1.65(fects .......\
.......................................................................\
............................)-.25 F(74)26 E
(5.1 Conditional Statements & Expressions)120.5 331.6 Q 23.5(..........\
............................................................ 75)2.77 F
(5.1.1 If Statement)128 346 Q 23.5(....................................\
...................................................................... \
75)3.34 F(5.1.2 If Expression)128 360.4 Q 23.5(........................\
.......................................................................\
......... 78)3.9 F(5.1.3 Case Statement)128 374.8 Q 23.5(..............\
.......................................................................\
................ 78)3.06 F(5.1.4 Case Expression)128 389.2 Q 23.5(.....\
.......................................................................\
....................... 81)3.62 F(5.2 Loop Statement)120.5 403.6 Q 23.5
(......................................................................\
.................................... 82)3.89 F
(5.2.1 Quit & Continue Statements)128 418 Q 23.5(......................\
.......................................................... 84)3.88 F
(5.2.2 Iterator F)128 432.4 Q .16(orms ................................\
.......................................................................)
-.15 F(84)26 E(5.2.3 Set & T)128 446.8 Q(uple F)-.45 E .88(ormers .....\
.......................................................................\
................)-.15 F(86)26 E(5.3 Goto Statement ....................\
.......................................................................\
................)120.5 461.2 Q(87)26 E(5.4 Stop Statement)120.5 475.6 Q
23.5(..................................................................\
......................................... 88)4.16 F(5.5 P)120.5 490 Q
(ass Statement)-.15 E 23.5(............................................\
............................................................... 88)4.87
F(5.6 Assert Statement)120.5 504.4 Q 23.5(.............................\
.......................................................................\
.... 88)4.45 F(7.1 T)120.5 518.8 Q(ype T)-.8 E(est Operators)-.7 E 23.5
(......................................................................\
............................. 91)4.3 F(7.2 Operator De\214nitions)120.5
533.2 Q 23.5(..........................................................\
......................................... 92)2.51 F(8.1 Syntax Rules)
120.5 547.6 Q 18.5(....................................................\
.......................................................... 109)4.44 F
(8.2 T)120.5 562 Q(ok)-.8 E(en T)-.1 E 1.71(ypes ......................\
.......................................................................\
..................)-.8 F(116)21 E .4 LW 113 586 108 586 DL 114 586 109
586 DL 119 586 114 586 DL 124 586 119 586 DL 129 586 124 586 DL 134 586
129 586 DL 139 586 134 586 DL 144 586 139 586 DL 149 586 144 586 DL 154
586 149 586 DL 159 586 154 586 DL 164 586 159 586 DL 169 586 164 586 DL
174 586 169 586 DL 179 586 174 586 DL 184 586 179 586 DL 189 586 184 586
DL 194 586 189 586 DL 199 586 194 586 DL 204 586 199 586 DL 209 586 204
586 DL 214 586 209 586 DL 219 586 214 586 DL 224 586 219 586 DL 229 586
224 586 DL 234 586 229 586 DL 239 586 234 586 DL 244 586 239 586 DL 249
586 244 586 DL 254 586 249 586 DL 259 586 254 586 DL 264 586 259 586 DL
269 586 264 586 DL 274 586 269 586 DL 279 586 274 586 DL 284 586 279 586
DL 289 586 284 586 DL 294 586 289 586 DL 299 586 294 586 DL 304 586 299
586 DL 309 586 304 586 DL 314 586 309 586 DL 319 586 314 586 DL 324 586
319 586 DL 329 586 324 586 DL 334 586 329 586 DL 339 586 334 586 DL 344
586 339 586 DL 349 586 344 586 DL 354 586 349 586 DL 359 586 354 586 DL
364 586 359 586 DL 369 586 364 586 DL 374 586 369 586 DL 379 586 374 586
DL 384 586 379 586 DL 389 586 384 586 DL 394 586 389 586 DL 399 586 394
586 DL 404 586 399 586 DL 409 586 404 586 DL 414 586 409 586 DL 419 586
414 586 DL 424 586 419 586 DL 429 586 424 586 DL 434 586 429 586 DL 439
586 434 586 DL 444 586 439 586 DL 449 586 444 586 DL 454 586 449 586 DL
459 586 454 586 DL 464 586 459 586 DL 469 586 464 586 DL 474 586 469 586
DL 479 586 474 586 DL 484 586 479 586 DL 489 586 484 586 DL 494 586 489
586 DL 499 586 494 586 DL 504 586 499 586 DL EP
%%Trailer
end
%%EOF
